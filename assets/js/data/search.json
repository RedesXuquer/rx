[
  
  {
    "title": "Instalación Docker y FreeScout",
    "url": "/rx/posts/Instalacion-Freescout/",
    "categories": "Blogging, Demo",
    "tags": "typography",
    "date": "2024-05-23 04:00:00 +0000",
    





    
    "snippet": "Instalación de Docker y Docker ComposeSet up Docker’s apt repository.# Add Docker's official GPG key:sudo apt-get updatesudo apt-get install ca-certificates curlsudo install -m 0755 -d /etc/apt/key...",
    "content": "Instalación de Docker y Docker ComposeSet up Docker’s apt repository.# Add Docker's official GPG key:sudo apt-get updatesudo apt-get install ca-certificates curlsudo install -m 0755 -d /etc/apt/keyringssudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.ascsudo chmod a+r /etc/apt/keyrings/docker.asc# Add the repository to Apt sources:echo \\  \"deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \\  $(. /etc/os-release &amp;&amp; echo \"$VERSION_CODENAME\") stable\" | \\  sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/nullsudo apt-get updateTo install the latest version, run:sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-pluginVerify that the Docker Engine installation is successful by running the hello-world image.sudo docker run hello-worldUna vez ya está instalado Docker vamos a preparar el archivo con nuestras necesidades:Se pueden realizar diferentes cambios, como por ejemplo puertos y demás, pero el que si que si hay que cambiar es - SITE_URL donde hay que poner nuestra IPvi docker-compose.ymversion: '2'services:  freescout-app:    image: tiredofit/freescout    container_name: freescout-app    ports:    - 80:80    links:    - freescout-db    volumes:    ### If you want to perform customizations to the source and have access to it, then uncomment this line - This includes modules    #- ./data:/www/html    ### Or, if you just want to use Stock Freescout and hold onto persistent files like cache and session use this, one or the other.    - ./data:/data    ### If you want to just keep the original source and add additional modules uncomment this line    #- ./modules:/www/html/Modules    - ./logs/:/www/logs    environment:    - CONTAINER_NAME=freescout-app        - DB_HOST=freescout-db    - DB_NAME=freescout    - DB_USER=freescout    - DB_PASS=freescout    - SITE_URL=http://&lt;&lt;Ponemos la IP de nuestro ordenador&gt;&gt;    - ADMIN_EMAIL=admin@admin.com    - ADMIN_PASS=freescout    - ENABLE_SSL_PROXY=FALSE    - DISPLAY_ERRORS=FALSE    - TIMEZONE=America/Vancouver    restart: always  freescout-db:    image: tiredofit/mariadb    container_name: freescout-db    volumes:      - ./db:/var/lib/mysql    environment:      - ROOT_PASS=password      - DB_NAME=freescout      - DB_USER=freescout      - DB_PASS=freescout      - CONTAINER_NAME=freescout-db    restart: always  freescout-db-backup:    container_name: freescout-db-backup    image: tiredofit/db-backup    links:     - freescout-db    volumes:      - ./dbbackup:/backup    environment:      - CONTAINER_NAME=freescout-db-backup      - DB_HOST=freescout-db      - DB_TYPE=mariadb      - DB_NAME=freescout      - DB_USER=freescout      - DB_PASS=freescout      - DB01_BACKUP_INTERVAL=1440      - DB01_BACKUP_BEGIN=0000      - DB_CLEANUP_TIME=8640      - COMPRESSION=BZ      - MD5=TRUE    restart: alwaysCreamos los contenedores:docker compose up -dY ya solo queda probar nuestro servidor:http://«nuestra IP»"
  },
  
  {
    "title": "Instalación Docker",
    "url": "/rx/posts/Instalacion-Docker/",
    "categories": "Blogging, Demo",
    "tags": "typography",
    "date": "2024-05-23 04:00:00 +0000",
    





    
    "snippet": "Instalación de DockerSet up Docker’s apt repository.# Add Docker's official GPG key:sudo apt-get updatesudo apt-get install ca-certificates curlsudo install -m 0755 -d /etc/apt/keyringssudo curl -f...",
    "content": "Instalación de DockerSet up Docker’s apt repository.# Add Docker's official GPG key:sudo apt-get updatesudo apt-get install ca-certificates curlsudo install -m 0755 -d /etc/apt/keyringssudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.ascsudo chmod a+r /etc/apt/keyrings/docker.asc# Add the repository to Apt sources:echo \\  \"deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \\  $(. /etc/os-release &amp;&amp; echo \"$VERSION_CODENAME\") stable\" | \\  sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/nullsudo apt-get updateTo install the latest version, run:sudo apt-get install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-pluginVerify that the Docker Engine installation is successful by running the hello-world image.sudo docker run hello-worldUna vez ya está instalado Docker instalamos la aplicación:docker run --name some-mariadb -d -e MYSQL_ROOT_PASSWORD=hellodocker -e MYSQL_DATABASE=easyappointments mariadb:latestdocker run --name some-easyappointments -d --link some-mariadb:db -p 8888:8888 jamrizzi/easyappointments:latestUsageEnvironment Variable\tDeafult ValueBASE_URL\t“http://localhost:8888”LANGUAGE\t“english”DEBUG\tfalseDB_HOST\t“db”DB_NAME\t“easyappointments”DB_USERNAME\t“root”DB_PASSWORD\t“hellodocker”GOOGLE_SYNC_FEATURE\tfalseGOOGLE_PRODUCT_NAME\tGOOGLE_CLIENT_ID\tGOOGLE_CLIENT_SECRET\tGOOGLE_API_KEY\tTZ\t“UTC”"
  },
  
  {
    "title": "Prácticas de redes",
    "url": "/rx/posts/practicas-redes/",
    "categories": "Sistemas Microinformáticos y Redes, Servicios en red",
    "tags": "redes locales, teoría, smr",
    "date": "2024-03-12 11:00:00 +0000",
    





    
    "snippet": "Creación de cables de redMateriales necesarios:  Cable de red (por ejemplo, cable UTP Cat5e, Cat6, Cat6a)  Conectores RJ45  Herramienta de pelado y corte de cables  Crimpadora  Probador de cablesPr...",
    "content": "Creación de cables de redMateriales necesarios:  Cable de red (por ejemplo, cable UTP Cat5e, Cat6, Cat6a)  Conectores RJ45  Herramienta de pelado y corte de cables  Crimpadora  Probador de cablesProcedimiento:  Preparación del cable:          Corta el cable Ethernet al tamaño deseado, asegurándote de dejar un poco de margen adicional para evitar cortar los hilos demasiado cortos.      Utiliza la herramienta de pelado y corte de cables para pelar aproximadamente 2-3 centímetros del revestimiento exterior del cable, exponiendo los ocho hilos internos.        Ordenamiento de los hilos:          Organiza los ocho hilos en el orden correcto según el estándar T568A o T568B. Estos son los dos estándares más comunes para la disposición de los hilos en un conector RJ45.      T568B (el más común): Blanco/Naranja, Naranja, Blanco/Verde, Azul, Blanco/Azul, Verde, Blanco/Marrón, Marrón.      T568A: Blanco/Verde, Verde, Blanco/Naranja, Azul, Blanco/Azul, Naranja, Blanco/Marrón, Marrón.      Asegúrate de que los hilos estén alineados y planos, sin torsiones o vueltas.        Crimpeo del conector:          Inserta los hilos ordenados en un conector RJ45. Asegúrate de que los hilos lleguen completamente al final del conector y estén alineados correctamente con los contactos metálicos en el interior.      Utiliza la crimpadora para asegurar el conector al cable. Asegúrate de aplicar suficiente presión para que los contactos metálicos perforan los hilos y los sujetan firmemente en su lugar.        Verificación de la conexión:          Una vez que hayas crimpeado ambos extremos del cable, usa un probador de cables para verificar la conexión. El probador de cables enviará una señal a través del cable y te indicará si hay algún problema de conexión, como hilos mal ordenados o conectores mal crimpados.      Si el probador muestra que la conexión es exitosa, ¡tu cable está listo para ser utilizado!      Instalación de canaletasMateriales necesarios:  Canaletas para cables.  Tornillos adecuados para la superficie de la pared (por ejemplo, tornillos para yeso o tornillos para madera).  Destornillador o taladro eléctrico con broca adecuada.  Nivel de burbuja.  Lápiz.Procedimiento:  Planificación de la ubicación:          Decide dónde deseas instalar las canaletas en la pared. Es importante planificar la ubicación de manera que permita una distribución eficiente de los cables y que no interfiera con otros elementos de la pared, como tomas de corriente o interruptores de luz.      Utiliza el nivel de burbuja y un lápiz para marcar líneas guía en la pared, asegurándote de que estén niveladas y rectas.        Preparación de las canaletas:          Antes de instalar las canaletas, verifica que estén limpias y libres de cualquier obstrucción o residuo.      Si es necesario, corta las canaletas a la longitud deseada utilizando una sierra para metales o una sierra de arco.        Montaje de las canaletas:          Coloca una canaleta contra la pared, alineándola con las líneas guía que marcaste previamente.      Utiliza el nivel de burbuja para asegurarte de que la canaleta esté nivelada.      Con un lápiz, marca la ubicación de los agujeros de montaje en la pared, a través de los orificios de montaje de la canaleta.        Perforación de los agujeros de montaje:          Utiliza un taladro eléctrico con una broca adecuada para perforar agujeros en la pared en las ubicaciones marcadas.      Asegúrate de utilizar una broca del tamaño adecuado para los tornillos que vas a usar.        Instalación de las canaletas:          Coloca la canaleta nuevamente en su lugar sobre los agujeros perforados.      Toma los tornillos y atorníllalos a través de los orificios de montaje de la canaleta y en los agujeros de la pared. No los aprietes completamente todavía.        Ajuste de la alineación y nivelación:          Utiliza el nivel de burbuja para verificar nuevamente que la canaleta esté nivelada. Si es necesario, ajusta la posición de la canaleta antes de apretar completamente los tornillos.        Fijación final:          Una vez que estés satisfecho con la alineación y nivelación de la canaleta, aprieta completamente los tornillos para asegurarla firmemente a la pared.        Verificación:          Finalmente, verifica que las canaletas estén correctamente instaladas y que estén listas para recibir los cables.      Instalación de hembras RJ-45 empotradas en la paredMateriales necesarios:  Hembras RJ-45 empotradas.  Caja empotrada para montaje en pared.  Tornillos de montaje.  Cable de red.  Herramientas de corte (sierra de mano, sierra de calar o taladro con broca para pared).  Destornillador o taladro con broca adecuada.  Pelacables.  Crimpadora.  Conectores RJ-45 macho.Procedimiento:  Planificación de la ubicación:          Decide dónde deseas instalar las hembras RJ-45 en la pared. Asegúrate de elegir una ubicación que sea accesible y que permita una distribución eficiente de los cables de red.      Utiliza un detector de montantes o inspecciona la pared para asegurarte de que no haya obstáculos como montantes de madera o cables eléctricos en la ubicación elegida.        Corte del agujero en la pared:          Marca el área donde deseas hacer el corte en la pared, utilizando una plantilla proporcionada con la caja empotrada o tomando medidas precisas.      Utiliza una sierra de mano, una sierra de calar o un taladro con una broca para pared para cortar el agujero en la pared siguiendo las marcas que hiciste.        Montaje de la caja empotrada:          Inserta la caja empotrada en el agujero que has cortado en la pared.      Utiliza tornillos para fijar la caja empotrada a la pared. Asegúrate de que esté nivelada y bien sujeta.        Preparación de los cables de red:          Corta el cable de red al tamaño necesario para llegar desde la ubicación de la caja empotrada hasta el punto de conexión de red (router, switch, etc.).      Utiliza un pelacables para quitar aproximadamente 2-3 cm del revestimiento exterior del cable y exponer los hilos internos.        Conexión de los cables a las hembras RJ-45:          Inserta los hilos del cable de red en la parte posterior de la hembra RJ-45 empotrada, siguiendo el estándar de cableado T568A o T568B.      Utiliza una crimpadora para asegurar los cables en su lugar y cortar el exceso de alambre.        Instalación de la hembra RJ-45 en la caja empotrada:          Conecta la hembra RJ-45 empotrada a la caja empotrada, asegurándote de que esté correctamente alineada.      Utiliza los tornillos suministrados para fijar la hembra RJ-45 a la caja empotrada.        Prueba de la conexión:          Una vez que hayas instalado todas las hembras RJ-45 empotradas necesarias, conecta los cables de red al router, switch u otro dispositivo de red.      Utiliza un dispositivo compatible con Ethernet para verificar que la conexión funcione correctamente.      Montaje de rackProceso para Montar un Rack de Redes:  Selecciona el lugar adecuado:          Elige un lugar adecuado para montar el rack, preferiblemente cerca de una fuente de alimentación y donde haya suficiente espacio para acceder fácilmente al equipo de red.        Monta el rack:          Si el rack no está preensamblado, ensambla las partes según las instrucciones del fabricante. Esto puede incluir la instalación de los rieles, paneles laterales y otras partes estructurales del rack.        Instala los dispositivos de red:          Coloca los dispositivos de red, como switches, routers, patch panels y otros equipos, en las posiciones deseadas dentro del rack. Asegúrate de dejar suficiente espacio entre los dispositivos para permitir una buena circulación de aire y facilitar el acceso para el mantenimiento.        Conecta los dispositivos:          Conecta los dispositivos entre sí utilizando cables de red apropiados. Conecta los cables de red a los puertos correspondientes en los dispositivos y en los patch panels, siguiendo un esquema de cableado lógico y organizado.        Organiza los cables:          Utiliza organizadores de cables, bandejas para equipos y bridas para cables para mantener los cables ordenados y evitar enredos. Asegúrate de dejar suficiente holgura en los cables para facilitar futuras modificaciones y mantenimiento.        Etiqueta los cables y dispositivos:          Etiqueta cada cable y dispositivo de red con identificadores claros y legibles. Esto facilitará la identificación y solución de problemas en el futuro.        Prueba la conectividad:          Una vez que todos los dispositivos estén conectados y organizados, realiza pruebas de conectividad para asegurarte de que todos los dispositivos estén funcionando correctamente y puedan comunicarse entre sí.        Seguridad y mantenimiento:          Asegúrate de que el rack esté correctamente asegurado al suelo o a la pared para evitar accidentes. Realiza mantenimiento periódico para asegurarte de que el rack y los dispositivos estén en buen estado de funcionamiento.      Proceso para montar un Patch PanelProceso para Montar un Patch Panel:  Preparación del área de montaje:          Selecciona el lugar adecuado para montar el patch panel. Asegúrate de tener suficiente espacio para trabajar y que el patch panel esté accesible para la conexión de cables.        Montaje del patch panel:          Coloca el patch panel en la posición deseada en la pared o en el rack. Algunos patch panels se montan en rieles o soportes, mientras que otros se fijan directamente a la superficie con tornillos.      Utiliza los tornillos de montaje suministrados para asegurar el patch panel en su lugar. Asegúrate de que esté nivelado y correctamente alineado.        Preparación de los cables:          Corta los cables de red al tamaño necesario para alcanzar el patch panel desde su origen (por ejemplo, el área de trabajo o el armario de distribución).      Utiliza un pelacables para quitar aproximadamente 2-3 cm del revestimiento exterior del cable y exponer los hilos internos.        Conexión de los cables al patch panel:          Organiza los cables según el esquema de cableado deseado. Por lo general, se sigue el estándar T568A o T568B.      Inserta los cables en los puertos correspondientes del patch panel, asegurándote de que estén correctamente asentados y que los hilos estén en el orden correcto.        Crimpado de los cables:          Utiliza una crimpadora para asegurar los cables en su lugar en el patch panel. Aplica presión suficiente para garantizar una conexión segura, pero evita aplastar los cables en exceso.        Organización de los cables:          Utiliza organizadores de cables si es necesario para mantener los cables ordenados y evitar enredos. Asegúrate de dejar suficiente holgura en los cables para futuras modificaciones o mantenimiento.        Prueba de la conectividad:          Una vez que todos los cables estén conectados al patch panel, realiza pruebas de conectividad para asegurarte de que todos los cables estén correctamente terminados y funcionando correctamente.        Etiquetado y documentación:          Etiqueta cada puerto del patch panel con una identificación clara y legible que indique su ubicación y función.      Documenta el esquema de cableado y la configuración del patch panel para facilitar futuras modificaciones o solución de problemas.      Proceso completo de montaje de Rack y Patch PanelEtiquetar los cablesProceso para Etiquetar los Cables de Red:  Preparación de las etiquetas:          Asegúrate de tener suficientes etiquetas autoadhesivas y una rotuladora o marcador permanente a mano.        Identificación de los extremos de los cables:          Identifica cada extremo del cable que deseas etiquetar, ya sea en el conector RJ-45, el patch panel, el dispositivo de red o en cualquier punto intermedio del cable.        Asignación de nombres o códigos:          Decide un sistema de nomenclatura o codificación para tus cables de red, como la ubicación física, el número de puerto, el nombre del dispositivo conectado, el tipo de dispositivo, etc.        Etiquetado de los cables:          Coloca una etiqueta autoadhesiva en cada extremo del cable.      Utiliza la rotuladora o el marcador permanente para imprimir o escribir el nombre o código asignado a ese cable.      Aplica la etiqueta de manera que sea claramente visible y legible, asegurándote de que esté firmemente adherida al cable.        Documentación:          Lleva un registro de la identificación de cada cable en una hoja de cálculo, diagrama de red u otro sistema de documentación.        Mantenimiento:          A medida que realices cambios en la red o añadas nuevos cables, asegúrate de etiquetarlos adecuadamente siguiendo el mismo proceso.      "
  },
  
  {
    "title": "Capa de sesión",
    "url": "/rx/posts/Capa-sesion/",
    "categories": "Sistemas Microinformáticos y Redes, Servicios en red",
    "tags": "redes locales, teoría, smr",
    "date": "2024-03-10 11:00:00 +0000",
    





    
    "snippet": "La Capa de Sesión, también conocida como Capa 5, es la quinta capa del Modelo OSI (Open Systems Interconnection). Esta capa proporciona los medios para que las aplicaciones en sistemas de extremo a...",
    "content": "La Capa de Sesión, también conocida como Capa 5, es la quinta capa del Modelo OSI (Open Systems Interconnection). Esta capa proporciona los medios para que las aplicaciones en sistemas de extremo a extremo establezcan, administren y finalicen las sesiones de comunicación entre ellas. Aquí tienes un temario extenso sobre la Capa de Sesión del Modelo OSI:1. Introducción a la Capa de SesiónLa Capa de Sesión, ubicada en el quinto nivel del Modelo OSI (Open Systems Interconnection), se encarga de establecer, administrar y finalizar las sesiones de comunicación entre aplicaciones en sistemas finales. Esta capa es crucial para asegurar una comunicación confiable y estable entre dispositivos de red.Definición de la Capa de Sesión.Definición de la Capa de Sesión:La Capa de Sesión se encarga de coordinar la comunicación entre diferentes aplicaciones en sistemas finales. Proporciona servicios que permiten a las aplicaciones establecer, mantener y finalizar sesiones de comunicación de manera eficiente y segura.Propósito y funciones de la Capa de Sesión.Establecimiento de Sesiones: La Capa de Sesión facilita el inicio de una sesión de comunicación entre dos aplicaciones. Durante esta fase, se establecen parámetros de comunicación, como la autenticación y la negociación de protocolos.Administración de Sesiones: Una vez establecida la sesión, la Capa de Sesión se encarga de administrarla. Esto incluye la sincronización de datos, el control de flujo y la reanudación de sesiones interrumpidas.Finalización de Sesiones: Cuando la comunicación entre las aplicaciones llega a su fin, la Capa de Sesión se encarga de terminar la sesión de manera ordenada, liberando los recursos asociados y asegurando que no queden conexiones abiertas innecesariamente.Control de Diálogo: La Capa de Sesión controla el diálogo entre las aplicaciones, garantizando que la comunicación se realice de manera organizada y eficiente.Sincronización de Datos: Facilita la sincronización de datos entre las aplicaciones, asegurando que los datos se envíen y reciban en el orden correcto y sin pérdida de información.Gestión de Tokens: En algunos casos, la Capa de Sesión se encarga de gestionar tokens o permisos de acceso, garantizando que solo las aplicaciones autorizadas puedan acceder a los recursos compartidos.2. Características de la Capa de SesiónLa Capa de Sesión del Modelo OSI presenta diversas características que son fundamentales para garantizar una comunicación efectiva entre aplicaciones en un entorno de red. A continuación, se detallan algunas de las características más importantes:Gestión de Sesiones de Comunicación:La Capa de Sesión se encarga de gestionar las sesiones de comunicación entre aplicaciones. Esto implica coordinar el inicio, mantenimiento y finalización de las sesiones de manera ordenada y eficiente. La gestión de sesiones incluye la asignación de recursos, la autenticación de usuarios y la gestión de tokens de acceso.Establecimiento, Mantenimiento y Finalización de Sesiones:      Establecimiento de Sesiones: Durante esta fase, la Capa de Sesión facilita el inicio de una sesión de comunicación entre dos aplicaciones. Se establecen parámetros de comunicación, se autentica a los usuarios y se negocian los protocolos y configuraciones necesarios para la comunicación.        Mantenimiento de Sesiones: Una vez establecida la sesión, la Capa de Sesión se encarga de mantenerla activa y funcional. Esto implica la sincronización de datos, el control de flujo y la detección y recuperación de errores para garantizar una comunicación confiable y continua.        Finalización de Sesiones: Cuando la comunicación entre las aplicaciones llega a su fin, ya sea de forma voluntaria o debido a un error, la Capa de Sesión se encarga de finalizar la sesión de manera ordenada. Se liberan los recursos asociados a la sesión y se realizan las acciones necesarias para cerrar la conexión de manera adecuada.  Control de Diálogo y Sincronización:      Control de Diálogo: La Capa de Sesión controla el diálogo entre las aplicaciones, asegurando que la comunicación se realice de manera organizada y coherente. Esto implica la gestión de turnos de habla, la prevención de conflictos y la garantía de que las aplicaciones se comuniquen de manera eficiente y sin interrupciones.        Sincronización: La Capa de Sesión facilita la sincronización de datos entre las aplicaciones, asegurando que los datos se envíen y reciban en el orden correcto y sin pérdida de información. Esto es crucial para garantizar una comunicación confiable y coherente entre las aplicaciones.  3. Servicios de la Capa de SesiónLa Capa de Sesión del Modelo OSI proporciona una serie de servicios esenciales para facilitar una comunicación eficiente y confiable entre las aplicaciones en los sistemas finales de una red. A continuación, se describen algunos de los servicios más importantes que ofrece esta capa:Diálogo entre Procesos:La Capa de Sesión permite el establecimiento de un diálogo estructurado y organizado entre los procesos de las aplicaciones que se comunican. Esto implica la coordinación de los turnos de habla, la prevención de colisiones en la comunicación y la garantía de que los mensajes se envíen y reciban de manera ordenada y coherente.Control de Tokens:En ciertos casos, la Capa de Sesión puede encargarse del control de tokens o permisos de acceso durante la comunicación entre aplicaciones. Estos tokens pueden ser utilizados para garantizar que solo las aplicaciones autorizadas puedan acceder a recursos compartidos o realizar determinadas acciones durante la sesión.Sincronización de Datos:La Capa de Sesión facilita la sincronización de datos entre las aplicaciones durante una sesión de comunicación. Esto implica garantizar que los datos se envíen y reciban en el orden correcto, sin pérdida de información y de manera que ambas partes estén al tanto del estado de la comunicación en todo momento.Manejo de Errores de Sesiones:La Capa de Sesión se encarga de detectar y manejar los errores que puedan surgir durante una sesión de comunicación. Esto incluye la detección de errores de transmisión, la recuperación de datos perdidos o dañados, y la reanudación de la comunicación en caso de interrupciones temporales o fallas en la red.Estos servicios proporcionados por la Capa de Sesión son fundamentales para garantizar una comunicación confiable, segura y eficiente entre las aplicaciones en un entorno de red, asegurando que los datos se transmitan de manera ordenada y sin errores durante toda la sesión.4. Protocolos de la Capa de SesiónEn esta sección se presentan algunos de los protocolos más relevantes utilizados en la Capa de Sesión del Modelo OSI:Protocolo de Sesión de OSI (SSP)El Protocolo de Sesión de OSI (SSP) fue propuesto como parte de la especificación del Modelo OSI, pero no se ha utilizado ampliamente en la práctica. Estaba destinado a proporcionar servicios de sesión estándar para las comunicaciones en red, incluyendo el establecimiento, mantenimiento y finalización de sesiones. Aunque no se ha implementado en gran escala, su diseño influyó en otros protocolos de sesión.NetBIOS (Network Basic Input/Output System)NetBIOS es un conjunto de protocolos utilizado principalmente en sistemas Microsoft para la comunicación entre aplicaciones en una red local. Proporciona servicios de sesión, así como servicios de nombres y servicios de datagramas. Aunque NetBIOS ha sido ampliamente utilizado en el pasado, ha sido reemplazado gradualmente por tecnologías más modernas como TCP/IP y SMB (Server Message Block).RPC (Remote Procedure Call)El RPC (Remote Procedure Call) es un protocolo utilizado para permitir la comunicación entre procesos distribuidos en una red. Permite que un programa en un sistema remoto llame a un procedimiento o función en otro sistema como si fuera local. El RPC puede proporcionar servicios de sesión para garantizar una comunicación confiable entre los procesos distribuidos.Estos son solo algunos ejemplos de protocolos utilizados en la Capa de Sesión del Modelo OSI. Cada uno de ellos cumple un papel importante en la facilitación de la comunicación entre aplicaciones en una red.5. Funcionamiento de la Capa de SesiónLa Capa de Sesión del Modelo OSI desempeña varias funciones clave para garantizar una comunicación efectiva y confiable entre las aplicaciones. A continuación, se describen los aspectos operativos más importantes de esta capa:Establecimiento de SesionesEl establecimiento de sesiones implica la negociación inicial entre las aplicaciones para iniciar una comunicación. Durante esta fase, se acuerdan parámetros como la autenticación, los protocolos de comunicación y cualquier otro detalle relevante para la sesión. Esto garantiza que las aplicaciones estén listas para intercambiar datos de manera efectiva.Mantenimiento de SesionesUna vez que se establece una sesión, la Capa de Sesión se encarga de mantenerla activa y funcional. Esto implica la sincronización continua de datos entre las aplicaciones, el control del flujo de información para evitar congestiones y la detección y corrección de errores que puedan surgir durante la transmisión de datos.Finalización de SesionesLa finalización de sesiones ocurre cuando las aplicaciones deciden terminar la comunicación. Durante esta fase, se llevan a cabo procedimientos para cerrar la sesión de manera ordenada y liberar cualquier recurso utilizado durante la comunicación. Esto garantiza que no haya conexiones abiertas innecesariamente y que los recursos de red estén disponibles para otros usos.Control de Flujo y SincronizaciónEl control de flujo y la sincronización son aspectos críticos del funcionamiento de la Capa de Sesión. El control de flujo asegura que las aplicaciones envíen y reciban datos a un ritmo que pueda ser gestionado por el receptor, evitando así la congestión de la red. La sincronización garantiza que los datos se envíen y reciban en el orden correcto, preservando la integridad de la comunicación.En conjunto, estos aspectos del funcionamiento de la Capa de Sesión son fundamentales para garantizar una comunicación confiable y eficiente entre las aplicaciones en un entorno de red. La Capa de Sesión se encarga de gestionar todos estos procesos de manera transparente para las aplicaciones, permitiendo una comunicación fluida y sin problemas.6. Relación con otras capas del Modelo OSILa Capa de Sesión interactúa estrechamente con otras capas del Modelo OSI, especialmente con la Capa de Presentación (Capa 6) y la Capa de Transporte (Capa 4), para garantizar una comunicación eficiente y segura entre las aplicaciones. A continuación se describe cómo se relaciona con cada una de estas capas:Interacción con la Capa de Presentación (Capa 6)La Capa de Sesión interactúa con la Capa de Presentación para la representación de datos y el cifrado de sesiones. Esto significa que la Capa de Sesión puede utilizar servicios proporcionados por la Capa de Presentación para asegurar que los datos transmitidos entre las aplicaciones estén en un formato legible y comprensible para ambas partes. Además, la Capa de Sesión puede trabajar en conjunto con la Capa de Presentación para cifrar los datos de sesión, proporcionando así una capa adicional de seguridad durante la comunicación.Interacción con la Capa de Transporte (Capa 4)La Capa de Sesión interactúa con la Capa de Transporte para el transporte fiable de datos de sesión. Esto implica que la Capa de Sesión puede utilizar los servicios proporcionados por la Capa de Transporte para garantizar que los datos de sesión se transmitan de manera segura y confiable entre las aplicaciones. Por ejemplo, la Capa de Sesión puede confiar en los protocolos de transporte como TCP (Transmission Control Protocol) para asegurar la entrega ordenada y sin errores de los datos de sesión.7. Problemas y DesafíosLa Capa de Sesión enfrenta varios problemas y desafíos, que son cruciales para garantizar una comunicación segura y confiable entre las aplicaciones. Algunos de los problemas y desafíos más importantes incluyen:Seguridad de la sesiónLa seguridad de la sesión es un aspecto crítico para proteger la integridad y la privacidad de la comunicación entre las aplicaciones. Esto implica protegerse contra ataques como el secuestro de sesión y la suplantación de identidad, que podrían comprometer la seguridad de los datos transmitidos durante una sesión. La Capa de Sesión debe implementar mecanismos de autenticación robustos y cifrado de datos para garantizar la seguridad de la comunicación.Gestión de sesiones distribuidasEn entornos distribuidos y en la nube, la gestión de sesiones puede ser especialmente desafiante debido a la naturaleza descentralizada de los sistemas. La coordinación de sesiones entre múltiples nodos distribuidos requiere un enfoque cuidadoso para garantizar la coherencia y la sincronización de los datos. La Capa de Sesión debe abordar desafíos como la escalabilidad, la tolerancia a fallos y la gestión de recursos en entornos distribuidos para asegurar un funcionamiento eficiente y confiable de las sesiones en estos entornos.8. Aplicaciones y Casos de UsoLa Capa de Sesión tiene una amplia gama de aplicaciones y casos de uso en diversos ámbitos. Algunos de los más destacados incluyen:Videoconferencias y telepresenciaEn el ámbito de las comunicaciones en tiempo real, la Capa de Sesión es fundamental para facilitar videoconferencias y telepresencia. Permite la coordinación y sincronización de la comunicación entre múltiples participantes, garantizando una experiencia fluida y sin interrupciones.Transferencia de archivos remotosLa Capa de Sesión también se utiliza en aplicaciones de transferencia de archivos remotos, como FTP (File Transfer Protocol) y SFTP (Secure File Transfer Protocol). Facilita el establecimiento y mantenimiento de sesiones seguras para la transferencia de archivos entre sistemas remotos, garantizando la integridad y confiabilidad de los datos transferidos.Juegos en línea y aplicaciones de chatEn el ámbito del entretenimiento en línea, la Capa de Sesión es fundamental para juegos en línea y aplicaciones de chat. Permite la comunicación en tiempo real entre los jugadores o usuarios, facilitando la coordinación de las interacciones y la sincronización de datos para una experiencia de juego o chat fluida.Transacciones bancarias y comercio electrónicoEn el ámbito de las transacciones financieras en línea, la Capa de Sesión desempeña un papel crítico en la seguridad y confiabilidad de las transacciones bancarias y el comercio electrónico. Garantiza el establecimiento de sesiones seguras entre los usuarios y los servidores, protegiendo la integridad y confidencialidad de los datos financieros durante la comunicación.Estos son solo algunos ejemplos de las aplicaciones y casos de uso de la Capa de Sesión en diversos ámbitos. Su versatilidad y capacidad para proporcionar comunicaciones seguras y confiables son fundamentales para una amplia gama de aplicaciones en el mundo digital.9. Estándares y EvoluciónLa Capa de Sesión ha experimentado una evolución continua a lo largo del tiempo, con el desarrollo y la mejora de los protocolos utilizados para facilitar la comunicación entre aplicaciones. Algunos aspectos relevantes de la evolución de los protocolos de la Capa de Sesión incluyen:Evolución de los protocolos de la Capa de SesiónA lo largo de los años, se han desarrollado y mejorado varios protocolos para satisfacer las necesidades cambiantes de las comunicaciones en red. Esto incluye la introducción de nuevos protocolos y la mejora de los existentes para proporcionar funcionalidades avanzadas, mejor seguridad y mayor eficiencia en la comunicación de sesiones.Estándares actuales y futuros en el ámbito de la comunicación de sesionesEn la actualidad, existen varios estándares establecidos en el ámbito de la comunicación de sesiones, como TCP (Transmission Control Protocol) y TLS (Transport Layer Security), que se utilizan ampliamente para garantizar la seguridad y confiabilidad de las comunicaciones en red. Además, se están desarrollando y estandarizando nuevos protocolos para abordar desafíos emergentes y aprovechar las oportunidades proporcionadas por avances tecnológicos como la computación en la nube y el Internet de las cosas (IoT).Estos estándares actuales y futuros en el ámbito de la comunicación de sesiones están diseñados para proporcionar soluciones innovadoras y eficientes que satisfagan las demandas de un mundo cada vez más conectado y digitalizado.10. Implementación y DesarrolloBibliotecas y APIs para la gestión de sesionesPara la gestión de sesiones en el desarrollo de aplicaciones, existen varias bibliotecas y APIs disponibles que pueden facilitar este proceso. Algunas de las bibliotecas y APIs más comunes incluyen:  Express-Session: Una biblioteca de middleware para la gestión de sesiones en aplicaciones web Node.js utilizando Express.  Django Sessions: Un componente integrado de Django que permite gestionar sesiones de usuario en aplicaciones web Python.  Java Servlet HttpSession: Una API estándar de Java para gestionar sesiones en aplicaciones web Java EE utilizando servlets.Estas bibliotecas y APIs proporcionan funcionalidades predefinidas para la gestión de sesiones, como el almacenamiento de datos de sesión, la gestión de tokens de sesión y la configuración de políticas de expiración de sesión.Consideraciones de diseño al desarrollar aplicaciones que interactúan a través de sesionesAl desarrollar aplicaciones que interactúan a través de sesiones, es importante tener en cuenta varias consideraciones de diseño para garantizar un funcionamiento eficiente y seguro:  Seguridad: Implementar medidas de seguridad adecuadas, como el cifrado de datos de sesión y la protección contra ataques de sesión, como la falsificación de cookies y el secuestro de sesión.  Escalabilidad: Diseñar la arquitectura de la aplicación de manera que pueda escalar para manejar un gran número de sesiones concurrentes de manera eficiente.  Persistencia de sesión: Seleccionar una estrategia de almacenamiento adecuada para los datos de sesión, considerando factores como la persistencia, la escalabilidad y la disponibilidad.  Expiración de sesión: Establecer políticas de expiración de sesión para eliminar sesiones inactivas y liberar recursos del servidor de manera eficiente.  Experiencia del usuario: Diseñar la interfaz de usuario de manera que proporcione retroalimentación clara sobre el estado de la sesión y facilite la gestión de la sesión por parte del usuario.Teniendo en cuenta estas consideraciones de diseño, se puede desarrollar aplicaciones robustas y seguras que interactúen de manera efectiva a través de sesiones.11. Ejemplos de ImplementaciónImplementación de un sistema de chat peer-to-peer utilizando sockets y protocolos de sesión```pythonimport socketFunción para enviar mensajesdef send_message(sock, message):    sock.send(message.encode())Función para recibir mensajesdef receive_message(sock):    return sock.recv(1024).decode()Función principal del clientedef main():    # Configuración del socket    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)    server_address = (‘localhost’, 12345)    sock.connect(server_address)try:    while True:        # Envío de mensajes        message = input(\"Enter message: \")        send_message(sock, message)        # Recepción de mensajes        received_message = receive_message(sock)        print(\"Received:\", received_message)finally:    sock.close()if name == “main”:    main()12. Desafíos Actuales y FuturosIntegración de la Capa de Sesión en entornos de redes definidas por software (SDN)Las redes definidas por software (SDN) están cambiando la forma en que se diseñan, implementan y gestionan las redes de comunicación. Uno de los desafíos actuales es la integración efectiva de la Capa de Sesión en entornos SDN. Esto implica adaptar los protocolos de sesión y los mecanismos de gestión de sesiones para funcionar de manera eficiente en arquitecturas de redes definidas por software, donde el control de la red se centraliza en un controlador de red programable.Seguridad y privacidad en la gestión de sesiones en el Internet de las Cosas (IoT)El Internet de las Cosas (IoT) está creando un ecosistema interconectado de dispositivos inteligentes que recopilan, transmiten y procesan datos en tiempo real. Uno de los desafíos futuros es garantizar la seguridad y la privacidad en la gestión de sesiones en el contexto del IoT. Esto implica proteger las sesiones de comunicación entre dispositivos IoT contra ataques como el secuestro de sesión y la interceptación de datos, así como garantizar la confidencialidad e integridad de los datos transmitidos en estas sesiones."
  },
  
  {
    "title": "MongoDB",
    "url": "/rx/posts/MongoDB/",
    "categories": "Sistemas Microinformáticos y Redes, Servicios en red",
    "tags": "redes locales, teoría, smr",
    "date": "2024-02-12 11:00:00 +0000",
    





    
    "snippet": "MongoDB es un sistema de gestión de bases de datos NoSQL, lo que significa que no sigue el modelo relacional tradicional de las bases de datos SQL. En cambio, utiliza un enfoque basado en documento...",
    "content": "MongoDB es un sistema de gestión de bases de datos NoSQL, lo que significa que no sigue el modelo relacional tradicional de las bases de datos SQL. En cambio, utiliza un enfoque basado en documentos, donde los datos se almacenan en documentos JSON (JavaScript Object Notation) en lugar de en filas y columnas.Algunas características clave de MongoDB son:      Flexibilidad del esquema: A diferencia de las bases de datos relacionales, MongoDB no requiere que las estructuras de datos estén predefinidas. Puedes almacenar documentos con diferentes estructuras dentro de una misma colección.        Escalabilidad: MongoDB está diseñado para escalar horizontalmente de manera eficiente, lo que significa que puedes agregar más servidores a tu clúster para manejar un mayor volumen de datos y una mayor carga de trabajo.        Alto rendimiento: MongoDB utiliza una arquitectura distribuida y ofrece índices para un acceso rápido a los datos, lo que permite un alto rendimiento en operaciones de lectura y escritura.        Replicación y tolerancia a fallos: MongoDB admite la replicación automática de datos a través de múltiples servidores, lo que garantiza la disponibilidad continua de los datos incluso en caso de fallo de hardware o de un servidor.        Consultas avanzadas: Ofrece una potente capacidad de consulta, incluyendo consultas ad hoc, consultas por rango, expresiones regulares y agregaciones.  MongoDB es utilizado en una amplia variedad de aplicaciones, desde aplicaciones web hasta análisis de datos y aplicaciones móviles, debido a su capacidad para manejar grandes volúmenes de datos no estructurados y semi-estructurados de manera eficiente.¿Cómo instalar MongoDB si te sale el error “failed (Result:core-dump)”?Vamos a instalar MongoDB 4.4.8Importamos la clave pública usada por el sistema de paquetes:wget -qO - https://www.mongodb.org/static/pgp/server-4.4.asc | sudo apt-key add -Añadimos el repositorio al sistema:echo \"deb [ arch=amd64,arm64 ] https://repo.mongodb.org/apt/ubuntu focal/mongodb-org/4.4 multiverse\" | sudo tee /etc/apt/sources.list.d/mongodb-org-4.4.listActualizamos el source de apt:sudo apt-get updateSi lo intentamos instalar nos dará un error en la librería de libssl1.1, por lo tanto:wget http://archive.ubuntu.com/ubuntu/pool/main/o/openssl/libssl1.1_1.1.0g-2ubuntu4_amd64.debsudo dpkg -i libssl1.1_1.1.0g-2ubuntu4_amd64.debInstalamos MongoDB propiamente dicho:sudo apt-get install mongodb-org=4.4.8 mongodb-org-server=4.4.8 mongodb-org-shell=4.4.8 mongodb-org-mongos=4.4.8 mongodb-org-tools=4.4.8Comprobamos la versión:mongod --versionAhora falta un último detalle, si nos intentamos conectar desde un equipo remoto a la BBDD nos dará error, esto es debido a que solo acepta conexiones en local, la forma de solucionar esto sería:sudo vi /etc/mongod.confY modificamos la siguiente línea:bindIp: 127.0.0.1Por la siguiente:bindIp: 0.0.0.0Iniciamos el servicio:sudo systemctl start mongodComprobamos el servicio:sudo systemctl status mongodY ahora la conexión ya es posible:"
  },
  
  {
    "title": "Capa de transporte",
    "url": "/rx/posts/Transporte/",
    "categories": "Sistemas Microinformáticos y Redes, Servicios en red",
    "tags": "redes locales, teoría, smr",
    "date": "2024-02-06 11:00:00 +0000",
    





    
    "snippet": "Función de la Capa de TransporteLa Capa de Transporte juega un papel clave al facilitar el intercambio de datos generados por programas de capa de aplicación entre los hosts de origen y destino. Su...",
    "content": "Función de la Capa de TransporteLa Capa de Transporte juega un papel clave al facilitar el intercambio de datos generados por programas de capa de aplicación entre los hosts de origen y destino. Su tarea principal es gestionar las comunicaciones lógicas entre aplicaciones que se ejecutan en diferentes hosts. Esto implica acciones como establecer sesiones temporales entre dos hosts y asegurar la transmisión confiable de información para una aplicación específica.En el modelo TCP/IP, la Capa de Transporte se muestra como el puente entre la capa de aplicación y las capas inferiores, encargadas de la transmisión a través de la red. En un diagrama, se ilustra cómo los dispositivos utilizan esta capa para mover datos entre aplicaciones.La Capa de Transporte facilita el traslado de datos entre aplicaciones en dispositivos de la red, sin necesidad de conocer detalles como el tipo de host de destino, el medio de transmisión, la ruta específica de los datos, la congestión en un enlace o el tamaño de la red.Dentro de esta capa, encontramos dos protocolos esenciales: el Protocolo de Control de Transmisión (TCP), que garantiza una transmisión más detallada y fiable, y el Protocolo de Datagramas de Usuario (UDP), que ofrece una transmisión más ágil pero menos fiable, siendo útil en situaciones específicas.Responsabilidades de la Capa de Transporte  Seguimiento de Conversaciones Individuales: La Capa de Transporte se encarga de hacer un seguimiento de las conversaciones individuales entre aplicaciones en hosts diferentes. Esto implica coordinar el intercambio de datos de manera lógica y asegurar que la información llegue correctamente a su destino.  Segmentación de Datos y Rearmado de Segmentos: La capa divide los datos en segmentos más pequeños para facilitar la transmisión a través de la red. Además, se encarga de volver a ensamblar estos segmentos en el destino para reconstruir la información original.  Agregar Información de Encabezado: Agrega información de encabezado a los datos antes de transmitirlos. Esta información incluye detalles como la fuente, el destino, y la secuencia de datos. El encabezado es esencial para el enrutamiento y la entrega correcta de la información.  Identificación de las Aplicaciones: La Capa de Transporte identifica las aplicaciones asociadas con los datos que está gestionando. Esto permite diferenciar y dirigir los datos a las aplicaciones correspondientes en los hosts de origen y destino.  Multiplexión de Conversaciones: Realiza la multiplexión, que es la gestión simultánea de múltiples conversaciones o flujos de datos. La capa asigna recursos y prioridades para asegurar la transmisión eficiente de datos de diversas aplicaciones a través de un mismo canal de comunicación.Estas responsabilidades son esenciales para garantizar la eficiencia, la integridad y la entrega precisa de los datos en entornos de red.Protocolos de la Capa de TransporteAunque el protocolo IP se encarga de la estructura, direccionamiento y enrutamiento de paquetes, no se involucra directamente en la forma en que se realiza la entrega o el transporte de esos paquetes.Es aquí donde entran en juego los protocolos de la capa de transporte, que especifican cómo se mueven los mensajes entre hosts y se encargan de cumplir con los requisitos de confiabilidad en una conversación. La capa de transporte incluye dos protocolos clave: TCP (Protocolo de Control de Transmisión) y UDP (Protocolo de Datagramas de Usuario).Debido a que diferentes aplicaciones tienen distintos niveles de confiabilidad en el transporte de datos, TCP/IP proporciona estos dos protocolos en la capa de transporte para adaptarse a esas necesidades específicas. La figura asociada muestra cómo TCP y UDP coexisten en esta capa, destacando la capacidad del modelo para manejar eficientemente diversos tipos de comunicación. Protocolo de Control de Transmisión (TCP)Mientras que IP se encarga de la estructura y el enrutamiento de paquetes, no se preocupa por garantizar la entrega ni por decidir si es necesario establecer una conexión entre el remitente y el receptor.En cambio, el TCP se destaca como un protocolo confiable y completo en la capa de transporte, asegurando que todos los datos enviados lleguen de manera fiable al destino. TCP incorpora campos específicos que aseguran la entrega de los datos de la aplicación, aunque esto requiera un procesamiento adicional tanto en los hosts de envío como en los de recepción.Un aspecto clave a tener en cuenta es que TCP divide los datos en segmentos, similar al seguimiento de paquetes desde el origen hasta el destino. Esta división permite que un cliente verifique en tiempo real el orden de entrega cuando un envío se divide en varios paquetes.Las funciones esenciales de TCP para proporcionar confiabilidad y control de flujo incluyen enumerar y rastrear segmentos de datos, confirmar la recepción de datos, retransmitir información no reconocida después de un tiempo determinado, secuenciar datos desordenados y enviar datos a una velocidad eficiente aceptable por el receptor.Para mantener el estado de una conversación y realizar un seguimiento de la información, TCP establece inicialmente una conexión entre el remitente y el receptor, por lo que se le conoce como un protocolo orientado a la conexión. La animación asociada ilustra este proceso mediante una conexión a un servidor FTP, donde se inicia una conexión con un protocolo de enlace TCP de 3 vías y se transmiten segmentos de datos junto con confirmaciones. Protocolo de Datagramas de Usuario (UDP)UDP es un protocolo de transporte más sencillo que TCP. A diferencia de TCP, no se preocupa por garantizar la entrega segura ni controlar el flujo de datos, lo que se traduce en un encabezado más ligero. Esto permite que los datagramas UDP se procesen de manera más rápida, ya que no hay necesidad de gestionar la confiabilidad y el control de flujo en los procesos de envío y recepción.Es crucial destacar que UDP divide los datos en datagramas, que son como segmentos más simples. A diferencia de TCP, UDP opera sin la necesidad de establecer una conexión previa, y debido a que no se preocupa por la confiabilidad ni el control de flujo, se le conoce como un protocolo sin conexión. La ausencia de seguimiento de la información entre el cliente y el servidor lleva a que UDP también se denomine un protocolo sin estado.UDP se considera un protocolo de “mejor esfuerzo” porque no hay confirmación de que los datos hayan llegado al destino. De manera análoga, enviar datos con UDP es como enviar una carta común por correo sin obtener confirmación de entrega. En este contexto, no hay procesos en la capa de transporte que informen al remitente sobre el éxito o el fracaso de la entrega.La animación asociada ilustra cómo los datagramas UDP se transmiten del remitente al receptor. En esta situación, UDP se asemeja a enviar una carta regular sin registro, donde el remitente no tiene certeza sobre la recepción y no hay mecanismos para informar sobre el estado de la entrega.Protocolo de la capa de transporte correcto para la aplicación adecuadaLa elección entre UDP (Protocolo de Datagramas de Usuario) y TCP (Protocolo de Control de Transmisión) depende de las necesidades específicas de cada aplicación. UDP es ideal cuando algunas pérdidas de datos son aceptables, pero se requiere una transmisión rápida, como en aplicaciones de Voz sobre IP (VoIP) o servicios de solicitud-respuesta como el sistema de nombres de dominio (DNS). Además, UDP es adecuado para la transmisión de video y audio en tiempo real, donde la pérdida ocasional de datos no es perceptible para el usuario.En cambio, TCP es la elección cuando es esencial que todos los datos lleguen y se procesen en orden. Aplicaciones críticas, como bases de datos, navegadores web y clientes de correo electrónico, necesitan la entrega completa y precisa de datos, por lo que TCP se utiliza en estas situaciones. Es especialmente importante en transacciones en línea, como las operaciones bancarias, donde la integridad de la información es crucial.Los desarrolladores deben considerar detenidamente los requisitos específicos de sus aplicaciones al decidir entre TCP y UDP. Por lo general, aplicaciones que transmiten audio y video almacenado prefieren TCP para garantizar la integridad de los datos. En contraste, las aplicaciones de videoconferencia pueden optar por UDP para evitar retrasos en la transmisión. La elección entre TCP y UDP se basa en factores como la tolerancia a la pérdida de datos, la prioridad de la entrega y la naturaleza única de cada aplicación. La figura proporciona una representación visual de las diferencias entre UDP y TCP.Descripción general de TCP:Características de TCPTCP (Protocolo de Control de Transmisión) es un protocolo de la capa de transporte que se diferencia de UDP al proporcionar una conexión confiable y orientada a la sesión. Además de las funciones básicas de dividir y reensamblar datos, TCP ofrece servicios adicionales:  Establecimiento de Sesión:          TCP, al ser orientado a la conexión, inicia y acuerda una conexión permanente entre los dispositivos antes de comenzar la transmisión de datos.      Durante este proceso, se negocia la cantidad de tráfico que puede transmitirse en un momento específico, permitiendo un control preciso de la comunicación.        Entrega Confiable:          TCP se asegura de que cada segmento enviado por la fuente llegue de manera segura al destino.      Si hay segmentos corruptos o perdidos durante la transmisión, TCP se encarga de retransmitirlos para garantizar la integridad de la entrega.        Entrega en el Mismo Orden:          Utilizando numeración y secuenciación de segmentos, TCP asegura que los datos se reensamblen en el orden correcto en el destino, incluso si llegan desordenados debido a las diversas rutas de red.        Control de Flujo:          TCP detecta limitaciones de recursos en los hosts de la red y, cuando es necesario, solicita a la aplicación emisora reducir la velocidad del flujo de datos.      El control de flujo regula la cantidad de datos transmitidos, evitando la necesidad de retransmitir datos cuando los recursos del host receptor están bajo presión.      Estos servicios hacen que TCP sea una elección apropiada para aplicaciones que requieren confiabilidad, entrega ordenada y regulación del flujo de datos. Para obtener detalles adicionales sobre TCP, se puede buscar el RFC 793 en Internet.Encabezado TCPTCP, siendo un protocolo con estado, mantiene un registro del estado de la sesión de comunicación. Este seguimiento implica el registro de la información enviada y reconocida durante la sesión. La sesión con estado inicia con el establecimiento de la conexión y concluye con la finalización de la sesión.Cada segmento TCP agrega 20 bytes (equivalentes a 160 bits) de sobrecarga al encapsular los datos de la capa de aplicación. La figura ilustra los campos presentes en un encabezado TCP.Aplicaciones que utilizan TCPTCP desempeña un papel crucial al manejar diversas tareas asociadas con la transmisión de datos en el conjunto de protocolos TCP/IP. Se encarga de dividir el flujo de datos en segmentos, proporciona confiabilidad, controla el flujo y reordena segmentos, liberando a las aplicaciones de estas responsabilidades. Las aplicaciones, como HTTP, FTP, SMTP y SSH, pueden simplemente enviar su flujo de datos a la capa de transporte y aprovechar los servicios proporcionados por TCP. La figura ilustra cómo estas aplicaciones se conectan a través de TCP, demostrando la dirección bidireccional desde las aplicaciones hacia TCP y luego desde TCP hacia IP. Visión general de UDP:Características de UDPUDP es un protocolo de transporte “mejor esfuerzo” que, a diferencia de TCP, no ofrece confiabilidad ni control de flujo. Es liviano y se caracteriza por reconstruir datos en el orden de recepción, no reenviar segmentos perdidos, no establecer sesiones y no informar sobre la disponibilidad de recursos. Es adecuado para situaciones donde la pérdida ocasional de datos es aceptable. Consulte el RFC para más detalles sobre UDP.Encabezado UDPUDP, al ser un protocolo sin estado, no rastrea el estado de la sesión de comunicación ni en el cliente ni en el servidor. La confiabilidad en la transmisión de datos a través de UDP debe ser gestionada por la aplicación.Para transmitir video en vivo y voz de manera eficiente, donde la velocidad de flujo de datos es crucial, UDP es ideal. Las aplicaciones de video y voz en vivo, que pueden tolerar cierta pérdida de datos, se adaptan bien a UDP.Los bloques de comunicación en UDP se llaman datagramas o segmentos, enviados como “mejor esfuerzo” por el protocolo de transporte. El encabezado UDP es más simple que el de TCP, con solo cuatro campos y un total de 8 bytes (64 bits). Los campos incluyen puerto de origen, puerto de destino, longitud y suma de comprobación. La figura muestra estos campos en un encabezado UDP, junto con los datos de la capa de aplicación sin encabezado, en un diagrama de datagramas UDP.Aplicaciones que utilizan UDPUDP es más adecuado para tres tipos específicos de aplicaciones:  Video y Multimedia en Vivo:          Aplicaciones que pueden tolerar cierta pérdida de datos y requieren una transmisión rápida. Ejemplos: VoIP y transmisión de video en vivo.        Solicitudes y Respuestas Simples:          Aplicaciones con transacciones simples, donde un host envía una solicitud y puede o no recibir una respuesta. Ejemplos: DNS y DHCP.        Manejo Interno de Confiabilidad:          Comunicaciones unidireccionales donde el control de flujo, la detección de errores, los reconocimientos y la recuperación de errores no son necesarios o pueden ser gestionados por la aplicación. Ejemplos: SNMP y TFTP.      Números de puerto:Comunicaciones Múltiples SeparadasTanto TCP como UDP utilizan números de puerto para gestionar múltiples conversaciones simultáneas. Los campos de encabezado TCP y UDP contienen números de puerto de origen y destino, cada uno de 2 bytes. El número de puerto de origen se asocia con la aplicación de origen en el host local, mientras que el número de puerto de destino se asocia con la aplicación de destino en el host remoto. Este enfoque permite establecer varias conversaciones simultáneas, y el número de puerto de destino identifica el tipo de servicio solicitado al servidor. Por ejemplo, el puerto 80 indica servicios web. Un servidor puede ofrecer múltiples servicios simultáneamente en diferentes puertos.Pares de SocketsEn la comunicación de red, los pares de sockets juegan un papel esencial. Los puertos de origen y destino, combinados con las direcciones IP, forman lo que se conoce como socket. Este último identifica la combinación única de la dirección IP y el número de puerto asociado, ya sea para la dirección de origen o destino.En un ejemplo práctico, un PC realiza solicitudes simultáneas de servicios FTP y web al mismo servidor de destino. Cada solicitud utiliza direcciones MAC y IP, junto con números de puerto de origen y destino específicos. Estos elementos forman sockets distintos que identifican las conexiones FTP y web.Los sockets permiten a los procesos en un cliente diferenciarse y facilitan la identificación de diversas conexiones en un servidor. El número de puerto de origen actúa como dirección de retorno para la aplicación solicitante, permitiendo que la capa de transporte dirija las respuestas a la aplicación correcta. En conjunto, estos pares de sockets, como “192.168.1.5:1099, 192.168.1.7:80”, son fundamentales para el direccionamiento preciso en la red.Grupos de números de puertoLa Autoridad de Números Asignados de Internet (IANA) administra los números de puerto de 16 bits, dividiéndolos en tres grupos:  Puertos Bien Conocidos (0 a 1,023): Reservados para servicios comunes como navegadores web y correo electrónico.  Puertos Registrados (1,024 a 49,151): Asignados a entidades para aplicaciones específicas, ej. Cisco RADIUS.  Puertos Privados/Dinámicos (49,152 a 65,535): Conocidos como puertos efímeros, asignados dinámicamente al iniciar conexiones.Ejemplos de Puertos Bien Conocidos:•\tFTP Datos: 20 (TCP)•\tFTP Control: 21 (TCP)•\tSSH: 22 (TCP)•\tTelnet: 23 (TCP)•\tSMTP: 25 (TCP)•\tDNS: 53 (UDP, TCP)•\tDHCP - Servidor: 67 (UDP)•\tDHCP - Cliente: 68 (UDP)•\tTFTP: 69 (UDP)•\tHTTP: 80 (TCP)•\tPOP3: 110 (TCP)•\tIMAP: 143 (TCP)•\tSNMP: 161 (UDP)•\tHTTPS: 443 (TCP)Algunas aplicaciones usan tanto TCP como UDP; por ejemplo, DNS usa UDP para solicitudes y TCP para comunicación entre servidores DNS. El registro completo está disponible en el sitio web de IANA.El comando netstatNetstat es una herramienta esencial para examinar las conexiones TCP activas en un host de red y puede ayudar a identificar posibles amenazas de seguridad. Al ingresar el comando “netstat”, se obtiene una lista detallada de conexiones TCP activas, que incluyen información sobre los protocolos, direcciones local y extranjera, números de puerto y estado de la conexión. El comando también puede ejecutarse con la opción “-n” para mostrar direcciones IP y números de puerto en su forma numérica, sin resolver nombres de dominio ni aplicaciones conocidas.Proceso de comunicación TCP:Procesos del Servidor TCPEn TCP, cada proceso de aplicación en un servidor se asocia con un número de puerto, que puede asignarse automáticamente o configurarse manualmente. Un servidor no puede tener dos servicios con el mismo número de puerto. Una aplicación de servidor activa asignada a un puerto se considera “abierta”, lo que significa que la capa de transporte acepta y procesa los segmentos dirigidos a ese puerto. Pueden existir varios puertos abiertos simultáneamente en un servidor, uno para cada aplicación de servidor activa. En el proceso de comunicación TCP, los clientes envían solicitudes a puertos de destino específicos, y el servidor responde a puertos de origen correspondientes en los clientes.Establecimiento de Conexiones TCPEn las conexiones TCP, el proceso de establecimiento de conexión es similar a saludar al conocerse. El cliente host inicia la conexión con el servidor a través del proceso de enlace de tres vías, que consta de los siguientes pasos:  Paso 1 (SYN): El cliente envía un mensaje de solicitud (SYN) al servidor para iniciar la conexión.  Paso 2 (ACK y SYN): El servidor responde con un mensaje de confirmación (ACK) junto con su propia solicitud (SYN) al cliente.  Paso 3 (ACK): El cliente envía un mensaje de confirmación (ACK) al servidor, finalizando el proceso de enlace de tres vías y estableciendo la conexión TCP.Terminación de SesiónPara cerrar una conexión TCP, se utiliza el marcador de control de finalización (FIN) en el encabezado del segmento. El proceso de finalización de una sesión TCP de dos vías implica cuatro pasos, que son los siguientes:  Paso 1 (FIN): Se envía un segmento con el marcador FIN para indicar la intención de cerrar la conexión.  Paso 2 (ACK): El receptor envía un segmento de reconocimiento (ACK) en respuesta al segmento FIN, indicando que ha recibido la solicitud de finalización.  Paso 3 (FIN): El receptor, que también puede ser el iniciador de la terminación, envía un segmento con FIN para indicar su propia intención de cerrar la conexión.  Paso 4 (ACK): El iniciador original envía un segmento de reconocimiento (ACK) en respuesta al segundo segmento FIN, completando así el proceso de finalización de la sesión TCP de dos vías.     Análisis del enlace de tres vías de TCP    TCP, siendo un protocolo full-duplex, realiza el seguimiento de cada segmento de datos dentro de una sesión y utiliza un enlace de tres vías para establecer la conexión. El proceso de enlace de tres vías utiliza seis bits de control en el encabezado TCP, conocidos como marcadores o banderas, que cumplen funciones específicas:          URG (Urgent): Indica que el campo de puntero urgente es significativo.      ACK (Acknowledgment): Utilizado en el establecimiento de conexión y la terminación de la sesión para indicar el reconocimiento de datos recibidos.      PSH (Push): Indica la función de empuje, que sugiere a la capa de transporte que entregue los datos al destinatario tan pronto como estén disponibles.      RST (Reset): Restablece la conexión en caso de error o tiempo de espera.      SYN (Synchronize): Sincroniza números de secuencia durante el establecimiento de la conexión.      FIN (Finish): Indica que el remitente no enviará más datos y se utiliza en la terminación de la sesión.Estos indicadores informan sobre el progreso y estado de la conexión TCP, y la secuencia de estos indicadores en el apretón de manos de tres vías permite establecer y finalizar la comunicación de manera confiable.      Confiabilidad y control de flujo:Fiabilidad de TCP: Entrega Garantizada y OrdenadaTCP destaca como el protocolo ideal para ciertas aplicaciones debido a sus capacidades para reenviar paquetes descartados, numerar paquetes y mantener un flujo de paquetes eficiente, a diferencia de UDP. Estas características son clave para garantizar la fiabilidad y el orden en la transmisión de datos.Cuando los segmentos TCP no alcanzan su destino o llegan desordenados, TCP emplea números de secuencia en el encabezado de cada paquete. Durante la configuración de la sesión, se establece un número de secuencia inicial (ISN), representando el valor inicial de los bytes transmitidos. A medida que los datos fluyen, el número de secuencia aumenta según la cantidad de bytes transmitidos, permitiendo la identificación única y el reconocimiento de cada segmento.El ISN, aunque inicia como un número aleatorio, no comienza en uno para evitar ciertos ataques maliciosos. Este método de numeración facilita la identificación y reconstrucción de segmentos perdidos, incluso si toman rutas diferentes o llegan desordenados al destino. La capacidad de reordenar y reensamblar los segmentos TCP asegura la integridad y coherencia de los datos en la capa de aplicación. Fiabilidad de TCP: Pérdida y Retransmisión de DatosTCP ofrece mecanismos para gestionar la pérdida de segmentos, incluyendo la retransmisión de datos no reconocidos. El número de secuencia (SEQ) y el número de acuse de recibo (ACK) colaboran para confirmar la recepción de los datos transmitidos. Anteriormente, TCP solo podía reconocer el siguiente byte esperado, lo que resultaba en la retransmisión de segmentos innecesarios.Para abordar esto, algunos sistemas operativos implementan la característica TCP opcional llamada reconocimiento selectivo (SACK), que permite al receptor reconocer explícitamente los segmentos recibidos, incluyendo segmentos discontinuos. Si ambos hosts admiten SACK, el emisor solo retransmite los datos faltantes, evitando duplicaciones innecesarias y mejorando la eficiencia.El reconocimiento selectivo se ilustra con un ejemplo en el que, tras el envío de 10 segmentos, solo los segmentos 3 y 4 no llegan. El receptor con SACK envía un ACK 3 y un SACK 5-10, indicando que ha recibido los segmentos 1 y 2, y de manera selectiva, los segmentos 5 a 10. El emisor solo necesita retransmitir los segmentos 3 y 4.TCP utiliza temporizadores para determinar cuánto tiempo esperar antes de retransmitir un segmento no reconocido. Estos mecanismos de control de pérdidas y retransmisión son fundamentales para mantener la integridad y la eficiencia en las transmisiones TCP.Control de Flujo de TCP: Tamaño de la Ventana y ReconocimientosTCP incorpora estrategias de control de flujo para asegurar una transmisión fiable al ajustar la velocidad del flujo de datos entre el emisor y el receptor. Este ajuste se realiza mediante el “tamaño de la ventana”, un campo de 16 bits en el encabezado TCP.En un ejemplo, con un tamaño de ventana de 10,000 bytes y una PC A que envía segmentos de hasta 1,460 bytes, la ventana de envío de la PC A se adapta según los acuses de recibo del PC B, creando así una “ventana deslizante”. La ventana de envío indica cuántos bytes el receptor puede procesar simultáneamente.La configuración inicial de la ventana se establece al inicio de la sesión TCP, y el emisor ajusta la cantidad de datos enviados según la ventana del receptor. A medida que el receptor procesa los bytes, envía acuses de recibo, permitiendo al emisor ajustar su ventana de envío en consecuencia.El concepto de ajuste continuo de la ventana de envío del emisor según las confirmaciones del receptor se denomina “ventanas deslizantes”. Este enfoque optimiza la transmisión de datos, permitiendo al emisor enviar segmentos de manera continua mientras el receptor acusa recibo de los segmentos anteriores. Control de Flujo TCP - Tamaño Máximo de Segmento (MSS)En el contexto del Control de Flujo TCP y el Tamaño Máximo de Segmento (MSS), se destaca que la fuente transmite 1,460 bytes en cada segmento TCP. El MSS, parte del campo de opciones del encabezado TCP, indica la máxima cantidad de datos que un dispositivo puede recibir en un solo segmento TCP, excluyendo el encabezado TCP. Se enfatiza que el MSS se establece típicamente durante el protocolo de enlace de tres vías.En IPv4, un MSS común es de 1,460 bytes. Los hosts determinan este valor restando los encabezados IP y TCP de la Máxima Unidad de Transmisión (MTU) de Ethernet. Con un MTU predeterminado de 1500 bytes en Ethernet, al restar los encabezados IP (20 bytes) y TCP (20 bytes), se obtiene un MSS de 1460 bytes. Se presenta un diagrama que ilustra un marco Ethernet completo, con una MTU de 1500 bytes, siendo 20 bytes el encabezado IP, 20 bytes el encabezado TCP, y 1460 bytes la carga útil del TCP MSS.Control de flujo de TCP: Prevención de CongestionesCuando se produce congestión en una red, los routers sobrecargados pueden comenzar a descartar paquetes, incluyendo aquellos que contienen segmentos TCP. Si estos segmentos no llegan a su destino y no son confirmados, el origen, al determinar la tasa de pérdida, puede asumir la presencia de congestión en la red.Para gestionar la congestión, TCP implementa mecanismos, temporizadores y algoritmos específicos. Cuando se detecta congestión, el origen puede reducir la cantidad de bytes enviados antes de recibir un reconocimiento. En la ilustración, se muestra cómo PC A, al notar congestión, ajusta la cantidad de bytes enviados antes de obtener un acuse de recibo de PC B.Es esencial destacar que es el origen el que realiza la reducción de bytes no reconocidos, y no el tamaño de ventana determinado por el destino. Cabe mencionar que los detalles específicos de los mecanismos y algoritmos de manejo de la congestión están fuera del alcance de este curso.Comunicación UDP:Comparación de baja sobrecarga y confiabilidad de UDPUDP es ideal para comunicaciones que requieren rapidez, como VoIP. A diferencia de TCP, UDP no establece una conexión y proporciona un transporte de datos con baja sobrecarga gracias a su pequeño encabezado de datagrama, sin tráfico de administración de red. Esto se ilustra con un remitente de host que envía datos de voz y video mediante UDP, sin necesidad de una conexión previamente negociada. Reensamblaje de datagramas de UDPAl igual que los segmentos en TCP, los datagramas enviados mediante UDP a menudo siguen diferentes rutas y pueden llegar desordenados. A diferencia de TCP, UDP no realiza un seguimiento de los números de secuencia ni reordena los datagramas. UDP simplemente reensambla los datos en el orden en que se recibieron y los entrega a la aplicación. Si la secuencia de datos es crucial para la aplicación, esta debe identificar la secuencia correcta y determinar cómo procesar los datos. La falta de seguimiento y reordenamiento en UDP se ilustra con datagramas enviados en orden pero que llegan fuera de servicio debido a las diferentes rutas que pueden tomar al llegar al destino.Procesos y solicitudes del servidor UDPLas aplicaciones de servidor basadas en UDP se les asignan números de puerto conocidos o registrados. Estos procesos, al ejecutarse en un servidor, aceptan datos coincidentes con el número de puerto asignado. Cuando UDP recibe un datagrama destinado a uno de esos puertos, envía los datos de aplicación a la aplicación correspondiente según su número de puerto. En la figura, se muestra un servidor UDP que escucha solicitudes, donde una aplicación de servidor RADIUS utiliza UDP para recibir solicitudes en el puerto 1812, mientras que las solicitudes DNS del cliente se reciben en el puerto 53.Procesos de cliente UDPEn la comunicación cliente-servidor con UDP, la aplicación cliente inicia la comunicación y selecciona dinámicamente un número de puerto como puerto de origen. El puerto de destino suele ser el número de puerto asignado al proceso de servidor. Después de seleccionar los puertos, se utilizan en el encabezado de todos los datagramas de la transacción. Para la devolución de datos del servidor al cliente, se invierten los números de puerto de origen y destino en el encabezado del datagrama. En la ilustración, se muestra un ejemplo con dos hosts solicitando servicios al servidor DNS y RADIUS."
  },
  
  {
    "title": "NextCloud",
    "url": "/rx/posts/NextCloud/",
    "categories": "Sistemas Microinformáticos y Redes, Servicios en red",
    "tags": "redes locales, teoría, smr",
    "date": "2024-01-15 11:00:00 +0000",
    





    
    "snippet": "NextCloudNextcloud es una plataforma de software de código abierto que ofrece una amplia gama de servicios en la nube para individuos, empresas y organizaciones. Fundada como un proyecto derivado d...",
    "content": "NextCloudNextcloud es una plataforma de software de código abierto que ofrece una amplia gama de servicios en la nube para individuos, empresas y organizaciones. Fundada como un proyecto derivado de ownCloud en 2016, Nextcloud se centra en proporcionar una solución de almacenamiento y colaboración en línea que pone énfasis en la privacidad, la seguridad y la autonomía del usuario.Una de las características fundamentales de Nextcloud es su capacidad para gestionar el almacenamiento de archivos en la nube. Permite a los usuarios almacenar, sincronizar y compartir archivos desde diversos dispositivos, facilitando el acceso a la información desde cualquier lugar con conexión a Internet. La plataforma proporciona aplicaciones nativas para la gestión de archivos, lo que incluye funciones de versionado, compartición de enlaces y la capacidad de colaborar en documentos en tiempo real.Además del almacenamiento de archivos, Nextcloud ofrece una serie de aplicaciones adicionales que abarcan diversas áreas de la productividad y la colaboración. Incluye un sistema de calendario que permite la gestión de eventos y recordatorios, así como una libreta de direcciones para administrar contactos. La funcionalidad de colaboración en documentos se realiza a través de una suite de oficina en línea que permite a los usuarios trabajar simultáneamente en documentos, hojas de cálculo y presentaciones.En términos de seguridad y privacidad, Nextcloud ofrece numerosas características para garantizar que los datos de los usuarios estén protegidos. Esto incluye la capacidad de cifrar archivos, autenticación de dos factores, control de acceso basado en roles y opciones avanzadas de configuración de seguridad.Una ventaja clave de Nextcloud es su capacidad para ser autohospedado. Esto significa que los usuarios tienen la opción de instalar y gestionar Nextcloud en sus propios servidores, brindándoles un control total sobre su infraestructura en la nube. Esta autonomía se alinea con la filosofía de empoderar a los usuarios para que tengan control sobre sus propios datos, en contraste con depender de servicios en la nube externos.En resumen, Nextcloud es una solución completa de servicios en la nube de código abierto que abarca desde el almacenamiento de archivos hasta la colaboración en línea, poniendo énfasis en la seguridad, la privacidad y la capacidad de autogestión por parte de los usuarios.Algunas de las características clave de Nextcloud incluyen:Almacenamiento de archivos: Permite a los usuarios almacenar, sincronizar y compartir archivos en la nube. Puedes acceder a tus archivos desde cualquier lugar con conexión a Internet.Calendario y contactos: Proporciona aplicaciones de calendario y libreta de direcciones para gestionar tus eventos y contactos.Colaboración en documentos: Ofrece herramientas para colaborar en documentos en línea, similar a otras suites de productividad en la nube.Seguridad: Se enfoca en la seguridad y privacidad, permitiendo a los usuarios tener control sobre sus datos y cómo se almacenan y comparten.Extensibilidad: Nextcloud es altamente extensible con la posibilidad de agregar más aplicaciones y funcionalidades a través de complementos.Autogestión: Puedes instalar y gestionar Nextcloud en tus propios servidores, dándote un mayor control sobre tu infraestructura en la nube.¿Qué es Snap?Definición: Snap es un formato de paquete de software y un sistema de distribución de aplicaciones desarrollado por Canonical, la empresa detrás de Ubuntu Linux.Características:Independencia del Sistema: Los paquetes Snap están diseñados para ser independientes del sistema operativo subyacente. Esto significa que una aplicación Snap incluye todas sus dependencias, reduciendo la posibilidad de conflictos y mejorando la portabilidad entre diferentes versiones y distribuciones de Linux.Encapsulación de Dependencias: Una aplicación Snap lleva consigo todas las bibliotecas y dependencias necesarias para su ejecución, eliminando la necesidad de depender en gran medida de las bibliotecas del sistema.Actualizaciones Automáticas: Los paquetes Snap admiten actualizaciones automáticas, lo que significa que las aplicaciones pueden mantenerse actualizadas sin intervención del usuario.Aislamiento: La tecnología de Snap permite el aislamiento de aplicaciones, lo que mejora la seguridad al limitar el acceso de una aplicación a partes del sistema.Ventajas:Facilidad de Distribución: La encapsulación de dependencias y la independencia del sistema facilitan la distribución de aplicaciones, ya que los desarrolladores pueden crear paquetes Snap que funcionen en varias distribuciones de Linux sin modificaciones significativas.Seguridad y Estabilidad: El aislamiento de aplicaciones contribuye a la seguridad y estabilidad del sistema, ya que las aplicaciones Snap no afectan directamente a otras partes del sistema.En resumen, en el contexto de paquetes de software, “Snap” se refiere a un formato de paquete diseñado para simplificar la distribución, instalación y actualización de aplicaciones en entornos Linux, con un énfasis en la independencia del sistema y la seguridad.Instalación en LinuxUn primer paso que necesitamos sería instalar snap:sudo apt update &amp;&amp; sudo apt upgrade -y &amp;&amp; sudo apt install snapd -yPara descargar el paquete snap de Nextcloud e instalarlo en el sistema:sudo snap install nextcloudEl paquete de Nextcloud se descargará e instalará en su servidor. Puede confirmar que el proceso de instalación se realizó correctamente al enumerar los cambios asociados con el paquete snap:snap changes nextcloudSi desea obtener más información sobre el snap de Nextcloud, hay algunos comandos que pueden ser útiles.El comando snap info puede mostrarle la descripción, los comandos de administración de Nextcloud disponibles, así como la versión instalada y el canal de snap al que se realiza el seguimiento:snap info nextcloudLos snaps pueden definir las conexiones con las que son compatibles, que constan de una ranura y un conector que, al combinarse, permiten que los snaps accedan a ciertas capacidades o niveles de acceso. Por ejemplo, los snaps que deben actuar como cliente de red deben tener la conexión network. Para ver qué conexiones de snap define este snap, escriba:snap connections nextcloudPara obtener información sobre todos los servicios y aplicaciones específicos que proporciona este snap, puede consultar el archivo de definición del snap escribiendo lo siguiente:cat /snap/nextcloud/current/meta/snap.yamlUna vez instalado parece ser requisito ejecutar el siguiente comando el cual instala y nos crea el usuario (tarda un poco):sudo nextcloud.manual-install usuario contraseñaAjustar los dominios de confianzaCuando se instala desde la línea de comandos, Nextcloud restringe los nombres de host a los que la instancia responderá. Por defecto, el servicio solo responde a las solicitudes realizadas al nombre de host “localhost”. Accederemos a Nextcloud a través del nombre de dominio o dirección IP del servidor, de modo que tendremos que configurar este ajuste para que acepte estos tipos de solicitudes.Puede ver los ajustes actuales consultando el valor de la matriz trusted_domains:sudo nextcloud.occ config:system:get trusted_domainsActualmente, solo localhost está presente como el primer valor en la matriz. Podemos añadir una entrada para el nombre de dominio o dirección IP de nuestro servidor escribiendo lo siguiente:sudo nextcloud.occ config:system:set trusted_domains 1 --value=example.comSi consultamos de nuevo los dominios de confianza, veremos que, ahora, tenemos dos entradas:sudo nextcloud.occ config:system:get trusted_domains"
  },
  
  {
    "title": "Hibernate",
    "url": "/rx/posts/Hibernate/",
    "categories": "Desarrollo Aplicaciones Multiplataforma, Acceso Datos",
    "tags": "acceso a datos, teoría, 2DAM",
    "date": "2024-01-10 11:00:00 +0000",
    





    
    "snippet": "HibernateCon la siguiente estructura SQL:CREATE DATABASE canciones;CREATE TABLE `song` (  `songId` int(11) NOT NULL,  `songName` varchar(25) NOT NULL,  `singer` varchar(25) NOT NULL) ENGINE=InnoDB ...",
    "content": "HibernateCon la siguiente estructura SQL:CREATE DATABASE canciones;CREATE TABLE `song` (  `songId` int(11) NOT NULL,  `songName` varchar(25) NOT NULL,  `singer` varchar(25) NOT NULL) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;      Añadimos las librerías, deben quedar de la siguiente manera:        Añadimos una clase con el siguiente contenido:  import javax.persistence.Column;import javax.persistence.Entity;import javax.persistence.Id;import javax.persistence.Table;@Entity// Seleccionamos el nombre de la tabla@Table(name = \"song\") // POJO classpublic class Song {    // Indicamos el tipo ID y le marcamos el nombre de la columna, en este caso songId. Después le marcamos el tipo de dato, en este caso **int** y el nombre de la variable id.    @Id @Column(name = \"songId\") private int id;    // Indicamos el nombre de la segunda columna **songName**. Después le marcamos el tipo de dato, en este caso **String** y el nombre de la variable songName.    @Column(name = \"songName\") private String songName;     // Indicamos el nombre de la tercera columna **singer**. Después le marcamos el tipo de dato, en este caso **String** y el nombre de la variable artist.    @Column(name = \"singer\") private String artist;     // Método con el cual devolvemos el ID    public int getId() { return id; }     // Método con el cual establecemos el ID    public void setId(int id) { this.id = id; }     // Método con el cual devolvemos el nombre de la canción    public String getSongName() { return songName; }    // Método con el cual establecemos el nombre de la canción     public void setSongName(String songName)    {        this.songName = songName;    }    // Método con el cual devolvemos el nombre del artista    public String getArtist() { return artist; }    // Método con el cual establecemos el nombre del artista     public void setArtist(String artist)    {        this.artist = artist;    }}  Los import:import java.util.HashSet;import java.util.List;import java.util.Set;import org.hibernate.Session;import org.hibernate.SessionFactory;import org.hibernate.cfg.Configuration;  Trabajando con las sesiones:    void crearSession(){        // Paso 1: Crear una instancia de la clase Configuration        Configuration configuration = new Configuration();        // Paso 2: Configurar Hibernate cargando la configuración desde \"hibernate.cfg.xml\"        configuration.configure(\"hibernate.cfg.xml\");        // Paso 3: Agregar la clase Song como una clase anotada en la configuración de Hibernate        configuration.addAnnotatedClass(Song.class);                // Paso 4: Construir la fábrica de sesiones (SessionFactory) utilizando la configuración        this.sessionFactory = configuration.buildSessionFactory();    }  CRUDCreatevoid crearCancion(String songName, String artist) {    // Intenta abrir una sesión utilizando la fábrica de sesiones existente    try (Session session = this.sessionFactory.openSession()) {        // Inicia una transacción en la sesión        session.beginTransaction();        // Crea una nueva instancia de la clase Song y establece sus propiedades        Song nuevo = new Song();        nuevo.setSongName(songName);        nuevo.setArtist(artist);        // Guarda la nueva instancia de Song en la base de datos        session.save(nuevo);        // Realiza commit para confirmar la transacción        session.getTransaction().commit();        // Cierra la sesión después de completar las operaciones        session.close();    }}Readvoid crearCancion(String songName, String artist) {    // Intenta abrir una sesión utilizando la fábrica de sesiones existente    try (Session session = this.sessionFactory.openSession()) {        // Inicia una transacción en la sesión        session.beginTransaction();        // Crea una nueva instancia de la clase Song        Song nuevo = new Song();        // Establece el nombre de la canción y el artista en la instancia de Song        nuevo.setSongName(songName);        nuevo.setArtist(artist);        // Guarda la nueva instancia de Song en la base de datos        session.save(nuevo);        // Realiza commit para confirmar la transacción        session.getTransaction().commit();        // Cierra la sesión después de completar las operaciones        session.close();    }}Updatevoid actualizarProducto(int id, String songName, String artist) {    // Intenta abrir una sesión utilizando la fábrica de sesiones existente    try (Session session = this.sessionFactory.openSession()) {        // Inicia una transacción en la sesión        session.beginTransaction();        // Obtén el objeto Song de la base de datos con el id proporcionado        Song cancion = session.get(Song.class, id);        // Actualiza los campos si se encuentra el objeto Song        if (cancion != null) {            // Establece el nuevo nombre de la canción y artista            cancion.setSongName(songName);            cancion.setArtist(artist);        }        // Realiza commit para confirmar la transacción        session.getTransaction().commit();        // Cierra la sesión después de completar las operaciones        session.close();    }}Deletevoid eliminarProducto(int id) {    // Intenta abrir una sesión utilizando la fábrica de sesiones existente    try (Session session = this.sessionFactory.openSession()) {        // Inicia una transacción en la sesión        session.beginTransaction();        // Obtén el objeto Song de la base de datos con el id proporcionado        Song cancion = session.get(Song.class, id);        // Elimina el objeto Song si se encuentra        if (cancion != null) {            // Utiliza el método delete para eliminar la instancia de Song de la base de datos            session.delete(cancion);        }        // Realiza commit para confirmar la transacción        session.getTransaction().commit();        // Cierra la sesión después de completar las operaciones        session.close();    }}Para finalizar la sesión:void cerrar() {    // Cierra la fábrica de sesiones    this.sessionFactory.close();}  Añadimos un archivo XML dento de nuestro proyecto, se debe llamar *hibernate.cfg.xml con el siguiente contenido:```&lt;?xml version = “1.0” encoding = “utf-8”?&gt;&lt;!DOCTYPE hibernate-configuration PUBLIC     “-//Hibernate/Hibernate Configuration DTD 3.0//EN”     “http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd”&gt;            com.mysql.jdbc.Driver                jdbc:mysql://localhost:3306/canciones        //jdbc:mysql://**direccion_server**:**puerto**/**nombre_BBDD**                2DAM        //**User_BBDD**                2DAM2023        //**Pass_BBDD**                true            ```Esto es todo."
  },
  
  {
    "title": "Subnetting",
    "url": "/rx/posts/Subnetting/",
    "categories": "Sistemas Microinformáticos y Redes, Redes Locales",
    "tags": "redes locales, teoría, smr",
    "date": "2024-01-09 11:00:00 +0000",
    





    
    "snippet": "SubnettingSubnetting es el proceso de dividir una red IP en subredes más pequeñas. Una red IP se compone de direcciones IP que se utilizan para identificar dispositivos en la red. Subnetting permit...",
    "content": "SubnettingSubnetting es el proceso de dividir una red IP en subredes más pequeñas. Una red IP se compone de direcciones IP que se utilizan para identificar dispositivos en la red. Subnetting permite dividir una red grande en segmentos más pequeños, lo que ofrece varios beneficios, como mejorar el rendimiento, facilitar la gestión de la red y proporcionar una mayor seguridad.Cuando se realiza el subnetting, se toma una red IP y se divide en subredes más pequeñas, cada una con su propio rango de direcciones IP. Esto ayuda a optimizar el tráfico en la red y a reducir la congestión al limitar la cantidad de dispositivos en cada subred.Además, el subnetting facilita la gestión de direcciones IP al permitir una asignación más eficiente de direcciones a dispositivos específicos en la red. También proporciona una capa adicional de seguridad al aislar segmentos de la red, lo que dificulta la propagación de problemas o ataques a toda la red.En resumen, subnetting es una técnica que se utiliza para dividir redes IP en subredes más pequeñas con el objetivo de mejorar la eficiencia, la gestión y la seguridad de la red.IPUna dirección IP, o dirección de Protocolo de Internet, es un identificador único asignado a cada dispositivo conectado a una red que utiliza el protocolo de Internet para la comunicación. Este protocolo es esencial para el funcionamiento de Internet y redes locales.Hay dos versiones principales de direcciones IP: IPv4 (Protocolo de Internet versión 4) e IPv6 (Protocolo de Internet versión 6). La mayoría de las direcciones IP utilizadas actualmente son de la versión IPv4, que consta de cuatro conjuntos de números separados por puntos (por ejemplo, 192.168.1.1). Sin embargo, debido al agotamiento de direcciones IPv4, se ha implementado gradualmente IPv6, que utiliza una notación hexadecimal y proporciona un espacio de direcciones mucho más amplio.Las direcciones IP tienen dos funciones principales:Identificación del host o dispositivo: Cada dispositivo en una red tiene una dirección IP única que lo identifica. Esto permite que los datos se envíen a destinos específicos en la red.Localización en la red: La dirección IP también se utiliza para determinar la ubicación del dispositivo en la red. La dirección IP está organizada jerárquicamente, lo que significa que se puede identificar la red y la subred a la que pertenece un dispositivo basándose en parte en sus números.Por lo tanto, una dirección IP es un número único asignado a cada dispositivo en una red para permitir la identificación y la comunicación en el entorno de Internet. Estas direcciones son fundamentales para el enrutamiento de datos a través de la red global.CaracterísticasLas direcciones IP (Protocolo de Internet) tienen varias características clave que las definen y las distinguen. Aquí hay una explicación de algunas de las características más importantes:      Unicidad: Cada dirección IP es única en una red determinada en un momento dado. Esto significa que no puede haber dos dispositivos diferentes con la misma dirección IP en la misma red.        Jerarquía: Las direcciones IP están organizadas en una estructura jerárquica. Hay una parte de la dirección que identifica la red y otra parte que identifica el dispositivo en esa red. Esto facilita el enrutamiento eficiente de datos a través de Internet.        Versión: Hay dos versiones principales de direcciones IP: IPv4 e IPv6. IPv4 utiliza una notación de cuatro conjuntos de números decimales separados por puntos (por ejemplo, 192.168.1.1), mientras que IPv6 utiliza una notación hexadecimal más larga.        Direcciones Públicas y Privadas: Las direcciones IP pueden ser públicas o privadas. Las direcciones IP públicas son asignadas por la Autoridad de Asignación de Números de Internet (IANA) y son accesibles desde Internet. Las direcciones IP privadas se utilizan en redes locales y no son directamente accesibles desde Internet.        Clases y Subredes: En el pasado, las direcciones IP se dividían en clases (A, B, C, etc.), pero ahora se utiliza el concepto de subredes, que permite una asignación más flexible y eficiente de direcciones IP en una red.        Máscara de Subred: Junto con la dirección IP, se utiliza una máscara de subred para dividir la dirección en parte de red y parte de host. La máscara de subred indica qué parte de la dirección se refiere a la red y qué parte identifica al dispositivo en esa red.        Dinámicas o Estáticas: Las direcciones IP pueden ser asignadas de manera dinámica por un servidor DHCP (Protocolo de Configuración Dinámica de Host) o de manera estática, donde se configuran manualmente en cada dispositivo.        Longitud de Dirección: IPv4 utiliza direcciones de 32 bits, mientras que IPv6 utiliza direcciones de 128 bits. IPv6 tiene un espacio de direcciones significativamente más grande, lo que ayuda a abordar la escasez de direcciones IPv4.        Estas características permiten que las direcciones IP cumplan su función fundamental de identificación y enrutamiento en redes, ya sea en Internet o en redes locales.  IP públicas vs privadasLas direcciones IP se dividen en dos categorías principales: direcciones IP públicas y direcciones IP privadas. Estas categorías tienen propósitos y características distintas:Direcciones IP Públicas:  Acceso desde Internet: Las direcciones IP públicas son aquellas que son asignadas de manera única a un dispositivo y son accesibles directamente desde Internet. Cada dispositivo conectado a Internet, como servidores web, routers y computadoras, necesita tener una dirección IP pública única.  Asignación por IANA: La Autoridad de Asignación de Números de Internet (IANA) asigna bloques de direcciones IP públicas a organizaciones regionales y proveedores de servicios de Internet (ISP). Luego, los ISP distribuyen estas direcciones a sus clientes.  Identificación única global: Las direcciones IP públicas son únicas a nivel mundial y no se pueden repetir en Internet. Permiten que los dispositivos se comuniquen de manera única y se encuentren en la red global.Direcciones IP Privadas:  Uso en redes locales: Las direcciones IP privadas se utilizan dentro de redes locales (como hogares, empresas o instituciones) y no son directamente accesibles desde Internet. Permiten la comunicación dentro de la red local, pero los dispositivos con direcciones IP privadas necesitan un router o un dispositivo de red con una dirección IP pública para acceder a Internet.  Reservadas para uso privado: Hay rangos específicos de direcciones IP reservados para uso privado, como los definidos en los estándares RFC 1918. Ejemplos comunes incluyen direcciones en los rangos 192.168.x.x, 172.16.x.x - 172.31.x.x, y 10.x.x.x.  Traducción de direcciones de red (NAT): Para permitir que múltiples dispositivos en una red privada compartan una única dirección IP pública para acceder a Internet, se utiliza la traducción de direcciones de red (NAT). El router traduce las direcciones IP privadas a la dirección IP pública antes de enviar datos a través de Internet.En resumen, las direcciones IP públicas son únicas y accesibles desde Internet, mientras que las direcciones IP privadas se utilizan internamente en redes locales y no son directamente accesibles desde la red global. Se utiliza NAT para permitir que los dispositivos con direcciones IP privadas accedan a Internet a través de una única dirección IP pública.Direcciones IP públicasLas direcciones IP públicas se dividen en bloques de direcciones que son asignados y administrados por la Autoridad de Asignación de Números de Internet (IANA), así como por las organizaciones regionales y proveedores de servicios de Internet (ISP). Aquí hay una explicación de los rangos de direcciones IP públicas principales:Clase A:Rango:1.0.0.0 a 126.255.255.255Notas:Incluye un gran número de direcciones, pero debido a su tamaño, la mayoría de las asignaciones de Clase A se realizan a organizaciones muy grandes o a gobiernos.Clase B:Rango:128.0.0.0 a 191.255.255.255Notas:Asignado a organizaciones medianas. Los primeros 16 bits indican la red, y los siguientes 16 bits identifican dispositivos en esa red.Clase C:Rango:192.0.0.0 a 223.255.255.255Notas:Asignado a organizaciones más pequeñas. Los primeros 24 bits indican la red, y los últimos 8 bits identifican dispositivos en esa red.Clase D (Direcciones de Multidifusión):Rango:224.0.0.0 a 239.255.255.255Notas:Reservado para la transmisión de datos a múltiples destinos simultáneamente.Clase E (Reservado para uso futuro):Rango:240.0.0.0 a 255.255.255.255Notas:Actualmente reservado para uso futuro y experimentación.Direcciones de Reserva y Especiales:Direcciones de Loopback:127.0.0.0 a 127.255.255.255Usado para las pruebas locales; cualquier tráfico enviado aquí se redirige al propio dispositivo.Direcciones de Enlace Local:169.254.0.0 a 169.254.255.255Utilizado por el protocolo de configuración automática de direcciones (APIPA) cuando un dispositivo no puede obtener una dirección IP de manera dinámica.Estos rangos son fundamentales para el funcionamiento de Internet, ya que permiten la identificación única de dispositivos y facilitan el enrutamiento eficiente de los datos a través de la red global. Es importante tener en cuenta que, con el agotamiento de direcciones IPv4, se ha promovido la adopción de IPv6, que utiliza un formato diferente y tiene un espacio de direcciones mucho más grande.Direcciones IP privadasLas direcciones IP privadas están reservadas para su uso en redes locales y no son directamente accesibles desde Internet. Estos rangos están definidos en el RFC 1918 y se utilizan comúnmente en redes domésticas, empresas y otras configuraciones internas. Aquí están los rangos de direcciones IP privadas más comunes:Clase A Privada:Rango:10.0.0.0 a 10.255.255.255Notas:Amplio rango de direcciones que se pueden utilizar en redes privadas. Muy flexible y adecuado para organizaciones grandes.Clase B Privada:Rango:172.16.0.0 a 172.31.255.255Notas:Este rango permite un número significativo de direcciones para redes medianas. Los primeros 12 bits indican la red, y los siguientes 12 bits identifican dispositivos en esa red.Clase C Privada:Rango:192.168.0.0 a 192.168.255.255Notas:Este rango es muy común en redes domésticas y pequeñas empresas. Los primeros 16 bits indican la red, y los últimos 8 bits identifican dispositivos en esa red.Estos rangos de direcciones IP privadas permiten a las organizaciones implementar redes internas sin preocuparse por conflictos de direcciones IP con dispositivos en Internet. Cuando los dispositivos en una red privada necesitan acceder a Internet, se utiliza la técnica de Traducción de Direcciones de Red (NAT) en el enrutador para traducir las direcciones privadas a una única dirección IP pública proporcionada por el ISP.Es importante destacar que, aunque estas direcciones están reservadas para uso privado, es esencial planificar y administrar adecuadamente las direcciones IP en una red para evitar conflictos y garantizar una comunicación eficiente entre los dispositivos locales.¿Exista las ip pública 10.0.0.10?La dirección IP 10.0.0.10 es parte del rango de direcciones IP privadas reservadas para redes locales, conocido como Clase A Privada. Por lo tanto, puede ser utilizada en redes privadas internas, como redes domésticas o empresariales, pero no es una dirección IP pública única y globalmente accesible en Internet.Si tienes un dispositivo con la dirección IP 10.0.0.10 en tu red local, es perfectamente válido y común. Sin embargo, ten en cuenta que para que los dispositivos con direcciones IP privadas, como esta, accedan a Internet, generalmente se utiliza la técnica de Traducción de Direcciones de Red (NAT) en el enrutador para asignar una única dirección IP pública proporcionada por tu proveedor de servicios de Internet (ISP).SubnettingSubnetting, o subdivisión de redes, es el proceso de dividir una red IP en subredes más pequeñas. Este procedimiento se realiza por varias razones, entre las cuales se incluyen la eficiencia en el uso de direcciones IP, el control del tráfico de la red, y la mejora de la seguridad. Al utilizar subnetting, se pueden asignar de manera más eficiente las direcciones IP disponibles, evitando el agotamiento del espacio de direcciones y facilitando la administración de la red.Aquí hay algunos conceptos clave relacionados con el subnetting:Dirección IP y Máscara de Subred:Cada dispositivo en una red tiene una dirección IP única que lo identifica. Además, se utiliza una máscara de subred para dividir la dirección IP en parte de red y parte de host.Máscara de Subred y Bits de Subred:La máscara de subred consiste en una serie de unos seguidos de ceros. Los unos indican la parte de red, y los ceros indican la parte de host. La cantidad de unos en la máscara determina la cantidad de bits dedicados a la red. Por ejemplo, en una máscara de subred de 255.255.255.0 (o /24 en notación de prefijo CIDR), hay 24 bits dedicados a la red y 8 bits para los hosts.División de Subredes:Al subdividir una red, se toman prestados bits de la parte de host para crear subredes más pequeñas. Por ejemplo, si se toman prestados 2 bits, se pueden crear 4 subredes (2^2 = 4).Notación CIDR:La notación CIDR (Classless Inter-Domain Routing) se utiliza para describir direcciones IP y máscaras de subred. Por ejemplo, 192.168.1.0/24 indica una red con una máscara de subred de 24 bits.Ventajas de Subnetting:Eficiencia en el uso de direcciones: Permite asignar direcciones IP de manera más eficiente.Mejora de la seguridad: Facilita la implementación de políticas de seguridad al aislar segmentos de red.Control del tráfico: Facilita la administración y control del tráfico en la red.NAT (Traducción de Direcciones de Red):En muchos casos, cuando se utilizan direcciones IP privadas en una red local, se implementa la NAT para traducir esas direcciones a una única dirección IP pública al acceder a Internet.Subnetting es una habilidad esencial en la administración de redes, ya que permite una gestión más efectiva de las direcciones IP y proporciona flexibilidad para adaptarse a las necesidades cambiantes de la red.Dividir una red de Clase C mediante subnetting implica tomar la dirección IP de la red y subdividirla en segmentos más pequeños, conocidos como subredes. Aquí os proporcionaré un ejemplo de cómo dividir una red de Clase C (que tiene una máscara de subred por defecto de 255.255.255.0 o /24 en notación CIDR) en subredes más pequeñas.Supongamos que tienes la dirección de red de Clase C: 192.168.1.0 con una máscara de subred de 255.255.255.0 (/24). Esta red por defecto tiene 256 direcciones IP disponibles (2^8), pero puedes subdividirla en subredes más pequeñas.Paso 1: Determinar cuántas subredes necesitas:Decide cuántas subredes necesitas y cuántos hosts necesitas en cada subred. Por ejemplo, podrías necesitar 4 subredes, cada una con capacidad para 60 hosts.Paso 2: Determinar el número de bits necesarios:Calcula cuántos bits necesitarás para representar el número de subredes y hosts que deseas en cada subred. En nuestro ejemplo, necesitarías al menos 2 bits para las subredes (2^2 = 4) y 6 bits para los hosts en cada subred (2^6 = 64).Paso 3: Crear la nueva máscara de subred:Añade los bits necesarios a la máscara de subred original. En este caso, necesitas 2 bits para las subredes y 6 bits para los hosts. Entonces, la nueva máscara de subred será 255.255.255.192 (/26 en notación CIDR).Paso 4: Calcular los tamaños y rangos de subred:Tamaño de cada subred: 2^(Número de bits para hosts) = 64 direcciones IPRango de la primera subred: 192.168.1.0 a 192.168.1.63Rango de la segunda subred: 192.168.1.64 a 192.168.1.127Rango de la tercera subred: 192.168.1.128 a 192.168.1.191Rango de la cuarta subred: 192.168.1.192 a 192.168.1.255Paso 5: Asignar direcciones a las subredes:Asigna las direcciones IP a las subredes según el rango calculado. Asegúrate de no tener solapamientos y de que cada dirección IP esté correctamente asignada a la subred correspondiente.Este es un ejemplo básico de cómo podrías dividir una red de Clase C mediante subnetting. En situaciones reales, es posible que desees considerar otros factores, como la expansión futura de la red, el enrutamiento, y la asignación eficiente de direcciones. La práctica y la comprensión de los cálculos son esenciales para llevar a cabo con éxito el subnetting."
  },
  
  {
    "title": "Montaje del servicio VPN",
    "url": "/rx/posts/servicio-VPN_Windows/",
    "categories": "Sistemas Microinformáticos y Redes, Servicios en red",
    "tags": "redes locales, teoría, smr",
    "date": "2024-01-07 11:00:00 +0000",
    





    
    "snippet": "",
    "content": ""
  },
  
  {
    "title": "Capa red",
    "url": "/rx/posts/Capa-red/",
    "categories": "Sistemas Microinformáticos y Redes, Redes Locales",
    "tags": "redes locales, teoría, smr",
    "date": "2024-01-04 11:00:00 +0000",
    





    
    "snippet": "Capa de redExplique cómo los routers utilizan los protocolos y los servicios de capa de red para habilitar la conectividad integral.Leyenda de la tabla| Título del tema | Objetivo del tema || — | —...",
    "content": "Capa de redExplique cómo los routers utilizan los protocolos y los servicios de capa de red para habilitar la conectividad integral.Leyenda de la tabla| Título del tema | Objetivo del tema || — | — || Características de la capa de red | Explique cómo la capa de red utiliza los protocolos IP para una confiabilidad de comunicaciones. || Paquete IPv4 | Explique la función de los principales campos de encabezado en el paquete IPv4. || Paquete IPv6 | Explique la función de los principales campos de encabezado en el paquete IPv6. || Cómo arma las rutas un host | Explique cómo los dispositivos de red usan tablas de enrutamiento para dirigir paquetes a un red de destino. || Tablas de enrutamiento de router | Explique la función de los campos en la tabla de enrutamiento de un router. |Características de la capa de redLa capa de redLa capa de red, o Capa OSI 3, proporciona servicios para permitir que los dispositivos finales intercambien datos a través de redes. Como se muestra en la figura, IP versión 4 (IPv4) e IP versión 6 (IPv6) son los principales protocolos de comunicación de la capa de red. Otros protocolos de capa de red incluyen protocolos de enrutamiento como Open Shortest Path First (OSPF) y protocolos de mensajería como Internet Control Message Protocol (ICMP).Protocolos de capa de redPara lograr comunicaciones end-to-end a través de los límites de la red, los protocolos de capa de red realizan cuatro operaciones básicas:Direccionamiento de dispositivos finales : los dispositivos finales deben configurarse con una dirección IP única para la identificación en la red.Encapsulación: La capa de red encapsula la unidad de datos de protocolo (PDU) de la capa de transporte en un paquete. El proceso de encapsulamiento agrega información de encabezado IP, como la dirección IP de los hosts de origen (emisores) y de destino (receptores). El proceso de encapsulación lo realiza el origen del paquete IP.Enrutamiento: La capa de red proporciona servicios para dirigir los paquetes a un host de destino en otra red. Para transferir un paquete a otras redes, debe procesarlo un router. La función del router es seleccionar la mejor ruta y dirigir los paquetes al host de destino en un proceso que se denomina “enrutamiento”. Un paquete puede cruzar muchos routers antes de llegar al host de destino. Se denomina “salto” a cada router que cruza un paquete antes de alcanzar el host de destino.Desencapsulación: Cuando el paquete llega a la capa de red del host de destino, el host verifica el encabezado IP del paquete. Si la dirección IP de destino dentro del encabezado coincide con su propia dirección IP, se elimina el encabezado IP del paquete. Una vez que la capa de red desencapsula el paquete, la PDU de capa 4 que se obtiene se transfiere al servicio apropiado en la capa de transporte. El proceso de desencapsulación lo realiza el host de destino del paquete IP.A diferencia de la capa de transporte (Capa OSI 4), que gestiona el transporte de datos entre los procesos que se ejecutan en cada host, los protocolos de comunicación de la capa de red (es decir, IPv4 e IPv6) especifican la estructura de paquetes y el procesamiento utilizado para transportar los datos de un host a otro host. La capa de red puede transportar paquetes de varios tipos de comunicación entre varios hosts porque funciona sin tener en cuenta los datos que contiene cada paquete.Encapsulación IPIP encapsula el segmento de la capa de transporte (la capa justo por encima de la capa de red) u otros datos agregando un encabezado IP. El encabezado IP se usa para entregar el paquete al host de destino.La figura ilustra cómo la PDU de la capa de transporte es encapsulada por la PDU de la capa de red para crear un paquete IP.El proceso de encapsulamiento de datos capa por capa permite que se desarrollen y se escalen los servicios en las diferentes capas sin afectar a las otras capas. Esto significa que IPv4 o IPv6 o cualquier protocolo nuevo que se desarrolle en el futuro puede armar sin inconvenientes un paquete con los segmentos de capa de transporte.El encabezado IP es examinado por dispositivos de Capa 3 (es decir, routers y switches de Capa 3) a medida que viaja a través de una red a su destino. Es importante tener en cuenta que la información de direccionamiento IP permanece igual desde el momento en que el paquete sale del host de origen hasta que llega al host de destino, excepto cuando se traduce por el dispositivo que realiza la traducción de direcciones de red (NAT) para IPv4.Nota: NAT se discute en módulos posteriores.Los routers implementan protocolos de enrutamiento para enrutar paquetes entre redes. El enrutamiento realizado por estos dispositivos intermediarios examina el direccionamiento de la capa de red en el encabezado del paquete. En todos los casos, la porción de datos del paquete, es decir, la PDU de la capa de transporte encapsulada u otros datos, permanece sin cambios durante los procesos de la capa de red.Características de IPIP se diseñó como un protocolo con sobrecarga baja. Provee solo las funciones necesarias para enviar un paquete de un origen a un destino a través de un sistema interconectado de redes. El protocolo no fue diseñado para rastrear ni administrar el flujo de paquetes. Estas funciones, si es necesario, están a cargo de otros protocolos en otras capas, principalmente TCP en la capa 4.Estas son las características básicas de la IP:Sin conexión: - no hay conexión con el destino establecido antes de enviar paquetes de datos.Mejor esfuerzo: - la IP es inherentemente poco confiable porque no se garantiza la entrega de paquetes.Medios independientes: - Medios independientes: la operación es independiente del medio (es decir, cobre, fibra óptica o inalámbrico) que transporta los datos.Sin conexiónSin conexión - AnalogíaIP no tiene conexión, lo que significa que IP no crea una conexión de extremo a extremo dedicada antes de enviar los datos. La comunicación sin conexión es conceptualmente similar a enviar una carta a alguien sin notificar al destinatario por adelantado. La figura resume este punto clave.Las comunicaciones de datos sin conexión funcionan con el mismo principio. Como se muestra en la figura, IP no requiere un intercambio inicial de información de control para establecer una conexión de extremo a extremo antes de que se reenvíen los paquetes.Sin conexión: redMejor esfuerzoLa IP tampoco necesita campos adicionales en el encabezado para mantener una conexión establecida. Este proceso reduce en gran medida la sobrecarga del protocolo IP. Sin embargo, sin una conexión completa preestablecida, los remitentes no saben si los dispositivos de destino están presentes y en funcionamiento cuando envían paquetes, ni tampoco si el destinatario recibe el paquete o si puede acceder al paquete y leerlo.El protocolo IP no garantiza que todos los paquetes que se envían, de hecho, se reciban. En la ilustración, se muestran las características de entrega de mejor esfuerzo o poco confiable del protocolo IP.Independiente de los mediosQue sea poco confiable significa que IP no tiene la funcionalidad para administrar o recuperar paquetes no recibidos o dañados. Esto se debe a que, si bien los paquetes IP se envían con información sobre la ubicación de la entrega, no contienen información que pueda procesarse para informar al remitente si la entrega fue exitosa. Es posible que los paquetes lleguen dañados o fuera de secuencia al destino o que no lleguen en absoluto. IP no tiene la funcionalidad de retransmitir paquetes si se producen errores.Las aplicaciones que utilizan los datos o los servicios de capas superiores deben solucionar problemas como el envío de paquetes fuera de orden o la pérdida de paquetes. Esta característica permite que IP funcione de manera muy eficaz. En el conjunto de protocolos TCP / IP, la confiabilidad es la función del protocolo TCP en la capa de transporte.IP funciona independientemente de los medios que transportan los datos en las capas más bajas de la pila de protocolos. Como se muestra en la ilustración, los paquetes IP pueden ser señales electrónicas que se transmiten por cables de cobre, señales ópticas que se transmiten por fibra óptica o señales de radio inalámbricas.La capa de enlace de datos OSI es responsable de tomar un paquete IP y prepararlo para la transmisión a través del medio de comunicación. Esto significa que la entrega de paquetes IP no se limita a ningún medio en particular.Sin embargo, la capa de red tiene en cuenta una de las características más importantes del medio, que es el tamaño máximo de PDU que cada medio puede transportar. Esta característica se conoce como “unidad de transmisión máxima” (MTU). Parte del control de la comunicación entre la capa de enlace de datos y la capa de red consiste en establecer el tamaño máximo del paquete. La capa de enlace de datos pasa el valor de MTU a la capa de red. La capa de red luego determina qué tamaño pueden tener los paquetes.En algunos casos, un dispositivo intermedio, generalmente un router, debe dividir un paquete IPv4 cuando lo reenvía de un medio a otro con una MTU más pequeña. Este proceso se denomina “fragmentación de paquetes” o “fragmentación”. La fragmentación provoca latencia. El router no puede fragmentar los paquetes IPv6.Paquete IPv4Encabezado de paquetes IPv4IPv4 es uno de los protocolos de comunicación de la capa de red principal. El encabezado del paquete IPv4 se utiliza para garantizar que este paquete se entrega en su siguiente parada en el camino a su dispositivo final de destino.El encabezado de paquetes IPv4 consta de campos que contienen información importante sobre el paquete. Estos campos tienen números binarios que examinan el proceso de capa 3.Campos de encabezado de paquete IPv4Los valores binarios de cada campo identifican diversos parámetros de configuración del paquete IP. Los diagramas de encabezado del protocolo, que se leen de izquierda a derecha y de arriba hacia abajo, proporcionan una representación visual de consulta al analizar los campos de protocolo. El diagrama de encabezado del protocolo IP en la ilustración identifica los campos de un paquete IPv4.Los dos campos a los que se hace más referencia son los de dirección IP de origen y de destino En estos campos, se identifica de dónde viene el paquete y a dónde va. Por lo general, estas direcciones no cambian mientras se viaja desde el origen hasta el destino.Para identificar y validar el paquete, se usan los campos de longitud del encabezado de Internet (IHL), longitud total y el encabezado checksum.Para reordenar un paquete fragmentado, se usan otros campos. Específicamente, el paquete IPv4 utiliza los campos de identificación, señaladores y desplazamiento de fragmentos para llevar un control de los fragmentos. Un router puede tener que fragmentar un paquete IPv4 cuando lo reenvía de un medio a otro con una MTU más pequeña.Los campos Opciones y Relleno rara vez se usan y están fuera del alcance de este módulo.¿Cómo arma las rutas el host?La decisión de reenvío de hostCon IPv4 e IPv6, los paquetes siempre se crean en el host de origen. El host de origen debe poder dirigir el paquete al host de destino. Para ello, los dispositivos finales de host crean su propia tabla de enrutamiento. En este tema se explica cómo los dispositivos finales utilizan las tablas de enrutamiento.Otra función de la capa de red es dirigir los paquetes entre hosts. Un host puede enviar un paquete a lo siguiente:Itself - un host puede hacer ping a sí mismo enviando un paquete a una dirección IPv4 especial de 127.0.0.1 o una dirección IPv6 ::1, que se conoce como la interfaz de bucle invertido. El hacer ping a la interfaz de bucle invertido, pone a prueba la pila del protocolo TCP/IP en el host.Host local - este es un host de destino que se encuentra en la misma red local que el host emisor. Los hosts de origen y destino comparten la misma dirección de red.Host remoto - este es un host de destino en una red remota. Los hosts de origen y destino no comparten la misma dirección de red.La figura ilustra la conexión de PC1 a un host local en la misma red y a un host remoto ubicado en otra red.El dispositivo final de origen determina si un paquete está destinado a un host local o a un host remoto. El dispositivo final de origen determina si la dirección IP de destino está en la misma red en la que está el propio dispositivo de origen. El método de determinación varía según la versión IP:En IPv4 : el dispositivo de origen utiliza su propia máscara de subred junto con su propia dirección IPv4 y la dirección IPv4 de destino para realizar esta determinación.En IPv6 : el router local anuncia la dirección de red local (prefijo) a todos los dispositivos de la red.En una red doméstica o comercial, puede tener varios dispositivos cableados e inalámbricos interconectados mediante un dispositivo intermediario, como un switch LAN o un punto de acceso inalámbrico (WAP). Este dispositivo intermediario proporciona interconexiones entre hosts locales en la red local. Los hosts locales pueden conectarse y compartir información sin la necesidad de dispositivos adicionales. Si un host está enviando un paquete a un dispositivo que está configurado con la misma red IP que el dispositivo host, el paquete simplemente se reenvía desde la interfaz del host, a través del dispositivo intermediario, y directamente al dispositivo de destino.Por supuesto, en la mayoría de las situaciones queremos que nuestros dispositivos puedan conectarse más allá del segmento de red local, como a otros hogares, negocios e Internet. Los dispositivos que no están en el segmento de red local se denominan “módulo remoto de E/S”. Cuando un dispositivo de origen envía un paquete a un dispositivo de destino remoto, se necesita la ayuda de los routers y del enrutamiento. El enrutamiento es el proceso de identificación de la mejor ruta para llegar a un destino. El router conectado al segmento de red local se denomina gateway predeterminado.Puerta de Enlace Predeterminada (Gateway)La puerta de enlace predeterminada es el dispositivo de red (es decir, el router o el switch de capa 3) que puede enrutar el tráfico a otras redes. Si se piensa en una red como si fuera una habitación, el gateway predeterminado es como la puerta. Si desea ingresar a otra habitación o red, debe encontrar la puerta.En una red, una puerta de enlace predeterminada suele ser un router con estas características:Tiene una dirección IP local en el mismo rango de direcciones que otros hosts en la red local.Puede aceptar datos en la red local y reenviar datos fuera de la red local.Enruta el tráfico a otras redes.Se requiere una puerta de enlace predeterminada para enviar tráfico fuera de la red local. El tráfico no se puede reenviar fuera de la red local si no hay una puerta de enlace predeterminada, la dirección de la puerta de enlace predeterminada no está configurada o la puerta de enlace predeterminada está desactivada.Un host enruta a la puerta de enlace predeterminadaUna tabla de enrutamiento de host generalmente incluirá una puerta de enlace predeterminada. En IPv4, el host recibe la dirección IPv4 de la puerta de enlace predeterminada, ya sea dinámicamente desde el Protocolo de configuración dinámica de host (DHCP) o configurado manualmente. En IPv6, el router anuncia la dirección de la puerta de enlace predeterminada o el host se puede configurar manualmente.En la figura, PC1 y PC2 están configuradas con la dirección IPv4 de 192.168.10.1 como la puerta de enlace predeterminada.La configuración de un gateway predeterminado genera una ruta predeterminada en la tabla de enrutamiento de la PC. Una ruta predeterminada es la ruta o camino que la PC utiliza cuando intenta conectarse a la red remota.Tanto la PC1 como la PC2 tendrán una ruta predeterminada para enviar todo el tráfico destinado a las redes remotas al R1.Tablas de enrutamiento de hostEn un host de Windows, el comando route print o netstat -r se puede usar para mostrar la tabla de enrutamiento del host. Los dos comandos generan el mismo resultado. Al principio, los resultados pueden parecer abrumadores, pero son bastante fáciles de entender.La figura muestra una topología de ejemplo y la salida generada por el netstat –r comando.Tabla de enrutamiento IPv4 para la PC1Nota: La salida sólo muestra la tabla de rutas IPv4.Al ingresar el netstat -rcomando o el comando equivalente, route printse muestran tres secciones relacionadas con las conexiones de red TCP / IP actuales:Lista de interfaces: - enumera la dirección de control de acceso a medios (MAC) y el número de interfaz asignado de cada interfaz con capacidad de red en el host, incluidos los adaptadores Ethernet, Wi-Fi y Bluetooth.Tabla de rutas IPv4: - enumera todas las rutas IPv4 conocidas, incluidas las conexiones directas, la red local y las rutas locales predeterminadas.Tabla de rutas IPv6: - Tabla de rutas IPv6: enumera todas las rutas IPv6 conocidas, incluidas las conexiones directas, la red local y las rutas locales predeterminadas.Introducción al enrutamientoDecisión de envío de paquetes del routerEn el tema anterior se discutieron las tablas de enrutamiento de host. La mayoría de las redes también contienen routers, que son dispositivos intermediarios. Los routers también contienen tablas de enrutamiento. En este tema se tratan las operaciones del router en la capa de red. Cuando un host envía un paquete a otro host, consulta su tabla de enrutamiento para determinar dónde enviar el paquete. Si el host de destino está en una red remota, el paquete se reenvía a la puerta de enlace predeterminada, que generalmente es el router local.¿Qué sucede cuando llega un paquete a la interfaz de un router?El router examina la dirección IP de destino del paquete y busca en su tabla de enrutamiento para determinar dónde reenviar el paquete. La tabla de enrutamiento contiene una lista de todas las direcciones de red conocidas (prefijos) y a dónde reenviar el paquete. Estas entradas se conocen como entradas de ruta o rutas. El router reenviará el paquete utilizando la mejor entrada de ruta que coincida (más larga).La siguiente tabla muestra la información pertinente de la tabla de ruteo R1.R1 Routing TableTabla de enrutamiento IP del routerLa tabla de enrutamiento del router contiene entradas de ruta de red que enumeran todos los posibles destinos de red conocidos.La tabla de enrutamiento almacena tres tipos de entradas de ruta:Redes conectadas directamente - estas entradas de ruta de red son interfaces de router activas. Los routers agregan una ruta conectada directamente cuando una interfaz se configura con una dirección IP y se activa. Cada interfaz de router está conectada a un segmento de red diferente. En la figura, las redes conectadas directamente en la tabla de enrutamiento IPv4 R1 serían 192.168.10.0/24 y 209.165.200.224/30.Redes remotas - estas entradas de ruta de red están conectadas a otros routers. Los routers aprenden acerca de las redes remotas ya sea mediante la configuración explícita de un administrador o mediante el intercambio de información de ruta mediante un protocolo de enrutamiento dinámico. En la figura, la red remota en la tabla de enrutamiento IPv4 R1 sería 10.1.1.0/24.Ruta predeterminada - al igual que un host, la mayoría de los routers también incluyen una entrada de ruta predeterminada, una puerta de enlace de último recurso. La ruta predeterminada se utiliza cuando no hay una mejor coincidencia (más larga) en la tabla de enrutamiento IP. En la figura, la tabla de enrutamiento IPv4 R1 probablemente incluiría una ruta predeterminada para reenviar todos los paquetes al router R2.La figura identifica las redes directamente conectadas y remotas del router R1.Un router puede descubrir redes remotas de dos maneras:Manualmente - las redes remotas se ingresan manualmente en la tabla de rutas mediante rutas estáticas.Dinámicamente - las rutas remotas se aprenden automáticamente mediante un protocolo de enrutamiento dinámico.Enrutamiento estáticoLas rutas estáticas son entradas de ruta que se configuran manualmente. La figura muestra un ejemplo de una ruta estática que se configuró manualmente en el router R1. La ruta estática incluye la dirección de red remota y la dirección IP del router de salto siguiente.Si hay un cambio en la topología de la red, la ruta estática no se actualiza automáticamente y debe reconfigurarse manualmente. Por ejemplo, en la figura R1 tiene una ruta estática para llegar a la red 10.1.1.0/24 a través de R2. Si esa ruta ya no está disponible, R1 tendría que reconfigurarse con una nueva ruta estática a la red 10.1.1.0/24 a través de R3. Por lo tanto, el router R3 necesitaría tener una entrada de ruta en su tabla de enrutamiento para enviar paquetes destinados a 10.1.1.0/24 a R2.El enrutamiento estático tiene las siguientes características:Una ruta estática debe configurarse manualmente.El administrador necesita volver a configurar una ruta estática si hay un cambio en la topología y la ruta estática ya no es viable.Una ruta estática es apropiada para una red pequeña y cuando hay pocos o ninguno de los enlaces redundantes.Una ruta estática se usa comúnmente con un protocolo de enrutamiento dinámico para configurar una ruta predeterminada.Enrutamiento dinámicoUn protocolo de enrutamiento dinámico permite a los routers aprender automáticamente sobre redes remotas, incluida una ruta predeterminada, de otros routers. Los routers que usan protocolos de enrutamiento dinámico comparten automáticamente la información de enrutamiento con otros routers y compensan cualquier cambio de topología sin que sea necesaria la participación del administrador de la red. Si se produce un cambio en la topología de red, los routers comparten esta información mediante el protocolo de enrutamiento dinámico y actualizan automáticamente sus tablas de enrutamiento.Los protocolos de enrutamiento dinámico incluyen OSPF y Enhanced Interior Gateway Routing Protocol (EIGRP). La figura muestra un ejemplo de routers R1 y R2 que comparten automáticamente información de red mediante el protocolo de enrutamiento OSPF.La configuración básica sólo requiere que el administrador de red habilite las redes conectadas directamente dentro del protocolo de enrutamiento dinámico. El protocolo de enrutamiento dinámico hará automáticamente lo siguiente:  Detectar redes remotas.  Mantener información de enrutamiento actualizada.  Elija el mejor camino hacia las redes de destino  Intente encontrar una nueva mejor ruta si la ruta actual ya no está disponibleCuando un router se configura manualmente con una ruta estática o aprende acerca de una red remota dinámicamente mediante un protocolo de enrutamiento dinámico, la dirección de red remota y la dirección de salto siguiente se introducen en la tabla de enrutamiento IP. Como se muestra en la figura, si hay un cambio en la topología de red, los routers se ajustarán automáticamente e intentarán encontrar una nueva mejor ruta.Nota: Es común que algunos routers usen una combinación de rutas estáticas y un protocolo de enrutamiento dinámico.Introducción a una tabla de enrutamiento IPv4Observe en la figura que R2 está conectado a Internet. Por lo tanto, el administrador configuró R1 con una ruta estática predeterminada que envía paquetes a R2 cuando no hay ninguna entrada específica en la tabla de enrutamiento que coincida con la dirección IP de destino. R1 y R2 también están utilizando el enrutamiento OSPF para anunciar redes conectadas directamente.El comando show ip route de EXEC mode privilegiado se utiliza para ver la tabla de enrutamiento IPv4 en un router Cisco IOS. El ejemplo muestra la tabla de enrutamiento IPv4 del router R1. Al principio de cada entrada de tabla de enrutamiento hay un código que se utiliza para identificar el tipo de ruta o cómo se aprendió la ruta. Entre las fuentes de ruta comunes (códigos) se incluyen las siguientes:L - Dirección IP de interfaz local conectada directamenteC – Red conectada directamenteS — La ruta estática fue configurada manualmente por un administradorO - OSPFD - EIGRPLa tabla de enrutamiento muestra todas las rutas de destino IPv4 conocidas para R1.Una ruta conectada directamente se crea automáticamente cuando se configura una interfaz de router con información de dirección IP y se activa. El router añade dos entradas de ruta con los códigos C (es decir, la red conectada) y L (es decir, la dirección IP de la interfaz local de la red conectada). Las entradas de ruta también identifican la interfaz de salida que se utilizará para llegar a la red. Las dos redes conectadas directamente en este ejemplo son 192.168.10.0/24 y 209.165.200.224/30.Los routers R1 y R2 también están utilizando el protocolo de enrutamiento dinámico OSPF para intercambiar información de router. En la tabla de enrutamiento de ejemplo, R1 tiene una entrada de ruta para la red 10.1.1.0/24 que aprendió dinámicamente del router R2 a través del protocolo de enrutamiento OSPF.Una ruta predeterminada tiene una dirección de red de todos los ceros. Por ejemplo, la dirección de red IPv4 es 0.0.0.0. Una entrada de ruta estática en la tabla de enrutamiento comienza con un código de S\\ *, como se resalta en el ejemplo.En resumenCaracterísticas de la capa de redLa capa de red (Capa OSI 3) proporciona servicios para permitir que los dispositivos finales intercambien datos a través de las redes. IPv4 e IPv6 son los principales protocolos de comunicación de la capa de red. La capa de red también incluye el protocolo de enrutamiento OSPF y protocolos de mensajería como ICMP. Los protocolos de capa de red realizan cuatro operaciones básicas: direccionamiento de dispositivos finales, encapsulación, enrutamiento y desencapsulación. IPv4 e IPv6 especifican la estructura de paquetes y el procesamiento utilizado para transportar los datos de un host a otro. IP encapsula el segmento de la capa de transporte agregando un encabezado IP, que se utiliza para entregar el paquete al host de destino. El encabezado IP es examinado por los dispositivos de Capa 3 (es decir, routers) a medida que viaja a través de una red a su destino. Las características de la IP son que es sin conexión, el mejor esfuerzo e independiente de los medios de comunicación. IP no tiene conexión, lo que significa que IP no crea una conexión de extremo a extremo dedicada antes de enviar los datos. El protocolo IP no garantiza que todos los paquetes que se envían, de hecho, se reciban. Esta es la definición de la característica poco confiable, o mejor esfuerzo. IP funciona independientemente de los medios que transportan los datos en las capas más bajas de la pila de protocolos.Paquete IPv4Un encabezado de paquete IPv4 consta de campos que contienen información sobre el paquete. Estos campos tienen números binarios que examinan el proceso de capa 3. Los valores binarios de cada campo identifican diversos parámetros de configuración del paquete IP. Los campos significativos del encabezado IPv6 incluyen: versión, DS, suma de comprobación de encabezado, TTL, protocolo y direcciones IPv4 de origen y destino.Cómo arma las rutas un hostUn host puede enviar un paquete a sí mismo, a otro host local y a un host remoto. En IPv4, el dispositivo de origen utiliza su propia máscara de subred junto con su propia dirección IPv4 y la dirección IPv4 de destino para determinar si el host de destino está en la misma red. En IPv6, el router local anuncia la dirección de red local (prefijo) a todos los dispositivos de la red, para realizar esta determinación. La puerta de enlace predeterminada es el dispositivo de red (es decir, el router) que puede enrutar el tráfico a otras redes. En una red, una puerta de enlace predeterminada suele ser un router que tiene una dirección IP local en el mismo rango de direcciones que otros hosts de la red local, puede aceptar datos en la red local y reenviar datos fuera de la red local, y enrutar el tráfico a otras redes. Una tabla de enrutamiento de host generalmente incluirá una puerta de enlace predeterminada. En IPv4, el host recibe la dirección IPv4 de la puerta de enlace predeterminada de forma dinámica a través de DHCP o se configura manualmente. En IPv6, el router anuncia la dirección de la puerta de enlace predeterminada o el host se puede configurar manualmente. En un host de Windows, el comando route print o netstat -r se puede usar para mostrar la tabla de enrutamiento del host.Introducción al enrutamientoCuando un host envía un paquete a otro host, consulta su tabla de enrutamiento para determinar dónde enviar el paquete. Si el host de destino está en una red remota, el paquete se reenvía a la puerta de enlace predeterminada, que generalmente es el router local. ¿Qué sucede cuando llega un paquete a la interfaz de un enrutador? El router examina la dirección IP de destino del paquete y busca en su tabla de enrutamiento para determinar dónde reenviar el paquete. La tabla de enrutamiento contiene una lista de todas las direcciones de red conocidas (prefijos) y a dónde reenviar el paquete. Estas entradas se conocen como entradas de ruta o rutas. El router reenviará el paquete utilizando la mejor entrada de ruta que coincida (más larga). La tabla de enrutamiento de un router almacena tres tipos de entradas de ruta: redes conectadas directamente, redes remotas y una ruta predeterminada. Los routers aprenden sobre redes remotas de forma manual o dinámica utilizando un protocolo de enrutamiento dinámico. Las rutas estáticas son entradas de ruta que se configuran manualmente. Las rutas estáticas incluyen la dirección de red remota y la dirección IP del router de salto siguiente. OSPF y EIGRP son dos protocolos de enrutamiento dinámico. El comando EXEC mode show ip route privilegiado se utiliza para ver la tabla de enrutamiento IPv4 en un router Cisco IOS. Al principio de una tabla de enrutamiento IPv4 hay un código que se utiliza para identificar el tipo de ruta o cómo se aprendió la ruta. Las fuentes de ruta comunes (códigos) incluyen:L - Dirección IP de interfaz local conectada directamenteC - Red conectada directamenteS - La ruta estática fue configurada manualmente por un administradorO - Open Shortest Path First (OSPF)D - Enhanced Interior Gateway Routing Protocol (EIGRP)"
  },
  
  {
    "title": "Montaje del servicio OpenVPN",
    "url": "/rx/posts/servicio-openvpn/",
    "categories": "Sistemas Microinformáticos y Redes, Servicios en red",
    "tags": "redes locales, teoría, smr",
    "date": "2023-12-28 11:00:00 +0000",
    





    
    "snippet": "Una red privada virtual (VPN) es una tecnología que permite establecer una conexión segura y cifrada entre tu dispositivo (como una computadora, teléfono o tablet) y un servidor remoto. El propósit...",
    "content": "Una red privada virtual (VPN) es una tecnología que permite establecer una conexión segura y cifrada entre tu dispositivo (como una computadora, teléfono o tablet) y un servidor remoto. El propósito principal de una VPN es proteger tu privacidad y seguridad en línea al cifrar el tráfico de datos entre tu dispositivo y el servidor al que te conectas. Aquí hay una explicación más detallada sobre el uso de una VPN:  Cifrado de Datos:          Cuando te conectas a una VPN, tu tráfico de internet se cifra. Esto significa que la información que envías y recibes mientras estás en línea se transforma en un formato ilegible para cualquiera que intente interceptarla.        Privacidad y Anonimato:          La VPN oculta tu dirección IP real y asigna una nueva dirección IP proporcionada por el servidor al que te conectas. Esto ayuda a mantener tu anonimato en línea, ya que los sitios web y servicios a los que te conectas solo verán la dirección IP de la VPN.        Acceso a Redes Restringidas:          Al conectarte a un servidor en una ubicación específica, puedes eludir las restricciones geográficas impuestas por algunos servicios en línea. Por ejemplo, puedes acceder a contenido bloqueado en tu región.        Seguridad en Redes Públicas:          Cuando te conectas a una red Wi-Fi pública, como la de un café o aeropuerto, tu conexión puede ser vulnerable. Una VPN protege tus datos en estas situaciones al cifrar la comunicación, evitando que terceros accedan a tu información.        Evitar la Monitorización del Proveedor de Internet:          Tu proveedor de servicios de internet (ISP) puede rastrear tu actividad en línea. Al usar una VPN, puedes dificultar que el ISP monitoree tus actividades, ya que solo verá la conexión cifrada a la VPN.        Seguridad en Transacciones en Línea:          Las transacciones en línea, como las compras y la banca, están protegidas por el cifrado de la VPN, lo que reduce el riesgo de que terceros accedan a tu información financiera.        Acceso Remoto Seguro:          Las VPN también se utilizan en entornos empresariales para permitir a los empleados acceder de forma segura a la red de la empresa desde ubicaciones remotas.        Protección contra Vigilancia Gubernamental:          En algunos casos, las VPN se utilizan para proteger la privacidad frente a la vigilancia gubernamental. Sin embargo, es importante tener en cuenta que no todas las VPN proporcionan el mismo nivel de anonimato y privacidad.      Es crucial elegir una VPN confiable y respetable, ya que algunas pueden comprometer tu privacidad en lugar de protegerla. Además, ten en cuenta que el uso de una VPN no garantiza el anonimato total, y debes seguir practicando buenas medidas de seguridad en línea.OpenVPN: Una Visión GeneralOpenVPN es una solución de software de código abierto que proporciona una implementación segura de redes privadas virtuales (VPN). Como protocolo VPN, OpenVPN es conocido por su robustez, flexibilidad y capacidad para operar en una variedad de entornos.Características Principales de OpenVPN:  Código Abierto:          OpenVPN es un proyecto de código abierto, lo que significa que su código fuente está disponible para el público. Esto facilita la revisión de seguridad por parte de la comunidad y contribuye a la transparencia del sistema.        Seguridad:          OpenVPN utiliza protocolos y algoritmos criptográficos sólidos para proporcionar una capa segura sobre las conexiones de red. Utiliza tanto el protocolo de seguridad SSL/TLS para la autenticación como el cifrado para proteger la comunicación.        Flexibilidad en la Configuración:          OpenVPN es altamente configurable, lo que permite adaptarse a diversas necesidades y entornos. Puede ser implementado tanto en conexiones punto a punto como en redes más complejas.        Compatibilidad Multiplataforma:          OpenVPN es compatible con una amplia gama de sistemas operativos, incluyendo Windows, Linux, macOS, Android e iOS. Esto facilita su implementación en una variedad de dispositivos y sistemas.        Modos de Funcionamiento:          Ofrece modos de funcionamiento tanto en modo puente como en modo de red. El modo puente permite conectar redes físicas separadas, mientras que el modo de red facilita la conexión de dispositivos individuales a través de una red pública.        Escalabilidad:          OpenVPN es escalable y puede manejar tanto pequeñas implementaciones empresariales como grandes despliegues a nivel de proveedor de servicios. Es adecuado para casos de uso que van desde conexiones remotas de empleados hasta la implementación de VPN a nivel de empresa.        Implementación Segura en Redes Wi-Fi Públicas:          Debido a su capacidad para cifrar el tráfico de datos, OpenVPN es especialmente útil para garantizar la seguridad en redes Wi-Fi públicas, donde la amenaza de accesos no autorizados es mayor.        Comunidad Activa:          OpenVPN cuenta con una comunidad activa de desarrolladores y usuarios que contribuyen al desarrollo continuo de la tecnología. Además del proyecto de código abierto, existe una versión comercial llamada “Access Server” que proporciona una interfaz de usuario web y otras características adicionales.      En resumen, OpenVPN es una opción popular para aquellos que buscan una solución de VPN robusta y altamente personalizable. Su enfoque en la seguridad, la flexibilidad y la compatibilidad multiplataforma lo convierten en una opción sólida para implementaciones tanto a nivel individual como empresarial.EmpecemosEntramos en modo superusuario:sudo -sInstalamos ciertas dependencias:apt update &amp;&amp; apt -y install ca-certificates wget net-tools gnupgEste tipo de operación es común en sistemas basados en Debian y Ubuntu, donde se utiliza GPG (GNU Privacy Guard) para gestionar claves y firmas de paquetes.wget https://as-repository.openvpn.net/as-repo-public.asc -qO /etc/apt/trusted.gpg.d/as-repository.ascAñadimos el siguiente repositorio:echo \"deb [arch=amd64 signed-by=/etc/apt/trusted.gpg.d/as-repository.asc] http://as-repository.openvpn.net/as/debian jammy main\" &gt;/etc/apt/sources.list.d/openvpn-as-repo.listInstalamos el servidor propiamente dicho:apt update &amp;&amp; apt -y install openvpn-asUna vez instalado nos saldrá algo similar a esto:+++++++++++++++++++++++++++++++++++++++++++++++Access Server 2.13.0 has been successfully installed in /usr/local/openvpn_asConfiguration log file has been written to /usr/local/openvpn_as/init.logAccess Server Web UIs are available here:Admin  UI: https://192.168.0.201:943/adminClient UI: https://192.168.0.201:943/To login please use the \"openvpn\" account with \"80IgjLjNu1O2\" password.(password can be changed on Admin UI)+++++++++++++++++++++++++++++++++++++++++++++++Una vez lo tengamos todo instalado tenemos que nos dirigimos a nuestro navegador y poner lo siguiente:https://NUESTRA IP/admin .- Es muy importante poner todo el enlace incluyendo https://Aparecerá algo como esto, aceptamos y continuamos:Como se puede observar tenemos un menú en nuestra parte izquierda, en este manual vamos a añadir usuarios y permitir hacer un NAT a nuestra subredConfiguramos nuestras subredesConfiguramos el NATAñadimos nuestra subred:Guardamos:Reiniciamos el servicio:Añadir usuariosConectarnos desde un clienteComprobamos:Otra forma de configuración a través del script directamenteNos descargamos el siguiente scriptwget https://git.io/vpn -O openvpn-install.shLe damos permisos de ejecuciónsudo chmod +x openvpn-install.shLo instalamossudo bash openvpn-install.shDebemos de obtener un salida algo similar a lo siguienteWelcome to this OpenVPN road warrior installer!This server is behind NAT. What is the public IPv4 address or hostname?Public IPv4 address / hostname [**Aquí saldrá nuestra IP externa**]: **NUESTRA IP EXTERNA**Which protocol should OpenVPN use?   1) UDP (recommended)   2) TCPProtocol [1]: 1What port should OpenVPN listen to?Port [1194]: 1194Select a DNS server for the clients:   1) Current system resolvers   2) Google   3) 1.1.1.1   4) OpenDNS   5) Quad9   6) AdGuardDNS server [1]: 2Enter a name for the first client:Name [client]: alumnoOpenVPN installation is ready to begin.Press any key to continue...Después de esto nos habrá generado un archivo en /root/ con el nombre que le hayamos puestosudo cp /root/alumno.ovpn /home/alumno/Este archivo se le hacemos llegar a nuestro cliente y probamos"
  },
  
  {
    "title": "Markdown cheatsheet",
    "url": "/rx/posts/Markdown-Cheatsheet/",
    "categories": "DAM, ED",
    "tags": "DAM, Markdown, Cheatsheet",
    "date": "2023-12-10 11:00:00 +0000",
    





    
    "snippet": "This is intended as a quick reference and showcase. For more complete info, see John Gruber’s original spec and the Github-flavored Markdown info page.Note that there is also a Cheatsheet specific ...",
    "content": "This is intended as a quick reference and showcase. For more complete info, see John Gruber’s original spec and the Github-flavored Markdown info page.Note that there is also a Cheatsheet specific to Markdown Here if that’s what you’re looking for. You can also check out more Markdown tools.Table of ContentsHeadersEmphasisListsLinksImagesCode and Syntax HighlightingFootnotesTablesBlockquotesInline HTMLHorizontal RuleLine BreaksYouTube VideosHeaders# H1## H2### H3#### H4##### H5###### H6Alternatively, for H1 and H2, an underline-ish style:Alt-H1======Alt-H2------H1H2H3H4H5H6Alternatively, for H1 and H2, an underline-ish style:Alt-H1Alt-H2EmphasisEmphasis, aka italics, with *asterisks* or _underscores_.Strong emphasis, aka bold, with **asterisks** or __underscores__.Combined emphasis with **asterisks and _underscores_**.Strikethrough uses two tildes. ~~Scratch this.~~Emphasis, aka italics, with asterisks or underscores.Strong emphasis, aka bold, with asterisks or underscores.Combined emphasis with asterisks and underscores.Strikethrough uses two tildes. Scratch this.Lists(In this example, leading and trailing spaces are shown with with dots: ⋅)1. First ordered list item2. Another item⋅⋅* Unordered sub-list.1. Actual numbers don't matter, just that it's a number⋅⋅1. Ordered sub-list4. And another item.⋅⋅⋅You can have properly indented paragraphs within list items. Notice the blank line above, and the leading spaces (at least one, but we'll use three here to also align the raw Markdown).⋅⋅⋅To have a line break without a paragraph, you will need to use two trailing spaces.⋅⋅⋅⋅⋅Note that this line is separate, but within the same paragraph.⋅⋅⋅⋅⋅(This is contrary to the typical GFM line break behaviour, where trailing spaces are not required.)* Unordered list can use asterisks- Or minuses+ Or pluses  First ordered list item  Another item          Unordered sub-list.        Actual numbers don’t matter, just that it’s a number  Ordered sub-list      And another item.    You can have properly indented paragraphs within list items. Notice the blank line above, and the leading spaces (at least one, but we’ll use three here to also align the raw Markdown).    To have a line break without a paragraph, you will need to use two trailing spaces.Note that this line is separate, but within the same paragraph.(This is contrary to the typical GFM line break behaviour, where trailing spaces are not required.)    Unordered list can use asterisks  Or minuses  Or plusesLinksThere are two ways to create links.[I'm an inline-style link](https://www.google.com)[I'm an inline-style link with title](https://www.google.com \"Google's Homepage\")[I'm a reference-style link][Arbitrary case-insensitive reference text][I'm a relative reference to a repository file](../blob/master/LICENSE)[You can use numbers for reference-style link definitions][1]Or leave it empty and use the [link text itself].URLs and URLs in angle brackets will automatically get turned into links.http://www.example.com or &lt;http://www.example.com&gt; and sometimesexample.com (but not on Github, for example).Some text to show that the reference links can follow later.[arbitrary case-insensitive reference text]: https://www.mozilla.org[1]: http://slashdot.org[link text itself]: http://www.reddit.comI’m an inline-style linkI’m an inline-style link with titleI’m a reference-style linkI’m a relative reference to a repository fileYou can use numbers for reference-style link definitionsOr leave it empty and use the link text itself.URLs and URLs in angle brackets will automatically get turned into links.http://www.example.com or http://www.example.com and sometimesexample.com (but not on Github, for example).Some text to show that the reference links can follow later.ImagesHere's our logo (hover to see the title text):Inline-style:![alt text](https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png \"Logo Title Text 1\")Reference-style:![alt text][logo][logo]: https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png \"Logo Title Text 2\"Here’s our logo (hover to see the title text):Inline-style:Reference-style:Code and Syntax HighlightingCode blocks are part of the Markdown spec, but syntax highlighting isn’t. However, many renderers – like Github’s and Markdown Here – support syntax highlighting. Which languages are supported and how those language names should be written will vary from renderer to renderer. Markdown Here supports highlighting for dozens of languages (and not-really-languages, like diffs and HTTP headers); to see the complete list, and how to write the language names, see the highlight.js demo page.Inline `code` has `back-ticks around` it.Inline code has back-ticks around it.Blocks of code are either fenced by lines with three back-ticks ```, or are indented with four spaces. I recommend only using the fenced code blocks – they’re easier and only they support syntax highlighting.```javascriptvar s = \"JavaScript syntax highlighting\";alert(s);``````pythons = \"Python syntax highlighting\"print s``````No language indicated, so no syntax highlighting.But let's throw in a &lt;b&gt;tag&lt;/b&gt;.```var s = \"JavaScript syntax highlighting\";alert(s);s = \"Python syntax highlighting\"print sNo language indicated, so no syntax highlighting in Markdown Here (varies on Github).But let's throw in a &lt;b&gt;tag&lt;/b&gt;.FootnotesFootnotes aren’t part of the core Markdown spec, but they supported by GFM.Here is a simple footnote[^1].A footnote can also have multiple lines[^2].You can also use words, to fit your writing style more closely[^note].[^1]: My reference.[^2]: Every new line should be prefixed with 2 spaces.  This allows you to have a footnote with multiple lines.[^note]:    Named footnotes will still render with numbers instead of the text but allow easier identification and linking.    This footnote also has been made with a different syntax using 4 spaces for new lines.Renders to:TablesTables aren’t part of the core Markdown spec, but they are part of GFM and Markdown Here supports them. They are an easy way of adding tables to your email – a task that would otherwise require copy-pasting from another application.Colons can be used to align columns.| Tables        | Are           | Cool  || ------------- |:-------------:| -----:|| col 3 is      | right-aligned | $1600 || col 2 is      | centered      |   $12 || zebra stripes | are neat      |    $1 |There must be at least 3 dashes separating each header cell.The outer pipes (|) are optional, and you don't need to make theraw Markdown line up prettily. You can also use inline Markdown.Markdown | Less | Pretty--- | --- | ---*Still* | `renders` | **nicely**1 | 2 | 3Colons can be used to align columns.            Tables      Are      Cool                  col 3 is      right-aligned      $1600              col 2 is      centered      $12              zebra stripes      are neat      $1                  There must be at least 3 dashes separating each header cell. The outer pipes (      ) are optional, and you don’t need to make the raw Markdown line up prettily. You can also use inline Markdown.                  Markdown      Less      Pretty                  Still      renders      nicely              1      2      3      Blockquotes&gt; Blockquotes are very handy in email to emulate reply text.&gt; This line is part of the same quote.Quote break.&gt; This is a very long line that will still be quoted properly when it wraps. Oh boy let's keep writing to make sure this is long enough to actually wrap for everyone. Oh, you can *put* **Markdown** into a blockquote.  Blockquotes are very handy in email to emulate reply text.This line is part of the same quote.Quote break.  This is a very long line that will still be quoted properly when it wraps. Oh boy let’s keep writing to make sure this is long enough to actually wrap for everyone. Oh, you can put Markdown into a blockquote.Inline HTMLYou can also use raw HTML in your Markdown, and it’ll mostly work pretty well.&lt;dl&gt;  &lt;dt&gt;Definition list&lt;/dt&gt;  &lt;dd&gt;Is something people use sometimes.&lt;/dd&gt;  &lt;dt&gt;Markdown in HTML&lt;/dt&gt;  &lt;dd&gt;Does *not* work **very** well. Use HTML &lt;em&gt;tags&lt;/em&gt;.&lt;/dd&gt;&lt;/dl&gt;  Definition list  Is something people use sometimes.  Markdown in HTML  Does *not* work **very** well. Use HTML tags.Horizontal RuleThree or more...---Hyphens***Asterisks___UnderscoresThree or more…HyphensAsterisksUnderscoresLine BreaksMy basic recommendation for learning how line breaks work is to experiment and discover – hit &lt;Enter&gt; once (i.e., insert one newline), then hit it twice (i.e., insert two newlines), see what happens. You’ll soon learn to get what you want. “Markdown Toggle” is your friend.Here are some things to try out:Here's a line for us to start with.This line is separated from the one above by two newlines, so it will be a *separate paragraph*.This line is also a separate paragraph, but...This line is only separated by a single newline, so it's a separate line in the *same paragraph*.Here’s a line for us to start with.This line is separated from the one above by two newlines, so it will be a separate paragraph.This line is also begins a separate paragraph, but…This line is only separated by a single newline, so it’s a separate line in the same paragraph.(Technical note: Markdown Here uses GFM line breaks, so there’s no need to use MD’s two-space line breaks.)YouTube VideosThey can’t be added directly but you can add an image with a link to the video like this:&lt;a href=\"http://www.youtube.com/watch?feature=player_embedded&amp;v=YOUTUBE_VIDEO_ID_HERE\" target=\"_blank\"&gt;&lt;img src=\"http://img.youtube.com/vi/YOUTUBE_VIDEO_ID_HERE/0.jpg\"alt=\"IMAGE ALT TEXT HERE\" width=\"240\" height=\"180\" border=\"10\" /&gt;&lt;/a&gt;Or, in pure Markdown, but losing the image sizing and border:[![IMAGE ALT TEXT HERE](http://img.youtube.com/vi/YOUTUBE_VIDEO_ID_HERE/0.jpg)](http://www.youtube.com/watch?v=YOUTUBE_VIDEO_ID_HERE)Referencing a bug by #bugID in your git commit links it to the slip. For example #1.License: CC-BY"
  },
  
  {
    "title": "Capa enlace de datos",
    "url": "/rx/posts/Capa-enlace-de-datos/",
    "categories": "Sistemas Microinformáticos y Redes, Redes Locales",
    "tags": "redes locales, teoría, smr",
    "date": "2023-12-10 11:00:00 +0000",
    





    
    "snippet": "Capa de enlace de datosPropósitoLa capa de enlace de datos:La Capa de Enlace de Datos “Capa 2”, actúa como un facilitador que permite la comunicación entre dispositivos en una red. Esta se encuentr...",
    "content": "Capa de enlace de datosPropósitoLa capa de enlace de datos:La Capa de Enlace de Datos “Capa 2”, actúa como un facilitador que permite la comunicación entre dispositivos en una red. Esta se encuentra en el modelo OSI.Su función principal es asegurarse de que los datos estén listos para ser transmitidos a través de la infraestructura física y de que lleguen a su destino sin problemas.Esta capa permite que los dispositivos se comuniquen entre sí sin necesidad de conocer los detalles técnicos de los cables y la infraestructura subyacente. También se asegura de que los datos estén bien empaquetados y que cualquier problema en la transmisión se detecte y se corrija.La Capa de Enlace de Datos es un traductor que hace posible que los dispositivos se entiendan en una red, evitando que tengan que preocuparse por los detalles técnicos de la comunicación. Esto es esencial para que las redes funcionen de manera eficiente y para que sea más fácil incorporar nuevas tecnologías sin cambiar todo el sistema.Subcapas de enlace de datos IEEE 802 LAN/MAN:Los estándares IEEE 802 LAN/MAN se aplican a diferentes tipos de redes, como Ethernet con cable, redes inalámbricas y redes personales inalámbricas. La capa de enlace de datos en estos estándares se divide en dos partes:  Control de Enlace Lógico (LLC): Es un intermediario que coloca etiquetas en los datos para que los dispositivos sepan cómo manejarlos. Esto es útil cuando tienes diferentes tipos de datos viajando por la misma red.  Control de Acceso a Medios (MAC): Este se encarga de preparar los datos para enviarlos y recibirlos en la red. También se asegura de que los datos lleguen correctamente y ayuda a múltiples dispositivos a compartir la misma red de manera organizada.La parte de Control de Acceso a Medios realiza algunas tareas específicas:  Divide los datos en paquetes identificables.  Agrega direcciones a los datos para saber quién envía y quién recibe.  Revisa si los datos se han dañado en el camino.  Coordina cómo varios dispositivos comparten la red (como hablar por turnos).Provisión de acceso a los medios:Cuando los datos viajan de un dispositivo local a uno remoto a través de una red, pueden encontrarse con diferentes tipos de redes. Por ejemplo, en una red Ethernet local, donde varios dispositivos compiten por usar el mismo cable, la capa de enlace de datos (MAC) ayuda a organizar esta competencia. En cambio, en conexiones más simples, como las que involucran dos routers, no necesitamos las mismas reglas de competencia que se utilizan en Ethernet.En el caso de los routers, cuando un paquete llega a ellos, se encargan de empaquetar adecuadamente los datos y enviarlos al siguiente lugar. Para hacer esto, utilizan un conjunto específico de reglas que se adaptan a cada tipo de medio de transmisión. A medida que los paquetes viajan a través de diferentes partes de la red, pueden cambiar de medio y de conjunto de reglas.Los routers hacen un trabajo muy importante en la capa de enlace de datos, donde se encargan de empacar, desempacar y reenviar los datos en función de las características de cada parte de la red por la que pasan.Estándares de la capa de enlace de datos:Los protocolos de la capa de enlace de datos no están definidos por las Solicitud de Comentarios (RFC), a diferencia de los protocolos de capas superiores en el conjunto TCP/IP. El Grupo de Trabajo de Ingeniería de Internet (IETF) es responsable de mantener los protocolos y servicios de las capas superiores en TCP/IP, pero no establece las funciones y el funcionamiento de la capa de acceso a la red en TCP/IP.La definición de estándares abiertos y protocolos aplicables a la capa de acceso a la red, que abarca las capas físicas y de enlace de datos en el modelo OSI, se lleva a cabo por organizaciones de ingeniería. Algunas de estas organizaciones incluyen:  Instituto de Ingenieros Eléctricos y Electrónicos (IEEE).  Unión Internacional de Telecomunicaciones (ITU).  Organización Internacional para la Estandarización (ISO).  Instituto Nacional Estadounidense de Estándares (ANSI).TopologiasTopologías física y lógica:La capa de enlace de datos se encarga de preparar los datos de red para su transmisión en la red física. Para lograr esto, necesita comprender la topología de la red. Hay dos tipos de topologías en redes LAN y WAN:  Topología Física: Describe cómo están conectados físicamente los dispositivos, incluyendo los dispositivos finales y los dispositivos intermedios (como routers, switches y puntos de acceso inalámbrico). También puede incluir detalles como la ubicación física de los dispositivos. Las topologías físicas suelen ser punto a punto o en forma de estrella.  Topología Lógica: Se refiere a cómo se transfieren las tramas de datos de un nodo a otro en la red. Identifica las conexiones virtuales a través de interfaces de dispositivos y esquemas de direccionamiento IP en la capa 3.La capa de enlace de datos visualiza la topología lógica de la red mientras controla el acceso a los medios de transmisión. La topología lógica influye en el tipo de trama de red y en el control de acceso a los medios que se utilizan.Topologías de WAN:Las topologías WAN son formas de organizar conexiones en redes de gran alcance geográfico:  Punto a Punto en WAN: Es como una conversación directa entre dos ubicaciones remotas, a menudo usando líneas dedicadas. Las topologías punto a punto conectan directamente dos dispositivos, sin necesidad de compartir la red con otros. Cuando se usan protocolos como PPP, los dispositivos no tienen que preocuparse por distinguir entre tramas dirigidas a ellos o a otros. Esto simplifica mucho el manejo de las comunicaciones, ya que todas las tramas se mueven solo entre esos dos dispositivos conectados. Incluso si hay dispositivos intermedios entre los dispositivos de origen y destino, la topología lógica sigue siendo punto a punto. Agregar dispositivos intermedios no cambia la forma en que se establece la conexión punto a punto.  Hub and Spoke en WAN: Implica una ubicación central que se conecta con varias ubicaciones remotas, como una estrella con un centro y muchas ramas hacia afuera. El centro administra la red.  Malla en WAN: Conecta todas las ubicaciones remotas entre sí, como si todas estuvieran entrelazadas, proporcionando muchas rutas para la comunicación.La elección de la topología WAN depende de las necesidades específicas de la organización, la importancia de la redundancia y la administración en la red.Topologías de LAN:En las redes de área local (LAN) donde varios dispositivos se conectan, generalmente usamos tres tipos de configuraciones principales:  Topología en Estrella: Aquí, todos los dispositivos se conectan a un dispositivo central, como un switch. Si ampliamos esto, podemos interconectar varios switches. Esta configuración es fácil de usar, permite agregar o quitar dispositivos sin complicaciones y facilita la solución de problemas.  Topología en Bus: En una topología de bus, todos los dispositivos están conectados uno tras otro en una línea y terminan en ambos extremos. No se necesitan dispositivos intermedios como switches.  Topología en Anillo: Aquí, los dispositivos se conectan en un círculo, creando un anillo. A diferencia de la topología de bus, el anillo no necesita terminarse en ambos extremos.Comunicación Dúplex completo y semidúplex:Es fundamental comprender la comunicación dúplex al hablar de topologías de LAN, ya que se refiere a cómo los datos se transmiten entre dos dispositivos. Hay dos modos comunes de dúplex:  Comunicación Semidúplex: En este modo, dos dispositivos pueden enviar y recibir datos, pero no al mismo tiempo. Se utiliza en WLAN y en algunas topologías de bus heredadas con switches Ethernet. Solo un dispositivo puede enviar o recibir datos a la vez en un medio compartido.  Comunicación de Dúplex Completo: En este modo, ambos dispositivos pueden enviar y recibir datos simultáneamente en el mismo medio compartido. Los switches Ethernet suelen funcionar en este modo de forma predeterminada, pero pueden cambiar a semidúplex si se conectan a dispositivos externos.La comunicación en modo semidúplex restringe la transmisión de datos a una dirección a la vez, mientras que el modo de dúplex completo permite el envío y la recepción de datos al mismo tiempo.Es crucial que dos interfaces interconectadas, como la tarjeta de red de una computadora y una interfaz en un switch Ethernet, operen en el mismo modo dúplex. Si no coinciden, puede haber problemas de compatibilidad que generen ineficiencia y retrasos en la comunicación.Métodos de control de acceso:En una red de acceso múltiple, como las LAN Ethernet y WLAN, varios dispositivos intentan comunicarse al mismo tiempo. Hay dos enfoques para regular cómo estos dispositivos comparten el medio de comunicación:  Acceso Basado en la Contienda:En este enfoque, todos los dispositivos compiten por el acceso al medio y solo uno puede transmitir a la vez. Cuando varios dispositivos intentan transmitir simultáneamente, se utiliza un sistema de resolución de conflictos. Esto se ve en redes Ethernet antiguas de bus, donde se detectan colisiones y se gestionan.  Acceso Controlado:En este caso, cada dispositivo tiene un turno asignado para usar el medio. Aunque es más predecible, no es tan eficiente, ya que los dispositivos deben esperar su turno para transmitir. Ejemplos incluyen el método de “token” utilizado en redes de anillo, donde solo el dispositivo con el “token” puede transmitir.En las redes Ethernet modernas, no se necesitan estos métodos de control de acceso, ya que permiten la transmisión y la recepción simultáneas.Acceso por contención: CSMA/CD:Estos son ejemplos de redes que utilizan este método de acceso:  LAN inalámbrica, que usa CSMA/CA (Acceso Múltiple con Prevención de Colisiones).  LAN Ethernet de topología de bus heredada, que utiliza CSMA/CD (Acceso Múltiple con Detección de Colisiones).  LAN Ethernet heredada con un hub, que también usa CSMA/CD.En estas redes, la comunicación se realiza en modo semidúplex, lo que significa que solo un dispositivo puede transmitir o recibir datos a la vez. Para gestionar esto, se emplea un proceso que coordina cuándo un dispositivo puede transmitir y cómo se resuelven las situaciones en las que varios dispositivos intentan transmitir al mismo tiempo.Cuando dos dispositivos intentan transmitir simultáneamente, se produce lo que se conoce como una colisión. En las redes LAN Ethernet heredadas, ambos dispositivos detectan esta colisión en la red, lo que se refiere a la función de detección de colisiones (CD) en CSMA/CD. La tarjeta de red (NIC) compara los datos enviados con los recibidos o identifica irregularidades en la señal en el medio. Cuando ocurre una colisión, los datos enviados por ambos dispositivos se dañan y necesitan ser retransmitidos. Este proceso asegura que la comunicación en redes basadas en competencia sea ordenada y sin conflictos.Acceso por contención: CSMA/CA:En las WLAN IEEE 802.11, se utiliza una variante del protocolo CSMA llamada CSMA/CA (Acceso Múltiple con Detección de Portadora). Esta técnica es similar a CSMA/CD en el sentido de que verifica si el medio de comunicación está libre antes de transmitir. Sin embargo, CSMA/CA emplea métodos adicionales para prevenir colisiones en entornos inalámbricos.A diferencia de CSMA/CD, CSMA/CA no detecta las colisiones, pero trata de evitarlas. Esto se logra esperando un breve período antes de transmitir. Además, cada dispositivo inalámbrico que transmite incluye información sobre cuánto tiempo necesitará el medio para la transmisión. Todos los otros dispositivos inalámbricos reciben esta información y saben cuánto tiempo el medio no estará disponible para su uso.Después de que un dispositivo inalámbrico envía una trama 802.11, el receptor envía un acuse de recibo para confirmar que la trama se recibió correctamente.Tanto en redes LAN Ethernet con concentradores como en redes WLAN, los sistemas basados en contienda no son eficientes cuando se utilizan intensivamente. Es importante destacar que las redes LAN Ethernet con switches no utilizan sistemas basados en contienda, ya que los switches y las NIC de los dispositivos operan en modo dúplex completo, lo que permite la transmisión y recepción simultáneas.Trama de enlace de datosLa trama:Este tema se enfoca en explicar el proceso que sigue una trama de datos a medida que viaja a través de una red. La información contenida en una trama está determinada por el tipo de protocolo que se utiliza.La capa de enlace de datos se encarga de preparar** los datos encapsulados (que normalmente son paquetes IPv4 o IPv6) para que puedan ser transmitidos a través de la red local. Esto se logra al añadir un encabezado y un tráiler a los datos, lo que crea una unidad llamada “trama”.El protocolo de capa de enlace de datos es responsable de gestionar las comunicaciones entre las tarjetas de interfaz de red (NIC) dentro de la misma red. Aunque existen varios protocolos de capa de enlace de datos que describen las tramas, todas comparten tres partes básicas: un encabezado, los datos reales y un tráiler. Lo que hace especial a la capa de enlace de datos es que, a diferencia de otros protocolos de encapsulación, agrega información al final de la trama, conocida como tráiler.Cada protocolo de capa de enlace de datos tiene su propia manera de encapsular los datos en la trama. No existe un formato de trama único que funcione para todas las situaciones. La cantidad de información de control que se agrega a la trama depende del entorno, las necesidades de control de acceso al medio y la topología lógica de la red. Por ejemplo, una trama de una red inalámbrica (WLAN) debe incluir información adicional para evitar colisiones, lo que la diferencia de una trama en una red Ethernet.La estructura de las tramas de capa de enlace de datos varía según el protocolo utilizado y el entorno de la red, ajustándose a las necesidades específicas de cada caso.Campos de la trama:La capa de enlace de datos divide la transmisión en bloques comprensibles, con información de control ubicada en el encabezado y el tráiler en campos separados. Esto crea una estructura reconocible por los nodos y permite que las señales físicas se descifren en paquetes en el destino.Las tramas de enlace de datos incluyen campos genéricos, como indicadores de inicio y fin de trama para marcar los límites de la trama, direcciones que indican los nodos de origen y destino en los medios, un campo de tipo que identifica el protocolo de capa 3 en el campo de datos, un campo de control que puede identificar servicios especiales de control de flujo, como la calidad de servicio (QoS), y, por supuesto, los datos reales que contienen el contenido de la trama. Además, se agrega una parte de detección de errores al final de la trama, que se utiliza para verificar si la trama llegó sin errores debido a posibles interferencias, distorsiones o pérdida de señales en los medios.La capa de enlace de datos asigna direcciones físicas a los dispositivos en la red local. Estas direcciones se encuentran en el encabezado de la trama y especifican tanto el nodo de origen como el nodo de destino en la red local. A diferencia de las direcciones lógicas de la Capa 3, que son jerárquicas y se utilizan para identificar la red a la que pertenece un dispositivo, las direcciones físicas son únicas para cada dispositivo individual. Estas direcciones solo se utilizan para la comunicación dentro de la misma red local y no tienen relevancia fuera de ella.La capa de enlace de datos segmenta y controla las tramas de datos a medida que se mueven a través de una red local y se encarga de asignar direcciones físicas para la comunicación dentro de la misma red.Direcciones de Capa 2:La capa de enlace de datos se encarga de proporcionar las direcciones que se utilizan para enviar tramas a través de una red local compartida. Estas direcciones, llamadas direcciones físicas, se encuentran en el encabezado de la trama y especifican a qué dispositivo de la red local se envía la trama. Estas direcciones son únicas para cada dispositivo y no indican en qué parte de la red se encuentra el dispositivo. La capa 2 se encarga de que los dispositivos se comuniquen dentro de la misma red.Las direcciones de Capa 2 se usan solo para enviar datos dentro de la misma red y no tienen relevancia fuera de ella. A diferencia de las direcciones lógicas de la Capa 3, que son jerárquicas y se usan para guiar datos a través de diferentes redes, las direcciones de Capa 2 son específicas para cada dispositivo y no cambian, aunque el dispositivo se mueva a otra red o subred.Cuando los datos deben viajar a través de diferentes segmentos de red, se necesita un dispositivo intermedio, como un router. El router utiliza la dirección física de Capa 2 para recibir y desempaquetar la trama, y luego examina la dirección jerárquica de Capa 3. Usando la dirección IP, el router determina dónde se encuentra la red del dispositivo de destino y cuál es la mejor ruta para llegar a él. Luego, el router crea una nueva trama y la envía al siguiente segmento de red en el camino hacia su destino final.Tramas LAN y WAN:Los protocolos de comunicación utilizados en las redes varían según si se trata de redes locales cableadas (LAN) o redes inalámbricas (WLAN). En LAN cableadas, como las que utilizan cables Ethernet, se emplean protocolos Ethernet. Por otro lado, las comunicaciones inalámbricas se rigen por los protocolos WLAN, específicamente el estándar IEEE 802.11.Tradicionalmente, las redes de área amplia (WAN) han utilizado una serie de protocolos, como Protocolo punto a punto (PPP), Control de enlace de datos de alto nivel (HDLC), Frame Relay, Modo de transferencia asíncrona (ATM) y X.25, para adaptarse a diversas topologías de red, como conexiones punto a punto, configuraciones en forma de estrella (hub-and-spoke) y redes de malla completa.En la actualidad, muchas de estas tecnologías de capa 2 utilizadas en WAN están siendo reemplazadas por la tecnología Ethernet, lo que simplifica y unifica los protocolos de capa 2 en las redes de área amplia.El protocolo de capa 2 que se selecciona para una topología de red específica depende de la tecnología utilizada para implementar esa topología. La elección se basa en factores como el tamaño de la red (número de hosts), la extensión geográfica de la red y los servicios que se desean ofrecer a través de ella.Una LAN, que abarca una zona geográfica más pequeña, utiliza tecnologías de alto ancho de banda que son capaces de soportar un gran número de dispositivos. En cambio, en redes WAN que abarcan áreas geográficas más amplias, como varias ciudades, los enlaces de larga distancia y las limitaciones de ancho de banda influyen en la elección de los protocolos.Cada vez más se tiende a adoptar Ethernet en las WAN para simplificar la infraestructura y mejorar la eficiencia de las redes."
  },
  
  {
    "title": "Servicio FTP con usuarios virtuales de AD en Windows Server",
    "url": "/rx/posts/servicio-ftp-Windows/",
    "categories": "Sistemas Microinformáticos y Redes, Servicios en red",
    "tags": "redes locales, teoría, smr",
    "date": "2023-11-13 11:00:00 +0000",
    





    
    "snippet": "Servicio FTP con usuarios virtuales de AD en Windows Server 2012R2En este tutorial, te guiaremos a través del proceso de instalación de un servidor FTP en un entorno Windows Server, aprovechando la...",
    "content": "Servicio FTP con usuarios virtuales de AD en Windows Server 2012R2En este tutorial, te guiaremos a través del proceso de instalación de un servidor FTP en un entorno Windows Server, aprovechando la integración con Active Directory para gestionar usuarios y aplicando medidas de seguridad esenciales.Paso 1: Preparación del EntornoAntes de comenzar, asegúrate de que tu servidor Windows está correctamente configurado y tiene instalado el servicio Active Directory. Esto proporcionará la base para gestionar usuarios de manera centralizada.Paso 2: Instalación del Servicio FTPAbre el “Administrador del Servidor” en tu Windows Server.Selecciona “Administrar” y luego “Agregar roles y características”.Sigue el asistente de instalación, seleccionando el rol “Servidor FTP” y cualquier característica adicional que necesites.Completa la instalación y asegúrate de habilitar la opción “Habilitar el soporte para FTP básico” y “Habilitar el soporte para FTP de escritura”.Una vez instalado todo vamos a configurar el AD con las siguientes características:  Dominio raíz: Axuquer.local  Establecemos la contraseña  NetBIOS: AXUQUERPaso 3: Creación de usuarios FTP virtualesVamos a crear 2 usuarios y 1 grupo:  Primer usuario: userFtp1  Segundo usuario: userFtp2  Grupo: usuariosFtp Paso 4: Configuración del Servidor FTPAbre el “Administrador de IIS” (Internet Information Services).Navega hasta el nodo del servidor y selecciona “Sitios FTP”.Haz clic derecho en “Sitio FTP predeterminado” y selecciona “Configurar seguridad de autenticación”.Habilita la autenticación básica.Paso 5: Configuración de los permisos de los directoriosEn el “Administrador de Servidores”, selecciona “Herramientas” y luego “Usuarios y Equipos de Active Directory”.Crea los usuarios que necesitarás para acceder al servidor FTP.Asegúrate de que estos usuarios tengan permisos adecuados en las carpetas del servidor FTP.Paso 5: Establecer Seguridad AdicionalPaso 6: Activa el FTP como pasivo y abre los puertos pertinentes   Paso 7: Activación de SSL/TLS    Para mejorar la seguridad, considera las siguientes medidas:Configuración de Firewall: Ajusta las reglas de firewall para permitir el tráfico FTP.Uso de SSL/TLS: Habilita el cifrado mediante SSL/TLS para proteger la transferencia de datos.Monitoreo de Registro: Configura el registro del servidor FTP para registrar eventos de seguridad.Actualizaciones y Parches: Mantén tu servidor actualizado con las últimas actualizaciones de seguridad de Microsoft.Con estos pasos, habrás instalado un servidor FTP en Windows Server, integrado con Active Directory y reforzado con medidas de seguridad. Recuerda realizar pruebas exhaustivas y ajustar la configuración según las necesidades específicas de tu entorno. ¡Ahora tu servidor FTP está listo para proporcionar un acceso seguro y gestionado a tus archivos!"
  },
  
  {
    "title": "Escritorio remoto Windows 2012R2",
    "url": "/rx/posts/escritorio-remoto-Windows2012R2/",
    "categories": "Sistemas Microinformáticos y Redes, Servicios en red",
    "tags": "redes locales, teoría, smr",
    "date": "2023-11-10 11:00:00 +0000",
    





    
    "snippet": "Activar escritorio remoto en Windows Server 2012R2En el Administrador del servidor nos dirigimos a Servidor Local, ahí nos dirigimos a Escritorio Remoto:Le damos a la opción de “permitir las conexi...",
    "content": "Activar escritorio remoto en Windows Server 2012R2En el Administrador del servidor nos dirigimos a Servidor Local, ahí nos dirigimos a Escritorio Remoto:Le damos a la opción de “permitir las conexiones remotas a este equipo”:Aceptamos el mensaje:Si se ha activado el check de “permitir solo las conexiones…” lo desactivamos:Aplicamos y aceptamos:Ahora desde el equipo remoto nos intenamos conectar por equipo remoto:"
  },
  
  {
    "title": "GitHub",
    "url": "/rx/posts/GitHub/",
    "categories": "DAM, ED",
    "tags": "Github",
    "date": "2023-11-07 11:00:00 +0000",
    





    
    "snippet": "Iniciamos la configuraciónVamos a empezar configurando varias variables necesarias para trabajar un poco más cómodo:git config --global user.email          \"corre@example.com\"git config --global us...",
    "content": "Iniciamos la configuraciónVamos a empezar configurando varias variables necesarias para trabajar un poco más cómodo:git config --global user.email          \"corre@example.com\"git config --global user.name           \"Tu nombre y apellidos\"git config --global init.defaultBranch  mainCreamos un directoriomkdir pruebacd pruebaComprobamos que tenemos el directorio vacíols -laInicializamos el repositoriogit initComprobamos que se ha creado el directorio .gitls -laCreamos un archivo README.md y ponemos nuestro nombreEste archivo será el que se leera por defecto en GitHubecho \"Mi nombre\" &gt; README.mdRegistramos los cambios en el repositorio  Añadimos el área de preparación    git add README.md        Añadimos al repositorio en local    git commit -m \"Primer cambio registrado\"      Añadimos dos líneas másCada vez que se añada una línea tenemos que hacer un commit cambiando la información2ª línea la fecha de hoy2ª AXúquerPor último vemos cambios realizadosPara ello ejecutamosgit  loggit  log  --onelineDeberían aparecer 3 commits tal que así:Revisar commits realizadosEn la actividad siguiente, haremos uso del comando git checkout para movernos por los distintos commits .Antes de nada comprueba que tienes al menos 3 commits realizados. Para ello ejecuta:git  log  --oneline --allLa opción –oneline, nos muestra la información de cada commit en una línea.La opción –all, nos muestra todos los commits.La primera columna es un hash, un identificador.Los números no están ordenados. En mi caso, el primer commit tiene un hash 55b9b0b. El último commit mio es el ba90153. Tú tendrás otro hash distinto. No te preocupes, es así.La segunda columna es el mensaje que pusimos cuando hicimos el commit.Fíjate también que en el último commit, en mi caso ba90153, existe un identificador HEAD. Ésta es una referencia que apunta al commit en el que estamos situados en el momento actual. Además aparece otro identificador main, que indica en la rama en la que estamos. Por defecto, siempre es main.El identificador main siempre apunta al último commit de la rama. Sin embargo el identificador HEAD podemos moverlo y desplazarmos entre distintos commit y ver como estaban los archivos en cada momento.Para mover el identificador HEAD utilizamos el comando git checkout  numero_hash.Realiza los siguientes pasos:1. Vamos a ver el contenido del archivo README.md en el commit actual.Para ello hacemos:cat  README.mdDeben aparecer 3 líneas de texto: tu nombre, la fecha y el nombre del centro AXúquer.2. Vamos a movernos al primer commit.Para ello hacemos:git  checkout  55b9b0bTú deberás poner el hash que tengas.Te aparecerá un mensaje que contiene “Te encuentras en estado ‘detached HEAD’”. Esto indica que la referencia HEAD no está al final de la rama. No te preocupes por ello.Ahora veamos el contenido del archivo README.md.cat README.mdDebe aparecer sólo una línea con tu nombre. Es el contenido que tenía dicho archivo en ese commit.3. Veamos en que posición de la rama nos encontramos. Para ello ejecutamos:git  log  --oneline --allFíjate donde apunta la referencia HEAD en este momento.Algo que quizás te haya pasado desapercibido pero que es extremadamente IMPORTANTE es que cada vez que nos movemos de un commit a otro, el contenido del directorio de trabajo cambia. Esto lo hace git de forma automática.NO REALIZAREMOS ningún cambio a los archivos, sólo vamos a echar un vistazo.4. Vamos a movernos al segundo commit.Para ello hacemos:git  checkout  9ca2b54Tú deberás poner el hash que tengas. No es necesario poner todos los dígitos, con cuatro será suficiente.Ejecutacat README.mdy haz una captura de pantalla.Deberían aparecer 2 líneas: tu nombre y la fecha.5. Vuelve a hacergit  log  --oneline --allY comprueba que HEAD está en el segundo commit.6. Por último,para volver al último commit de la rama master, simplemente hacemos:git checkout mainPodemos ver que todo está en su sitio haciendogit  log  --oneline --all  NOTA: No borrar el repositorio local. Lo volveremos a utilizar en la siguiente actividad.Etiquetar commits y ver diferenciasEn esta actividad vamos a ver 3 comandos:  git tag  git show  git diffEl primer comando (git tag) nos permite poner etiquetas a los commits.  No se etiquetan todos los commits, solo las releases que deseemos.Los 2 siguientes (git show y git diff) son para ver los cambios realizados entre distintos commits. Son muy parecidos aunque con pequeñas diferencias.Básicamente git show nos permite ver los cambios de un commit respecto al anterior, mientras que git diff nos permite ver cambios en un rango de commits.De todas formas tanto git show como git diff tienen tantas opciones que aquí sólo nos centraremos en las esenciales.Empecemos:1. Etiquetamos el commit primero y el tercero.El primer commit será la versión 1 de nuestro proyecto. La etiqueta será v1.El tercer commit será la versión 2 de nuestro proyecto. La etiqueta será v2.El segundo commit no será etiquetado.Para etiquetar utilizamos el comandogit  tag  -a  nombre_etiqueta  -m  \"Mensaje\"   commit_a_etiquetarPor ejemplo, en mi caso:git tag  -a v1  -m \"Primera versión estable\"  55b9git tag  -a v2  -m \"Versión 2\"  fdebLa opción -a significa annotate.La opción -m nos permite poner un mensaje.Finalmente debemos poner el commit al que deseamos aplicar la etiqueta.Si por cualquier motivo nos equivocamos al crear la etiqueta podemos eliminarla congit tag -d nombre_etiqueta2. Usando etiquetas para movernosLas etiquetas nos permiten referenciar commits de una forma más cómoda que usando el identificador de hash.Por ejemplo es más cómodo usar:git checkout v1Que usar:git checkout 55b9Para volver al último commit haz:git checkout main3. Examinado cambios de un commit respecto al anterior.Para ver los cambios introducidos respecto al commit anterior hacemos:git showEn este caso, al coincidir todos los apuntadores  (HEAD, master, v2 y ba90) al mismo sitio, el comando anterior es equivalente a:git show HEADgit show mastergit show ba90git show v2Como podemos observar, se añadió una línea, la que contiene AXúquer.Las líneas añadidas aparecen en verde y con un signo +.Las líneas eliminadas aparecen en rojo y con un signo -.En este caso solo hemos realizado operaciones de adición.Para ver el cambio realizado en el commit segundo respecto al primero, hacemosgit show 9ca2Debe aparecer añadida la línea con la fecha.Y para ver el cambio realizado en el commit primero respecto al repositorio vacío, hacemos:git show v1Debe aparecer añadida la línea con el nombre.4. Examinado cambios de un commit respecto a varios anteriores.Si deseamos ver todos los cambios realizados a lo largo de varios commits, haremos uso de git diff.La forma de uso esgit  diff  commit1..commit2Por ejemplo, para ver los cambios entre la versión 1 y la versión 2, hacemosgit  diff  v1..v2Podemos ver que se han añadido 2 líneas desde el commit v1.Es muy aconsejable poner primero el commit más antiguo y después el commit más moderno. Si lo hacemos al contrario, el resultado en lugar de aparecer en color verde aparecerá en color rojo, y su interpretación será más confusa.5. Diferencia entre git show y git diffTambién podemos hacergit show v1..v2  NOTA: No borrar el repositorio local. Lo volveremos a utilizar en la siguiente actividad.Crear repositorio remoto y subir commits localesEn esta actividad crearemos un repositorio vacío en GitHub y subiremos el contenido de nuestro repositorio local.1. Primero, creamos un repositorio totalmente vacío en GitHub.Accedemos a nuestra cuenta de GitHub.En la esquina superior derecha, pulsamos en el signo + y luego en New repositoryEscogemos el nombre del repositorio. No tiene por que coincidir con el nombre del repositorio local, aunque es lo aconsejable para no hacernos un lío.Es muy importante que NO INICIALICES EL REPOSITORIO. Si el repositorio no estuviese vacío podría darnos un conflicto.En una actividad posterior crearemos conflictos y veremos como resolverlos. Pero en en esta actividad, sólo vamos a trabajar lo básico.Pulsaremos en Create Repository y nos aparecerá una página en la cual nos pondrá varias opciones de inicializar el reposiotrio:Escogemos la imagen que pone únicamente git remote y git pushAhí podemos ver la URL del repositorio remoto. Hay 2 formas de acceso:  mediante HTTPS  mediante SSHUsaremos, por ahora, HTTPS. En una actividad posterior veremos como usar SSH y utilizar cifrado público-privado para no tener que introducir cada vez nuestras credenciales.Más abajo se indican los comandos a ejecutar en nuestro repositorio local. Lo vemos en el siguiente punto.Para tu comodidad, no cierres la página. Más adelante volveremos a ella.2. Asociar repositorio local con repositorio remotoEn nuestro repositorio local, para asociarlo con el repositorio remoto, hacemos:git remote add origin  ** Tu enlace **Nuestro repositorio remoto será identificado como origin. Podemos ponerle otro nombre, pero no debemos. Es una convención ampliamente aceptada poner este nombre al repositorio remoto de GitHub.Para ver si se ha añadido bien hacemosgit remote -vDeben aparecer 2 entradas, una para bajada (fetch) y otra para subida (push)  NOTA: Si por cualquier motivo nos equivocamos y escribimos mal el nombre o la URL, podemos borrar la asociación con  git remote remove origin    y luego volver a crear la asociación.3. Subir todos los commits locales al repositorio remotoPara subir el contenido de nuestro repositorio local al repositorio remoto hacemos:git push -u origin mainEl identificador origin es el nombre que dimos a nuestro vínculo. El identificador main se refiere a la rama principal.Es una convención ampliamente seguida, así que respétala.Se nos pedirá nuestro usuario y contraseña. Lo introducimos, y si no hay problema, se realizará la subida.4. Comprobando la subida.Volvemos a la página de GitHub y la actualizamos.Nos aparecerá dentro de nuestro repositorio nuestro archivo README.mdGitHub ofrece muchas funcionalidades.Así que nos centraremos ahora mismo en las releases. Estás se corresponden con el etiquetado que realizamos en la actividad anterior con git tag.Teníamos 2 releases, etiquetadas como v1 y v2, pero sin embargo aquí no aparece ninguna.El motivo, es que debemos subir las etiquetas por separado con el comandogit push --tagsAsí que ejecutaremos dicho comando desde nuestro repositorio local. Refrescaremos la página. Et voilà !5. Examinando commits y releases en GitHub.Pulsa en 3 commits y haz una captura de pantalla. Por tu cuenta puedes examinar cada uno de los commits.Pulsa en 2 releases y haz una captura de pantalla. Observa que se han creado archivos comprimidos con el código fuente para descargar.  NOTA: No borrar los repositorio local ni repositorio remoto. Los volveremos a utilizar en la siguiente actividad.Deshacer cambios en repositorio localEn esta actividad, veremos que podemos hacer cuando cometemos errores.Si realizamos algún cambio y hemos “metido la pata”, podemos deshacer el “entuerto”.Vamos a verlo de forma práctica haciendo uso del comando  git reset –hard1. Deshacer cambios en el directorio de trabajoEstando en el último commit de la rama master, modificamos el archivo README.mdVamos a eliminar las 2 últimas líneas.nano README.mdEditamos. Debe quedar una sola línea con nuestro nombre.Para ver los cambios que hemos introducido ejecutamos:git diff HEADEs decir vamos a ver las diferencias que existen en nuestro directorio de trabajo respecto al commit HEAD, es decir el último commit confirmado.  NOTA: Si quisiesemos ver las diferencias de nuestro directorio de trabajo respecto al commit de la Versión 1, haríamos git diff v1.Observa que estamos viendo las diferencias hacia al pasado. Esta forma de uso de git diff es diferente a la que vimos en la última actividad, en la cual veíamos las diferencias hacia el futuro.Se ve claramente que hemos eliminado las 2 últimas líneas.Para volver el estado de este archivo y de CUALQUIER OTRO de nuestro directorio de trabajo que hayamos modificado, ejecutamos:git reset --hard2. ¿Y para deshacer el área de preparación?Imaginemos que hemos ido un poco más lejos, y que además de modificar el directorio de trabajo, hemos añadido los cambios al Staging Area. Es decir hemos hechonano README.mdBorrado las 2 últimas líneas.Y luego hemos añadido al área de preparación mediantegit  add  README.mdNo te preocupes en este caso puede también aplicarse el comando anterior:git  reset --hardDicho comando coge el contenido que hay en nuestro commit confirmado y recupera ambos: el directorio de trabajo y el área de preparación.3. ¿Y qué pasa si ya realicé un commit?Imaginemos que hemos ido todavía un poco más lejos, y que además de modificar el directorio de trabajo y añadir los cambios al Staging Area, hemos realizado un commit. Es decir hemos hechonano README.mdBorrado las 2 últimas líneas.Y luego hemos añadido al área de preparación mediantegit  add  README.mdY además hemos hechogit commit -m \"Borras líneas de README.md\"Pues en este caso también podemos usar el comando git reset –hard de la siguiente forma:git  reset --hard  HEAD~1HEAD~1 significa el commit anterior al actual. Es decir un commit hacia atrás.HEAD~2 significa 2 commits hacia atrás.HEAD~n significa n commits hacia atrás, sustituyendo n por un número.  NOTA: Usar git reset –hard de esta última forma es peligroso, porque perdemos el último o últimos commits. Así que hay que asegurarse muy bien de que es eso lo que queremos.  NOTA: No borrar los repositorio local ni el remoto. Los volveremos a utilizar en la siguiente actividad.Archivo .gitignoreEn esta actividad empezaremos a trabajar con algo más real. Por ejemplo, una sencilla aplicación de Java. Esta actividad también es práctica.Vamos a seguir utilizando el repositorio que estabamos usando en las actividades anteriores.git log  --oneline --all1. Creamos una aplicación HolaMundo en Java.Creamos la aplicación y después continuamos…Si ahora volvemos a hacer un listado, veremos que nos ha creado una nueva carpeta llamada build con el bytecode resultante de la compilación.2. Añadiendo archivos al repositorio localComo vimos en la actividad anterior, si ahora ejecutamos git diff HEAD, esperariamos ver los cambios de nuestro directorio de trabajo respecto al último commit.Sin embargo esto no es lo que ocurre. NO SE MUESTRA NADA. ¿Por qué es esto?Esto es porque git diff HEAD funciona siempre teniendo en cuenta los archivos que ya habían sido añadidos previamente al repositorio. Es decir sólo tiene en cuenta los archivos con seguimiento.Los archivos nuevos son archivos sin seguimiento. En este caso debemos usar git status para ver esta circunstancia.Ahora debemos añadir todos estos archivos al área de preparación (Staging Area) y luego realizar un commit.PERO ESPERA UN MOMENTO. Voy a explicarte algo.Cuando se trabaja con proyectos de código fuente existen algunos archivos que no interesa añadir al repositorio, puesto que no aportan nada. En el repositorio, como norma general, no debe haber archivos ejecutables, ni bytecode, ni código objeto, y muchas veces tampoco .zip, .rar, .jar, .war, etc. Estos archivos inflan el repositorio y, cuando llevamos muchos commits, hacen crecer demasiado el repositorio y además pueden ralentizar el trabajo de descarga y subida.Para cada lenguaje y para cada entorno de desarrollo se recomienda no incluir ciertos tipos de archivos. Son los archivos a ignorar. Cada programador puede añadir o eliminar de la lista los que considere adecuados. Los archivos y carpetas a ignorar deben indicarse en el archivo .gitignore. En cada línea se pone un archivo, una carpeta o una expresión regular indicando varios tipos de archivos o carpetas.En el repositorio https://github.com/github/gitignore tienes muchos ejemplos para distintos lenguajes, herramientas de construcción y entornos.Para el lenguaje Java: https://github.com/github/gitignore/blob/master/Java.gitignorePara la herramienta Gradle: https://github.com/github/gitignore/blob/master/Gradle.gitignorePara el entorno Netbeans: https://github.com/github/gitignore/blob/master/Global/NetBeans.gitignoreSimplificando, nosotros vamos a ignorar las carpetas que creás oportunas. Entonces, el archivo .gitignore debe tener el siguiente contenido:el directorio que queramos/el archivo que queramosel .directorio que queramos/...La barra final es opcional, pero a mí me gusta ponerla cuando me refiero a carpetas, para así saber cuando se trata de un archivo y cuando de una carpeta.Crea el archivo .gitignore con dicho contenido y haz una captura de pantalla.Ahora si hacemosgit statusveremos que no nos aparecen las carpetas que habéis elegido. Y nos aparece un archivo nuevo .gitignore.Ahora ya podemos ejecutargit add .git commit -m \"Código fuente inicial\"Fíjate que he escrito git add .. El punto indica el directorio actual, y es una forma de indicar que incluya en el área de preparación todos los archivos del directorio en el que me encuentro (salvo los archivos y carpetas indicados en .gitignore) Se utiliza bastante esta forma de git add cuando no queremos añadir los archivos uno a uno.3. Subir cambios de repositorio local a repositorio remotoYa sólo nos queda subir los cambios realizados al repositorio remoto con git pushPara hacer algo más interesante este apartado, vamos a crear una etiqueta en el commit actual y subirla a github para que éste cree una nueva release.git tag v3git push --tagsBueno, las etiquetas v1 y v2 no se suben porque ya la habíamos subido previamente.En este caso, podríamos también haber ejecutadogit push origin v3Y la historia de nuestro repositorio local nos quedaría…Accede a tu repositorio en GitHub y haz una captura de pantalla de las releases.Haz otra captura de los archivos y carpetas de código subidas a GitHub. No deberían aparecer ni la carpeta build ni la carpeta .gradle. Y sí debería aparecer el archivo .gitignore.  NOTA: La carpeta .git nunca se muestra en GitHub.  NOTA: No borrar los repositorio local ni repositorio remoto. Los volveremos a utilizar en la siguiente actividad."
  },
  
  {
    "title": "Montaje del servicio FTP",
    "url": "/rx/posts/servicio-ftp/",
    "categories": "Sistemas Microinformáticos y Redes, Servicios en red",
    "tags": "redes locales, teoría, smr",
    "date": "2023-11-06 11:00:00 +0000",
    





    
    "snippet": "Introducciónvsftpd, que significa “Very Secure File Transfer Protocol Daemon” (Demonio de Protocolo de Transferencia de Archivos Muy Seguro), es un software de servidor FTP (File Transfer Protocol)...",
    "content": "Introducciónvsftpd, que significa “Very Secure File Transfer Protocol Daemon” (Demonio de Protocolo de Transferencia de Archivos Muy Seguro), es un software de servidor FTP (File Transfer Protocol) de código abierto diseñado para sistemas operativos tipo Unix. Es conocido por su enfoque en la seguridad y el rendimiento, lo que lo convierte en una opción popular para configurar servidores FTP en sistemas Linux y otros sistemas basados en Unix.      Seguridad: vsftpd está diseñado con un fuerte énfasis en la seguridad. Ofrece una variedad de características de seguridad, como el soporte para conexiones cifradas (FTP sobre TLS/SSL), el soporte para usuarios virtuales y cárceles chroot para restringir el acceso a directorios específicos, y la capacidad de limitar el número de conexiones concurrentes y el acceso desde direcciones IP específicas.        Rendimiento: Es conocido por su velocidad y eficiencia. vsftpd está diseñado para ser ligero y optimizado para un alto rendimiento, lo que lo hace adecuado para manejar un gran número de conexiones concurrentes.        Configuración: vsftpd proporciona un sistema de configuración flexible que permite a los administradores personalizar diversos aspectos del comportamiento del servidor FTP. Las opciones de configuración están bien documentadas y se pueden ajustar para satisfacer requisitos específicos.        FTP Activo y Pasivo: vsftpd admite tanto los modos FTP activo como pasivo, lo que le permite funcionar con una amplia gama de clientes FTP y configuraciones de red.        Aislamiento de Usuarios: Admite el aislamiento de usuarios, lo que puede confinar a los usuarios a sus propios directorios de inicio, mejorando la seguridad al evitar que accedan a otras partes del sistema de archivos del servidor.        Registro de Actividad: vsftpd proporciona capacidades detalladas de registro, lo que facilita el monitoreo y la solución de problemas de la actividad del servidor FTP.        Soporte IPv6: Admite IPv6, lo que le permite funcionar en infraestructuras de red modernas que utilizan la última versión del Protocolo de Internet.        Código Abierto: vsftpd es software de código abierto, y su código fuente está disponible de forma gratuita, lo que significa que se puede personalizar y adaptar a necesidades específicas.  Para instalar y configurar vsftpd en un sistema basado en Unix, generalmente tendrás que editar su archivo de configuración, que a menudo se encuentra en “/etc/vsftpd.conf”, y luego iniciar o reiniciar el servicio de vsftpd.Ten en cuenta que aunque vsftpd es un servidor FTP seguro y confiable, el uso de FTP en general ha perdido popularidad debido a preocupaciones de seguridad. Siempre que sea posible, se recomienda utilizar protocolos de transferencia de archivos más seguros, como SFTP (SSH File Transfer Protocol) o SCP (Copia Segura) para transferencias de archivos a través de la red. Estos protocolos ofrecen cifrado y autenticación por defecto, lo que los convierte en alternativas más seguras al FTP tradicional.Instalación del servicio FTP en Ubuntu Server 22.04 LTSCosas necesarias previas a la instalación  Configuración de MV servidor en red nat  MV cliente Xubuntu en la misma red nat  Configuración red nat 192.168.100.0/24Instalación y configuración inicial de vsFTPCon permisos de root ejecutamos el comando:sudo apt-get install vsftpdComprobamos que el servicio está activo en su puerto 80:netstat -putonaOtra opción para comprobar que el servicio está activo:sudo /etc/init.d/vsftpd statusModificamos y añadimos información a nuestro archivo de configuración:sudo vi /etc/vsftpd.conf# Example config file /etc/vsftpd.conf## The default compiled in settings are fairly paranoid. This sample file# loosens things up a bit, to make the ftp daemon more usable.# Please see vsftpd.conf.5 for all compiled in defaults.## READ THIS: This example file is NOT an exhaustive list of vsftpd options.# Please read the vsftpd.conf.5 manual page to get a full idea of vsftpd's# capabilities.### Run standalone?  vsftpd can run either from an inetd or as a standalone# daemon started from an initscript.listen=YES## This directive enables listening on IPv6 sockets. By default, listening# on the IPv6 \"any\" address (::) will accept connections from both IPv6# and IPv4 clients. It is not necessary to listen on *both* IPv4 and IPv6# sockets. If you want that (perhaps because you want to listen on specific# addresses) then you must run two copies of vsftpd with two configuration# files.listen_ipv6=NO## Allow anonymous FTP? (Disabled by default).anonymous_enable=NO## Uncomment this to allow local users to log in.local_enable=YES## Uncomment this to enable any form of FTP write command.write_enable=YES## Default umask for local users is 077. You may wish to change this to 022,# if your users expect that (022 is used by most other ftpd's)#local_umask=022## Uncomment this to allow the anonymous FTP user to upload files. This only# has an effect if the above global write enable is activated. Also, you will# obviously need to create a directory writable by the FTP user.#anon_upload_enable=YES## Uncomment this if you want the anonymous FTP user to be able to create# new directories.#anon_mkdir_write_enable=YES## Activate directory messages - messages given to remote users when they# go into a certain directory.dirmessage_enable=YES## If enabled, vsftpd will display directory listings with the time# in  your  local  time  zone.  The default is to display GMT. The# times returned by the MDTM FTP command are also affected by this# option.use_localtime=YES## Activate logging of uploads/downloads.xferlog_enable=YES## Make sure PORT transfer connections originate from port 20 (ftp-data).connect_from_port_20=YES## If you want, you can arrange for uploaded anonymous files to be owned by# a different user. Note! Using \"root\" for uploaded files is not# recommended!#chown_uploads=YES#chown_username=whoever## You may override where the log file goes if you like. The default is shown# below.#xferlog_file=/var/log/vsftpd.log## If you want, you can have your log file in standard ftpd xferlog format.# Note that the default log file location is /var/log/xferlog in this case.#xferlog_std_format=YES## You may change the default value for timing out an idle session.#idle_session_timeout=600## You may change the default value for timing out a data connection.#data_connection_timeout=120## It is recommended that you define on your system a unique user which the# ftp server can use as a totally isolated and unprivileged user.#nopriv_user=ftpsecure## Enable this and the server will recognise asynchronous ABOR requests. Not# recommended for security (the code is non-trivial). Not enabling it,# however, may confuse older FTP clients.#async_abor_enable=YES## By default the server will pretend to allow ASCII mode but in fact ignore# the request. Turn on the below options to have the server actually do ASCII# mangling on files when in ASCII mode.# Beware that on some FTP servers, ASCII support allows a denial of service# attack (DoS) via the command \"SIZE /big/file\" in ASCII mode. vsftpd# predicted this attack and has always been safe, reporting the size of the# raw file.# ASCII mangling is a horrible feature of the protocol.#ascii_upload_enable=YES#ascii_download_enable=YES## You may fully customise the login banner string:#ftpd_banner=Welcome to blah FTP service.## You may specify a file of disallowed anonymous e-mail addresses. Apparently# useful for combatting certain DoS attacks.#deny_email_enable=YES# (default follows)#banned_email_file=/etc/vsftpd.banned_emails## You may restrict local users to their home directories.  See the FAQ for# the possible risks in this before using chroot_local_user or# chroot_list_enable below.#chroot_local_user=YES## You may specify an explicit list of local users to chroot() to their home# directory. If chroot_local_user is YES, then this list becomes a list of# users to NOT chroot().# (Warning! chroot'ing can be very dangerous. If using chroot, make sure that# the user does not have write access to the top level directory within the# chroot)#chroot_local_user=YES#chroot_list_enable=YES# (default follows)#chroot_list_file=/etc/vsftpd.chroot_list## You may activate the \"-R\" option to the builtin ls. This is disabled by# default to avoid remote users being able to cause excessive I/O on large# sites. However, some broken FTP clients such as \"ncftp\" and \"mirror\" assume# the presence of the \"-R\" option, so there is a strong case for enabling it.#ls_recurse_enable=YES## Customization## Some of vsftpd's settings don't fit the filesystem layout by# default.## This option should be the name of a directory which is empty.  Also, the# directory should not be writable by the ftp user. This directory is used# as a secure chroot() jail at times vsftpd does not require filesystem# access.secure_chroot_dir=/var/run/vsftpd/empty## This string is the name of the PAM service vsftpd will use.pam_service_name=vsftpd## This option specifies the location of the RSA certificate to use for SSL# encrypted connections.rsa_cert_file=/etc/ssl/certs/ssl-cert-snakeoil.pemrsa_private_key_file=/etc/ssl/private/ssl-cert-snakeoil.keyssl_enable=NO## Uncomment this to indicate that vsftpd use a utf8 filesystem.#utf8_filesystem=YESpasv_enable=YESpasv_min_port=10000pasv_max_port=10005pasv_address=127.0.0.1Reiniciamos el servicio:sudo vi /etc/init.d/vsftpd restartRealizamos una prueba de que funciona con el cliente FTP WinSCP:Realizamos una prueba de que funciona con el cliente FTP Filezilla:Configuración de usuarios que no sean del sistemaNos dirigimos al archivo de configuración de VSFTP:sudo vi /etc/vsftpd.confAñadimos al final las siguientes líneas:guest_enable=YESvirtual_use_local_privs=YESuser_sub_token=$USERlocal_root=/var/ftp/$USERchroot_local_user=YESReiniciamos el demonio y comprobamos:Vamos a crear un archivo el cual será el que utilizaremos para añadir los usuarios:sudo vi /etc/virtusers.txtAñadimos el usuario ftpUser1 con su contraseña (es la misma) y ftpUser2 con su contraseña (es la misma)ftpUser1passUser1ftpUser2passUser2Instalamos db-util para poder trabajar con dichos usuarios:sudo apt-get install db-utilConfiguramos los archivos necesarios:sudo db_load -T -t hash -f /etc/virtusers.txt /etc/virtusers.dbVaciamos el siguientes archivos para que queden de esta forma:sudo vi /etc/pam.d/vsftpdauth &lt;tab&gt;required &lt;tab&gt;pam_userdb.so db=/etc/virtusersaccount &lt;tab&gt;required &lt;tab&gt;pam_userdb.so db=/etc/virtuserssudo mkdir -p /var/ftp/ftpUser1sudo mkdir -p /var/ftp/ftpUser2Reiniciamos servicio FTP:Cambiamos permisos:sudo chown ftp: -R /var/ftp/ftpUser1sudo chown ftp: -R /var/ftp/ftpUser2Añadimos otra línea al archivo de configuración de vsFTPallow_writeable_chroot=YESReiniciamos servicio FTP y comprobamos:Cliente FileZilla:Cliente WinSCP:Situación de los directorios virtuales:Ciframos las conexionesGeneramos el certificado:sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/ssl/private/vsftpd.pem -out /etc/ssl/private/vsftpd.pemLo establecemos en nuestro archivo de configuración de vsFTP:rsa_cert_file=/etc/ssl/private/vsftpd.pemrsa_private_key_file=/etc/ssl/private/vsftpd.pemssl_enable=YESRealizamos las pruebas pertinentes:"
  },
  
  {
    "title": "Capa física",
    "url": "/rx/posts/Capa-f%C3%ADsica/",
    "categories": "Sistemas Microinformáticos y Redes, Redes Locales",
    "tags": "redes locales, teoría, smr",
    "date": "2023-11-05 11:00:00 +0000",
    





    
    "snippet": "La capa FísicaIntroducciónLa capa física es la primera capa del modelo OSI.También se le conoce como CAPA 1, esta es responsable de la transmisión de bits noestructurados a través de un medio de co...",
    "content": "La capa FísicaIntroducciónLa capa física es la primera capa del modelo OSI.También se le conoce como CAPA 1, esta es responsable de la transmisión de bits noestructurados a través de un medio de comunicación físico, ya sea cable de cobre, fibraóptica,ondas de radio, etc.Esta capa se enfoca en aspectos relacionados con la transmisión de datos en su forma másbásica y física.Esta capa forma parte de la capa Acceso a red del modelo TCP/IP.Sin la capa física, no tendría una red.En este tema veremos las características, utilidades y propósitos de:  Propósito de la capa física.  Características de la capa física.  Cableado de cobre.  Cableado UTP.  Cableado de fibra óptica.  Medios inalámbricos.    Propósito de la capa física    El propósito fundamental de la capa física en el modelo OSI es facilitar la transmisiónfísica debits a través de un medio de comunicación. Esta capa se centra en la interfaz entre elequipo yel medio físico, asegurando que los bits se puedan enviar y recibir de manera confiable yeficiente.    La conexión física:    Para que se pueda producir cualquier comunicación de red se debe establecer antes unaconexión a una red local.Una conexión física puede ser:    Una conexión por cable  Una conexión inalámbrica mediante ondas de radio.El tipo de conexión física utilizada depende de la configuración de la red.Ejemplo: En muchas oficinas corporativas, los empleados tienen PC de escritorio o portátilesque se conectan físicamente, mediante cables, a un switch compartido.Este tipo de configuración se denomina red cableada y los datos se transmiten a través de uncable físico.Muchas empresas también ofrecen conexiones inalámbricas “sin cableado” para PCportátiles, tablets y smartphones.En el caso de los dispositivos inalámbricos, los datos se transmiten mediante ondas de radio.Los dispositivos en una red inalámbrica deben estar conectados a un punto de accesoinalámbrico (AP) o router inalámbrico.En términos de rendimiento, no todas las conexiones físicas son iguales a la hora deconectarse a una red.          [!¿Qué son las Tarjetas de interfaz de red?]      Las tarjetas de interfaz de red (NIC) conectan un dispositivo a la red.Las NIC de Ethernet se usan para una conexión por cable, mientras que las NIC de la redde área local inalámbrica (WLAN) se usan para la conexión inalámbrica. Los dispositivospara usuarios finales pueden incluir un tipo de NIC o ambos.      La capa física:      Esta capa proporciona los medios de transporte de los bits que conforman una trama de lacapa de enlace de datos a través de los medios de red.Esta capa acepta una trama completa desde la capa de enlace de datos y la codificacomo una secuencia de señales que se transmiten en los medios locales. Un dispositivo final oun dispositivo intermediario recibe los bits codificados que componen una trama. La capafísica codifica las tramas y crea las señales eléctricas, ópticas o de ondas de radio querepresentan los bits en cada trama.La capa física del nodo de destino recupera estas señales individuales de los medios, lasrestaura a sus representaciones en bits y pasa los bits a la capa de enlace de datos enforma de trama completa.      Características de la capa física.      Los estándares de la capa física:      Vamos a ver los componentes y los medios utilizados para construir una red, así como losestándares necesarios para que todo funcione en conjunto.Los protocolos y las operaciones de las capas OSI superiores se llevan a cabo en softwarediseñado por ingenieros en software e informáticos. El grupo de trabajo de ingeniería deInternet (IETF) define los servicios y protocolos del conjunto TCP/IP.Existen muchas organizaciones internacionales y nacionales que intervienen en elestablecimiento y el mantenimiento de los estándares de la capa física. Por ejemplo, losestándares de hardware, medios, codificación y señalización de la capa física estándefinidos y regidos por estas organizaciones de estándares:              Organización Internacional para la Estandarización (ISO)        Asociación de las Industrias de las Telecomunicaciones (TIA) y Asociación de IndustriasElectrónicas (EIA)        Unión Internacional de Telecomunicaciones (ITU)        Instituto Nacional Estadounidense de Estándares (ANSI)        Instituto de Ingenieros Eléctricos y Electrónicos (IEEE)        Autoridades nacionales reguladoras de las telecomunicaciones, incluida la FederalCommunication Commission (FCC) de los Estados Unidos y el Instituto Europeo de Estándaresde Telecomunicaciones (ETSI).Los estándares de la capa física abarcan tres áreas funcionales                      Componentes físicos            Codificación            Señalización              Componentes físicos:              Los componentes físicos son los dispositivos de hardware electrónico que transmiten lasseñales que representan los bits. Todos los componentes de hardware, como NIC,interfaces y conectores, materiales y diseño de los cables, se especifican en losestándares asociados con la capa física.              Codificación:              La codificación es un método que se utiliza para convertir una transmisión de bits de datosen un “código” predefinido. La codificación es el método o patrón utilizado para representar lainformación digital.              Señalización:              La capa física debe generar las señales inalámbricas, ópticas o eléctricas.Estas representan los “1” y los “0” en los medios.La forma en que se representan los bits se denomina método de señalización.Los estándares de la capa física deben definir qué tipo de señal representa un “1” y quétipo de señal representa un “0”.Esto puede ser tan simple como un cambio en el nivel de una señal eléctrica o de un pulsoóptico.              Ancho de banda:              Esta es la capacidad a la que un medio puede transportar datos.El ancho de banda digital mide la cantidad de datos que pueden fluir desde un lugar haciaotro en un período de tiempo determinado.El ancho de banda generalmente se mide en kilobits por segundo (kbps), megabits porsegundo (Mbps) o gigabits por segundo (Gbps).En ocasiones, el ancho de banda se piensa como la velocidad a la que viajan los bits, sinembargo, esto no es así.Una combinación de factores determina el ancho de banda práctico de una red:                                            Las propiedades de los medios físicos.  Las tecnologías seleccionadas para la señalización y la detección de señales de red.Las propiedades de los medios físicos, las tecnologías actuales y las leyes de lafísica desempeñan una función al momento de determinar el ancho de banda disponible.    Terminología del ancho de banda:    Los términos utilizados para medir la calidad del ancho de banda incluyen:          Latencia: Es la cantidad de tiempo, incluidas las demoras que les toma a los datostransferirse desde un punto determinado hasta otro. (PING) Cuanta mas alta es la latencia, másdemorarán los datos en llegar del punto A al punto B.      Cacidad de transferencia útil: Esta es la medida de datos utilizables transferidos duranteun período determinado. La capacidad de transferencia útil es el rendimiento menos lasobrecarga de tráfico para establecer sesiones, acuses de recibo, encapsulación y bitsretransmitidos.      Rendimiento: Es la medida de transferencia de bits a través de los medios durante unperíodo de tiempo determinado. El rendimiento generalmente no coincide con el ancho debanda y suele ser menor.Pueden afectar:        La cantidad de tráfico  El tipo de tráfico  La latencia creada por la cantidad de dispositivos de red encontrados entre origen y destino    Cableado de cobre.    Características del cableado de cobre:    El cableado de cobre no es solo un tipo de cable. Hay tres tipos diferentes de cableado decobre que se utilizan cada uno en situaciones específicas.Las redes utilizan medios de cobre porque son económicos, fáciles de instalar y tienen bajaresistencia a la corriente eléctrica. Sin embargo, estos medios están limitados por ladistancia y la interferencia de señal.Los datos se transmiten en cables de cobre por impulsos eléctricos.Un detector en la NIC de un dispositivo de destino debe recibir una señal que puedadecodificarse exitosamente para que coincida con la señal que fue enviada.Cuanto más lejos viaja una señal, más se deteriora.Todos los medios de cobre tienen unas limitaciones de distancia estrictas.Los valores de temporización y voltaje de los pulsos eléctricos también son vulnerables a lasinterferencias de dos fuentes:          Interferencia electromagnética (EMI) o Interferencia de radiofrecuencia(RFI): Las señales de EMI y RFI pueden distorsionar y dañar las señales de datosque transportan los medios de cobre. Estas incluyen las ondas de radio y dispositivoselectromagnéticos, como las luces fluorescentes o los motores eléctricos.Para contrarrestar los efectos negativos de la EMI y la RFI, algunos tipos de cables decobre se empaquetan con un blindaje metálico y requieren una conexión a tierra adecuada.      Crosstalk: Este se trata de una perturbación causada por los campos eléctricos omagnéticos de una señal de un hilo a la señal de un hilo adyacente. En los circuitostelefónicos, el crosstalk puede provocar que se escuche parte de otra conversación de voz deun circuito adyacente.Para contrarrestar los efectos negativos del crosstalk, algunos tipos de cables de cobre tienenpares de hilos de circuitos opuestos trenzados que cancelan dicho tipo de interferenciaen forma eficaz.La susceptibilidad de los cables de cobre al ruido electrónico también se puede limitarutilizando estas recomendaciones:        La elección del tipo o la categoría de cable más adecuados a un entorno de red determinado.  El diseño de una infraestructura de cables para evitar las fuentes de interferencia posiblesy conocidas en la estructura del edificio.  El uso de técnicas de cableado que incluyen el manejo y la terminación apropiados delos cables    Tipos de cableado de cobre:    Existen 3 tipos de cableado:    Par trenzado no blindado (UTP): El cableado UTP es el medio más común paraconectar dispositivos en redes. Consiste en cuatro pares de hilos trenzados y protegidos porplástico flexible. Se utiliza con conectores RJ-45 para enlazar hosts con dispositivos de redcomo switches y routers, principalmente en redes LAN. El trenzado de los hilos ayuda a evitarinterferencias y proporciona cierta protección física.  Par trenzado blindado (STP): El cableado STP ofrece una mayor proteccióncontra interferencias que el UTP, aunque es más costoso y difícil de instalar. Al igual que elUTP, utiliza conectores RJ-45. Este combina técnicas de blindaje para contrarrestarinterferencias electromagnéticas y de radiofrecuencia, además del trenzado de hilos paramitigar el crosstalk.El cable STP consta de cuatro pares de hilos, cada par está protegido con una hoja metálica yluego se cubre con una malla tejida o una hoja metálica.  Cable coaxial: El cable coaxial contiene dos conductores compartiendo un eje:uno de cobre para transmitir señales electrónicas y otro de malla de cobre o hoja metálica queactúa como blindaje contra interferencias electromagnéticas. Está recubierto por aislamientoplástico flexible y un revestimiento para protección física.    Cableado UTP.    Propiedades del cableado UTP:    El cableado UTP consta de cuatro pares de hilos trenzados y recubiertos con plásticoflexible. Su tamaño pequeño facilita la instalación. No cuenta con blindaje contra EMI yRFI, pero los diseñadores emplean técnicas como anulación y variación en la torsión dehilos para reducir el crosstalk.La anulación se logra al emparejar hilos en circuitos, generando campos magnéticosopuestos que anulan interferencias.Variar el número de vueltas por par de hilos también mejora la anulación. Los cables UTPsiguen especificaciones para la cantidad de vueltas por metro, y cada par coloreado tieneun trenzado diferente. Estos cables se basan en la anulación de los hilos trenzados paramantener la calidad de la señal y proporcionar un auto blindaje efectivo en los medios de red.    Conectores y estándares del cableado UTP:    El cableado UTP cumple con los estándares establecidos en conjunto por la TIA/EIA.La TIA/EIA-568 estipula los estándares comerciales de cableado para las instalaciones LANy es el estándar de mayor uso en entornos de cableado LAN.El Instituto de Ingenieros Eléctricos y Electrónicos (IEEE) establece las característicaseléctricas del cableado de cobre y califica el cable UTP en función de su rendimiento. Loscables UTP se categorizan según su capacidad para transportar datos a diferentesvelocidades de ancho de banda. Por ejemplo, el cable de Categoría 5 es común eninstalaciones de FastEthernet 100BASE-TX, y hay otras categorías como 5e, 6 y6a diseñadas para admitir velocidades de transmisión de datos más altas.Algunos fabricantes producen cables que exceden las especificaciones de la categoría 6ade la TIA/EIA y se refieren a estos como cables de Categoría 7.Los cables UTP generalmente se terminan con un conector RJ-45. El estándar TIA/EIA-568describe las asignaciones de los códigos por colores de los hilos a la asignación de pines(diagrama de pines) de los cables Ethernet.    Cables UTP directos y cruzados:    Los cables UTP pueden requerir diferentes disposiciones de hilos en los conectoresRJ-45 según las situaciones. Esto implica conectar los hilos de manera diferente paradistintos grupos de pines en el conector.Los principales tipos de cables que resultan de estas convenciones de cableado son:    Cable directo de Ethernet: Es el tipo más común de cable de red, usado paraconectar un host a un switch y un switch a un router.  Cable cruzado Ethernet: Se emplea para conectar dispositivos similares, comoswitch a switch, host a host o router a router. No obstante, los cables cruzados seconsideran obsoletos en gran medida debido a la tecnología Auto-MDIX que permite a lasNIC detectar automáticamente el tipo de cable y realizar la conexión adecuada.    Cableado de fibra óptica.    Propiedades del cableado de fibra óptica:    El cableado de fibra óptica representa otra opción en las redes, aunque es menos comúndebido a su costo más elevado.Este presenta propiedades que lo convierten en la elección óptima en ciertos escenarios,aspectos. Transmite datos a distancias más extensas y con capacidades de ancho debanda superiores que cualquier otro medio de red.A diferencia de los cables de cobre, la fibra óptica transmite señales con menos atenuacióny es completamente inmune a las interferencias electromagnéticas (EMI) y deradiofrecuencia (RFI). Se utiliza para interconectar dispositivos de red.La fibra óptica consiste en un hilo flexible, extremadamente delgado y transparente devidrio altamente puro, apenas más grueso que un cabello humano.Los datos se codifican en la fibra como impulsos de luz. Funciona como una guía de ondaso una “tubería de luz”, transmitiendo luz entre los extremos con una pérdida mínima de laseñal.    Tipos de medios de fibra:    En términos generales, los cables de fibra óptica pueden clasificarse en dos tipos:    Fibra monomodo (SMF): Es un tipo de cable de fibra óptica que permite latransmisión de señales de luz a través de un único modo de propagación. Esto significa quesolo se permite la propagación de una señal de luz en una sola dirección, lo que reduce laatenuación y mejora la velocidad y la capacidad de ancho de banda. La SMF esampliamente utilizada en largas distancias y aplicaciones de alta velocidad, como redes delarga distancia y conexiones de datos de alta velocidad.  Fibra multimodo (MMF): Es un tipo de cable de fibra óptica que permite latransmisión de múltiples señales de luz a través de diferentes modos de propagación. Estosignifica que varias señales de luz se propagan simultáneamente por la fibra en distintosángulos, lo que puede causar mayor atenuación y dispersión de la señal en comparación con lafibra monomodo. La MMF es comúnmente utilizada en distancias más cortas y redes localesdonde no se requiere una alta capacidad de ancho de banda a largas distancias.Una de las diferencias destacadas entre MMF y SMF es la cantidad de dispersión.La dispersión se refiere a la extensión de los pulsos de luz con el tiempo. El aumento de ladispersión significa una mayor pérdida de la intensidad de la señal. FMM tieneuna mayor dispersión que SMF. Es por eso que MMF sólo puede viajar hasta 500metros antes de la pérdida de señal.    Uso del cableado de fibra óptica:    El cableado de fibra óptica se utiliza en cuatro tipos de industrias:    Redes empresariales: Se utilizan para aplicaciones de cableado backbone ydispositivos de infraestructura de interconexión.  Fibra hasta el hogar (FTTH): Se utiliza para proporcionar servicios de bandaancha siempre activos a hogares y pequeñas empresas.  Redes de larga distancia: Utilizadas por proveedores de servicios para conectarpaíses y ciudades.  Redes de cable submarino: Se utilizan para proporcionar soluciones confiables dealta velocidad y capacidad capaces de sobrevivir en entornos submarinos hostiles a distanciastransoceánicas.    Conectores de fibra óptica:    Un conector de fibra óptica termina el extremo de una fibra óptica. Hay una variedad deconectores de fibra óptica disponibles. Las diferencias principales entre los tipos de conectoresson las dimensiones y los métodos de acoplamiento. Las empresas deciden qué tipos deconectores utilizarán en base a sus equipos.    Conectores de punta directa (ST): Son conectores de fibra óptica que utilizan unaterminación tipo bayoneta para su acoplamiento. Son comunes y fáciles de conectar ydesconectar. Tienen una punta cilíndrica y se utilizan en aplicaciones de fibra multimodo ymonomodo.  Conectores suscriptor (SC): Estos son conectores de fibra óptica que se utilizanampliamente en aplicaciones de redes. Tienen un mecanismo de enganche tipo push-pullque facilita la conexión y desconexión. Son utilizados tanto para fibra multimodo comomonomodo.  Conectores Lucent (LC): Son pequeños y altamente utilizados en aplicaciones defibra óptica. Utilizan un mecanismo de enganche similar al SC, pero son más compactos, lo quelos hace ideales para espacios limitados. Son comunes en conexiones de fibra óptica de altadensidad y se utilizan para fibra multimodo y monomodo.  Conectores Simplex: Son conectores de fibra óptica que permiten la conexión deuna sola fibra. Son utilizados para conexiones punto a punto, donde solo se requiere unadirección de transmisión. Pueden ser tanto conectores ST, SC, LC, u otros, pero se usan parauna sola fibra.  Conectores LC multimodo dúplex: Estos son conectores de fibra óptica LC quepermiten la conexión de dos fibras en modo multimodo. Son dúplex, lo que significa quepermiten la transmisión bidireccional de datos en ambos sentidos. Son comunes enaplicaciones donde se requiere mayor capacidad de ancho de banda y se utilizan paraconexiones de fibra multimodo.    Cables de conexión de fibra:    Los cables de conexión de fibra óptica son necesarios para interconectar dispositivos deinfraestructura. El uso de colores distingue entre los cables de conexión monomodo ymultimodo. El conector amarillo corresponde a los cables de fibra óptica monomodo y elnaranja (o aqua) corresponde a los cables de fibra óptica multimodo.    Medios inalámbricos.    Propiedades de los medios inalámbricos:    Estos permiten la conexión a la capa física de una red a través de señaleselectromagnéticas, usando frecuencias de radio y microondas para representar datos en formabinaria.La cobertura se ve afectada por obstáculos y materiales de construcción, sonvulnerables a interferencias y plantean desafíos de seguridad y de compartición demedio.    Tipos de medios inalámbricos:    Los estándares de IEEE y de la industria de las telecomunicaciones para comunicacionesinalámbricas abarcan la capa física y de enlace de datos, definiendo especificaciones en áreascomo codificación de señales a radio, frecuencia e intensidad de transmisión, requisitos derecepción y decodificación de señales, y diseño de antenas. Aquí están los principalesestándares inalámbricos:          Wi-Fi (IEEE 802.11): Tecnología para LAN inalámbrica (WLAN) que empleaacceso múltiple por detección de portadora con prevención de colisiones (CSMA/CA).Wi-Fi se utiliza ampliamente con dispositivos WLAN certificados basados en el estándarIEEE 802.11.      Bluetooth (IEEE 802.15): Estándar para redes de área personal inalámbrica(WPAN) conocido como “Bluetooth”, que utiliza un proceso de emparejamiento dedispositivos para distancias de 1 a 100 metros.      WiMAX (IEEE 802.16): También conocido como Interoperabilidad Mundial para elAcceso por Microondas (WiMAX), utiliza una topología punto a multipunto para proporcionaracceso inalámbrico de ancho de banda.      Zigbee (IEEE 802.15.4): Especificación para comunicaciones de baja velocidad ypotencia, ideal para aplicaciones con corto alcance, baja velocidad de datos y larga duración debatería. Se utiliza en entornos industriales e Internet de las cosas (IoT), como interruptoresinalámbricos y recopilación de datos de dispositivos médicos.        LAN inalámbrica:        La implementación común de tecnología inalámbrica permite la conexión de dispositivos através de una LAN inalámbrica. Para esto, se necesitan los siguientes dispositivos de red:              Punto de acceso inalámbrico (AP): Concentra las señales inalámbricas de losusuarios y se conecta a la infraestructura de red existente basada en cobre, como Ethernet.En dispositivos domésticos y de pequeñas empresas, los routers inalámbricos integran lasfunciones de un router, switch y punto de acceso en un solo dispositivo.  Adaptadores NIC inalámbricos: Proporcionan capacidad de comunicacionesinalámbricas a los hosts de la red.Con la evolución de la tecnología, han surgido diversos estándares WLAN basados enEthernet. Al adquirir dispositivos inalámbricos, es importante garantizar la compatibilidad einteroperabilidad. Los beneficios de las tecnologías inalámbricas de comunicación de datos sonnotables, especialmente en la reducción de costos de cableado y en la conveniencia de lamovilidad del host. No obstante, se debe implementar seguridad rigurosa para proteger lasWLAN contra el acceso no autorizado y posibles amenazas."
  },
  
  {
    "title": "Montaje del servicio IIS, SQL Server y ASP",
    "url": "/rx/posts/servicio-IIS-SQL-Server-ASP/",
    "categories": "Sistemas Microinformáticos y Redes, Servicios en red",
    "tags": "redes locales, teoría, smr",
    "date": "2023-10-25 11:00:00 +0000",
    





    
    "snippet": "Instalación de IISInstalación de IISInstalación de IISInstalación de IISInstalación de IISInstalación de IISInstalación de IISInstalación de IISInstalación de IISInstalación de IISInstalación de II...",
    "content": "Instalación de IISInstalación de IISInstalación de IISInstalación de IISInstalación de IISInstalación de IISInstalación de IISInstalación de IISInstalación de IISInstalación de IISInstalación de IISInstalación de IISInstalación de IIS y configuración de HTTP y HTTPSInstalación de http y httpsRedirección de HTTP a HTTPSInstalación de http y httpsAplicaciones necesarias  Windows Framework 4.8  SQL Server® 2012 SP4  SQL Server Management Studio (SSMS) 19.0.1Windows Framework 4.8Trivial.Instalación de SQL Server® 2012 SP4Le damos a nueva instalación y a continuacióna todo siguiente hasta que nos pregunta la forma de conectarnos a SQL Server: Y terminamos la instalación de SQL Server:Instalación de SQL Server Management Studio (SSMS) 19.0.1Instalación más roles y característicasCreación de usuario en SQL ServerY probamos…Creación de la base de datos, la tabla y rellenarCreación del archivo index.aspY probamos…Creación de tabla en SQL ServerCREATE DATABASE NombreDeTuBaseDeDatos; -- Reemplaza \"NombreDeTuBaseDeDatos\" con el nombre de tu base de datosUSE NombreDeTuBaseDeDatos; -- Reemplaza \"NombreDeTuBaseDeDatos\" con el nombre de tu base de datosCREATE TABLE TuTabla ( -- Reemplaza \"TuTabla\" con el nombre de tu tabla    ID INT PRIMARY KEY,    Nombre VARCHAR(50),    Apellido VARCHAR(50),    Edad INT);INSERT INTO TuTabla (ID, Nombre, Apellido, Edad) VALUES (1,'Rodolfo', 'Langostino', 50);Página web conexión a SQL Server&lt;%' Definir la cadena de conexión a la base de datosDim connStrconnStr = \"Provider=SQLOLEDB;Data Source=nombre_servidor;Initial Catalog=nombre_bd;User ID=usuario;Password=contraseña;\"' Crear una conexión a la base de datosDim connSet conn = Server.CreateObject(\"ADODB.Connection\")conn.Open connStr' Definir una consulta SQLDim strSQLstrSQL = \"SELECT * FROM MiTabla\"' Crear un objeto de registro (recordset) y ejecutar la consultaDim rsSet rs = Server.CreateObject(\"ADODB.Recordset\")rs.Open strSQL, conn' Recorrer los resultados y mostrarlosDo Until rs.EOF    Response.Write(rs(\"NombreCampo\") &amp; \"&lt;br /&gt;\")    rs.MoveNextLoop' Cerrar el recordset y la conexión a la base de datosrs.CloseSet rs = Nothingconn.CloseSet conn = Nothing%&gt;Extras      Utilización y configuración de VirtualHost.Utilización y configuración de VirtualHost        Configuración del fichero host en el Windows anfitrión.Configuración del fichero host en el Windows anfitrión  "
  },
  
  {
    "title": "Comandos switch CISCO",
    "url": "/rx/posts/Comandos-Switch-CISCO/",
    "categories": "Sistemas Microinformáticos y Redes, Redes Locales",
    "tags": "redes locales, teoría, smr",
    "date": "2023-10-10 11:00:00 +0000",
    





    
    "snippet": "IntroducciónLos conmutadores (switches) de Cisco utilizan un sistema operativo llamado Cisco IOS (Internetwork Operating System), que ofrece una amplia variedad de comandos para configurar y admini...",
    "content": "IntroducciónLos conmutadores (switches) de Cisco utilizan un sistema operativo llamado Cisco IOS (Internetwork Operating System), que ofrece una amplia variedad de comandos para configurar y administrar estos dispositivos de red.ComandosPasar a modo superusuarioSwitch&gt; enableSwitch#Cambiar el nombre de un dispositivoSwitch# configure terminalSwitch(config)# hostname *Sw-Floor-1*Sw-Floor-1(config)#Establecer contraseña para el usuario estándarSw-Floor-1# configure terminalSw-Floor-1(config)# line console 0Sw-Floor-1(config-line)# password *cisco*Sw-Floor-1(config-line)# loginSW-Floor-1(config-line)# endSw-Floor-1#Para asegurar el acceso privilegiado a superusuarioSw-Floor-1# configure terminalSw-Floor-1(config)# enable secret *class*Sw-Floor-1(config)# exitSw-Floor-1#Proteger las líneas de conexiónSw-Floor-1# configure terminalSw-Floor-1(config)# line vty 0 15Sw-Floor-1(config-line)# password *cisco* Sw-Floor-1(config-line)# login SW-Floor-1(config-line)# endSw-Floor-1#Encriptación de las contraeñasSw-Floor-1# configure terminalSw-Floor-1(config)# service password-encryptionSw-Floor-1(config)#Estado de nuestro switchshow running-configMensaje de avisoSw-Floor-1# configure terminalSw-Floor-1(config)# banner motd *#Authorized Access Only#*Establecer IP en el switchCCNA# configure terminalCCNA(config)# interface vlan 1CCNA(config-if)# ip address *192.168.1.100 255.255.255.0*CCNA(config-if)# no shutdown00:35:07: %LINK-3-UPDOWN: Interface Vlan1, changed state to up00:35:08: %LINEPROTO-5-UPDOWN: Line protocol on Interface Vlan1, changedstate to upCCNA(config-if)# exitCCNA(config)# ip default-gateway *192.168.1.1*Configuración DHCPCCNA# show dhcp leaseTemp IP addr: 192.168.1.101 for peer on Interface: Vlan1Temp sub net mask: 255.255.255.0   DHCP Lease server: 192.168.1.1, state: 3 Bound   DHCP transaction id: 1966   Lease: 86400 secs, Renewal: 43200 secs, Rebind: 75600 secsTemp default-gateway addr: 192.168.1.1   Next timer fires after: 11:59:45   Retry count: 0 Client-ID: cisco-0019.e86a.6fc0-Vl1   Hostname: EmmaCCNA# show interfaces vlan 1Vlan1 is up, line protocol is up   Hardware is EtherSVI, address is 0019.e86a.6fc0 (bia 0019.e86a.6fc0)   Internet address is 192.168.1.101/24   MTU 1500 bytes, BW 1000000 Kbit, DLY 10 usec,      reliability 255/255, txload 1/255, rxload 1/255! lines omitted for brevityCCNA# show ip default-gateway192.168.1.1Conexión por SSH# Configuración de hostname y nombre de dominioSwitch(config)#hostname *eclassvirtual-sw*eclassvirtual-sw(config)#ip domain-name *eclassvirtual.com*# Generación de llaves RSAeclassvirtual-sw(config)# crypto key generate rsa# Cambiar SSH versión 1 a la 2 (la versión 2 es más segura)eclassvirtual-sw(config)#ip ssh version 2# Configuración de Line VTYeclassvirtual-sw(config)# line vty 0 15eclassvirtual-sw(config-line)# transport input ssheclassvirtual-sw(config-line)# login local# Crear nombre de usuario y passwordeclassvirtual-sw(config)# username *eclassvirtual* privilege 15 secret *cisco123*# Habilitar enable secreteclassvirtual-sw(config)# enable secret *cisco123*Revisión de conexión SSH en el Switcheclassvirtual-sw# show sshHabilitar SSH en Router CiscoRouter#conf tRouter(config)#hostname *eclassvirtual-router*eclassvirtual-router(config)#interface vlan 1eclassvirtual-router(config-if)#ip address *192.168.0.1 255.255.255.0*eclassvirtual-router(config-if)#no shutdowneclassvirtual-router(config-if)#exiteclassvirtual-router (config)#ip domain-name *cisco.com*eclassvirtual-router(config)#username eclassvirtual privilege 15 secret *cisco123*eclassvirtual-router(config)#crypto key generate rsaThe name for the keys will be: eclasvirtual-router.cisco.com Choose the size of the key modulus in the range of 360 to 2048 for your General Purpose Keys. Choosing a key modulus greater than 512 may take a few minutes. How many bits in the modulus [512]: 2048 % Generating 2048 bit RSA keys, keys will be non-exportable…[OK]eclassvirtual-router(config)#ip ssh version 2eclassvirtual-router(config)#enable secret *cisco123*eclassvirtual-router(config)#line vty 0 15eclassvirtual-router(config-line)#transport input ssheclassvirtual-router(config-line)#login localeclassvirtual-router#show ip ssh C:\\&gt;ssh -l eclassvirtual 192.168.0.1 Open Password:Creación de VLANEntramos en superusuario:enableEntramos en la configuración del terminal:configure terminalCreamos la VLAN 10 y le ponemos nombre:vlan 10name Mesa1exitCreamos la VLAN 20 y le ponemos nombre:vlan 20name Mesa2exitexitMostramos la información pertinente de a las VLANsshow vlanAsignamos que interfaces pertenecen a cada VLANconfigure terminalinterface range f0/10-14switchport mode accessswitchport access vlan 10exitinterface range f0/15-19switchport mode accessswitchport access vlan 20exit"
  },
  
  {
    "title": "Modelo OSI vs TCP/IP",
    "url": "/rx/posts/OSI-TCPIP/",
    "categories": "Sistemas Microinformáticos y Redes, Redes Locales",
    "tags": "redes locales, teoría, smr",
    "date": "2023-10-03 11:00:00 +0000",
    





    
    "snippet": "IntroducciónEl Modelo OSI (Open Systems Interconnection) y el conjunto de protocolos TCP/IP son dos marcos fundamentales en el mundo de las redes de computadoras, que desempeñan un papel crucial en...",
    "content": "IntroducciónEl Modelo OSI (Open Systems Interconnection) y el conjunto de protocolos TCP/IP son dos marcos fundamentales en el mundo de las redes de computadoras, que desempeñan un papel crucial en la comunicación de datos a nivel global. Estos modelos proporcionan una estructura y un conjunto de estándares que permiten que dispositivos y sistemas de diferentes fabricantes se comuniquen de manera efectiva en una red de computadoras.Se conoce como familia de protocolos de Internet al conjunto de protocolos que son implementados por la pila de protocolos sobre los cuales se fundamenta Internet y que permiten la transmisión de datos entre las redes de computadoras.Los dos protocolos más importantes y que fueron también los primeros en definirse y en ser utilizados son: TCP (Protocolo de Control de Transmisión o Transmission Control Protocol) e IP (Protocolo de Internet o Internet Protocol), de ahí que el modelo se denomine como TCP/IP. Los protocolos existentes superan los cien, ente los cuales podemos mencionar como los más conocidos a HTTP, FTP, SMTP, POP, ARP, entre otros. TCP/IP es la plataforma que sostiene Internet y que permite la comunicación entre dos equipos, no importando si estos cuentan con diferentes sistemas operativos, ya sea sobre redes de área local (LAN) o redes de área extensa (WAN).El modelo TCP/IP es un protocolo dirigido a la transferencia de información a través de internet, o, dicho de otra manera, es un protocolo utilizado por todos los ordenadores conectados a una red, de manera que estos puedan comunicarse entre sí.Por otro lado, el modelo OSI ha servido como fundamento teórico para la interconexión de sistemas abiertos, basándose en un conjunto de siete capas. Cada capa cumple funciones específicas requeridas para comunicar dos sistemas mediante una estructura jerárquica. Cualquiera de sus siete capas se apoya en la capa anterior, realiza su función y ofrece un servicio a la capa superior.Modelo OSI:Modelo OSI:El Modelo OSI, desarrollado por la Organización Internacional de Normalización (ISO), es un enfoque conceptual que divide el proceso de comunicación de datos en siete capas distintas. Cada capa tiene su función específica y se comunica con las capas adyacentes para garantizar la transmisión de datos sin problemas. Las capas del Modelo OSI incluyen desde la física (capa 1), que se encarga de la transmisión física de bits, hasta la capa de aplicación (capa 7), que interactúa con las aplicaciones de usuario final. Este modelo proporciona un marco teórico sólido para comprender cómo funcionan las redes y cómo se pueden desarrollar protocolos compatibles con diferentes sistemas y dispositivos.Capa físicaLa capa física es la primera capa del Modelo OSI (Open Systems Interconnection) y constituye la base fundamental de cualquier sistema de comunicación de datos. Esta capa se encarga de la transmisión física de bits a través del medio de comunicación, ya sea cableado o inalámbrico. Su función principal es convertir los datos digitales generados por las capas superiores en señales eléctricas, ópticas o de radio que pueden ser transmitidas a través del medio de transmisión.      Transmisión de bits: La capa física se encarga de transmitir secuencias de bits, representadas como señales eléctricas, pulsos de luz o señales de radio, a través del medio de comunicación físico. Estos bits son la unidad más básica de información y forman la base de toda la comunicación digital.        Características eléctricas y mecánicas: La capa física define las características eléctricas y mecánicas del medio de transmisión, como el voltaje, la velocidad de transmisión, la impedancia y la forma de los conectores. Estos parámetros son esenciales para garantizar una transmisión confiable de datos.        Topología de red: La capa física también puede definir la topología física de la red, es decir, cómo están conectados los dispositivos en la red (por ejemplo, en una topología de estrella, bus o anillo). Esto afecta la forma en que los datos se transmiten a través de la red.        Multiplexación y modulación: En esta capa, se pueden utilizar técnicas de multiplexación para combinar múltiples flujos de datos en un solo medio de transmisión. Además, se emplea la modulación para convertir los datos digitales en señales analógicas que pueden viajar a través de medios como cables de cobre, fibra óptica o señales de radio.        Sincronización: La capa física debe garantizar la sincronización adecuada entre el transmisor y el receptor para que ambos dispositivos puedan interpretar correctamente los datos transmitidos.        Detección de errores básica: Aunque la detección y corrección de errores más avanzada se realiza en capas superiores, la capa física puede incluir algunos mecanismos básicos de detección de errores para garantizar una comunicación confiable.  En resumen, la capa física en el Modelo OSI es esencial para garantizar que los datos digitales se puedan transmitir a través de un medio de comunicación físico de manera confiable y eficiente. Establece las especificaciones técnicas necesarias para la transmisión física de bits y sienta las bases para las capas superiores del modelo, que se ocupan de la organización, el enrutamiento y la entrega de datos en una red.Capa de enlace de datosLa capa de Enlace de Datos es la segunda capa del Modelo OSI y desempeña un papel crucial en la transmisión de datos confiable y eficiente a través de un medio de comunicación. Esta capa se encarga de la comunicación directa entre dispositivos en la misma red local y asegura que los datos se transmitan sin errores ni colisiones.La capa de enlace de datos proporciona transferencia de nodo a nodo, un enlace entre dos nodos conectados directamente. Maneja el empaquetado y desempaquetado de datos en marcos. Define el protocolo para establecer y terminar una conexión entre dos dispositivos conectados físicamente, como el Protocolo punto a punto (PPP). La capa de enlace de datos generalmente se divide en dos subcapas: capa de control de acceso a medios (MAC) y capa de control de enlace lógico (LLC). La capa MAC es responsable de controlar cómo los dispositivos en una red obtienen acceso a un medio y permiso para transmitir datos. La capa LLC es responsable de identificar y encapsular los protocolos de la capa de red y controla la verificación de errores y la sincronización de tramas.      Encapsulación y tramas: La capa de Enlace de Datos toma los datos de la capa superior (Capa de Red) y los divide en tramas más pequeñas. Cada trama incluye información de control, como direcciones MAC (Media Access Control), que identifican el dispositivo de origen y destino en la red.        Control de acceso al medio: Esta capa se encarga de administrar el acceso al medio de transmisión compartido, como un cable Ethernet. Utiliza protocolos de control de acceso al medio (MAC) para coordinar la transmisión de datos, evitando colisiones cuando varios dispositivos intentan transmitir simultáneamente.        Detección y corrección de errores: La capa de Enlace de Datos realiza la detección de errores en las tramas transmitidas y puede realizar correcciones básicas si se detectan errores. Esto ayuda a garantizar una comunicación confiable.        Control de flujo: La capa de Enlace de Datos puede gestionar el flujo de datos entre dispositivos, asegurándose de que el dispositivo receptor pueda procesar la información a un ritmo adecuado. Evita la sobrecarga de datos y el desbordamiento del búfer.        Direcciones MAC: Cada tarjeta de red tiene una dirección MAC única asignada a nivel de hardware. La capa de Enlace de Datos utiliza estas direcciones para dirigir las tramas al dispositivo correcto en una red local.        Segmentación y reensamblaje de tramas: Si los datos son demasiado grandes para una sola trama, la capa de Enlace de Datos divide los datos en fragmentos más pequeños y los envía en múltiples tramas. El dispositivo receptor luego reensambla los fragmentos en el orden correcto.        Control de colisiones: En las redes Ethernet, por ejemplo, esta capa utiliza el protocolo CSMA/CD (Carrier Sense Multiple Access with Collision Detection) para evitar y manejar las colisiones cuando varios dispositivos intentan transmitir al mismo tiempo.  En resumen, la capa de Enlace de Datos es esencial para garantizar una comunicación efectiva y confiable en una red local. Proporciona la gestión de tramas, la detección y corrección de errores, el control de acceso al medio y la dirección de dispositivos, entre otras funciones. Además, actúa como un puente entre la capa de Red (donde se maneja la dirección lógica) y la capa física (donde se maneja la transmisión física de bits).Capa de redLa capa de Red es la tercera capa del Modelo OSI y desempeña un papel crucial en la comunicación de datos a través de redes. Su función principal es facilitar el enrutamiento de paquetes de datos desde el origen hasta el destino a través de una red de computadoras.      Enrutamiento: La función principal de la capa de Red es determinar la mejor ruta para enviar paquetes de datos desde el dispositivo de origen al dispositivo de destino. Esto implica tomar decisiones sobre cómo los paquetes deben viajar a través de la red, considerando factores como la distancia, la congestión de la red y la topología.        Direccionamiento lógico: La capa de Red utiliza direcciones lógicas (como direcciones IP) para identificar dispositivos en la red. Estas direcciones son independientes de la tecnología de transmisión física y permiten que los paquetes se enruten correctamente a través de la red.        Fragmentación y reensamblaje de paquetes: Si los datos son demasiado grandes para ser transmitidos en un solo paquete, la capa de Red puede dividirlos en paquetes más pequeños. El dispositivo de destino luego reensambla los paquetes para obtener los datos originales.        Enrutamiento dinámico: En redes más grandes y complejas, se utilizan protocolos de enrutamiento dinámico, como OSPF o RIP, para permitir que los routers compartan información sobre las rutas disponibles y ajusten automáticamente las rutas en función de las condiciones de la red.        Encaminamiento: Los routers, dispositivos específicos de la capa de Red, son responsables de encaminar los paquetes de datos a través de la red. Estos dispositivos toman decisiones de enrutamiento basadas en las direcciones de destino de los paquetes.        Fragmentación de red: La capa de Red también puede dividir una red en subredes más pequeñas, lo que facilita la gestión de grandes redes y proporciona aislamiento y seguridad entre diferentes segmentos de la red.        Calidad de servicio (QoS): La capa de Red puede incluir mecanismos de QoS para priorizar ciertos tipos de tráfico sobre otros, garantizando un rendimiento adecuado para aplicaciones sensibles al retraso o a la pérdida de datos.        Traducción de direcciones de red (NAT): En redes domésticas y corporativas, la capa de Red puede incluir la funcionalidad de NAT para permitir que múltiples dispositivos compartan una única dirección IP pública para acceder a Internet.  En resumen, la capa de Red desempeña el papel en la comunicación de datos al proporcionar el enrutamiento y direccionamiento de paquetes, permitiendo que los datos viajen a través de una red de manera efectiva y eficiente.Capa de transporteLa capa de Transporte es la cuarta capa del Modelo OSI. Esta capa se encarga de la transferencia confiable de datos desde un dispositivo de origen a un dispositivo de destino, independientemente de la red física subyacente. Aquí te explico en detalle las principales funciones y características de la capa de Transporte:      Segmentación y reensamblaje: La capa de Transporte divide los datos recibidos de la capa de Sesión (o de la capa de Aplicación) en segmentos más pequeños para su transmisión. Estos segmentos son más manejables y se numeran para que puedan ser reensamblados correctamente en el orden correcto por el dispositivo de destino.        Control de flujo: La capa de Transporte se encarga de controlar la velocidad de transmisión de datos entre el emisor y el receptor. Esto evita que un dispositivo sobrecargue al otro con datos a una velocidad que no puede manejar, lo que podría dar lugar a la pérdida de datos o a la congestión de la red.        Detección de errores: La capa de Transporte verifica si los datos se han transmitido correctamente y detecta cualquier error que pueda haber ocurrido durante la transmisión. En caso de que se detecte un error, se pueden solicitar retransmisiones de los datos afectados.        Control de la conexión: La capa de Transporte puede proporcionar servicios de conexión confiable o no confiable, dependiendo del protocolo utilizado. Los protocolos confiables, como el Protocolo de Control de Transmisión (TCP), establecen una conexión antes de la transferencia de datos y garantizan que los datos se entreguen sin errores y en el orden correcto. Los protocolos no confiables, como el Protocolo de Datagrama de Usuario (UDP), transfieren datos sin establecer una conexión previa y no garantizan la entrega confiable.        Multiplexación: La capa de Transporte permite que múltiples aplicaciones compartan la misma conexión de red utilizando puertos de origen y destino. Esto se conoce como multiplexación de puertos y permite que un solo dispositivo maneje múltiples flujos de datos simultáneamente.        Identificación de aplicaciones: La capa de Transporte utiliza números de puerto para identificar las aplicaciones y servicios en los dispositivos de origen y destino. Esto asegura que los datos se entreguen a la aplicación correcta en el dispositivo receptor.  En resumen, la capa de Transporte se encarga de proporcionar servicios de segmentación, reensamblaje, control de flujo, detección de errores y control de la conexión. Además, permite que múltiples aplicaciones compartan una sola conexión de red y garantiza que los datos se entreguen de manera confiable y eficiente a través de una red de computadoras. Protocolos como TCP y UDP son ejemplos comunes de protocolos de transporte utilizados en Internet y en redes en general.Capa de sesiónLa capa de Sesión es la quinta capa del Modelo OSI y tiene como objetivo proporcionar funciones de administración de sesiones y diálogo entre aplicaciones en dispositivos de red. Esta capa es fundamental para establecer, administrar y finalizar sesiones de comunicación entre aplicaciones en dispositivos remotos.      Establecimiento, mantenimiento y finalización de sesiones: La capa de Sesión es responsable de iniciar, mantener y cerrar sesiones de comunicación entre aplicaciones en dispositivos remotos. Una sesión es una conexión lógica entre dos dispositivos que permite el intercambio de datos.        Sincronización de datos: Esta capa asegura que los datos se transmitan de manera sincronizada y ordenada entre las aplicaciones en ambos extremos de la comunicación. También maneja la reanudación de sesiones interrumpidas en caso de fallos o interrupciones de la red.        Diálogo y control de flujo: La capa de Sesión permite que las aplicaciones establezcan un diálogo estructurado y controlen el flujo de datos durante la sesión. Esto garantiza que las aplicaciones puedan enviar y recibir datos de manera ordenada y coherente.        Administración de tokens y bloqueo: En sistemas distribuidos, la capa de Sesión puede proporcionar funciones de administración de tokens y bloqueo para evitar conflictos de acceso a recursos compartidos entre dispositivos.        Checkpointing y recuperación: La capa de Sesión puede implementar funciones de checkpointing para realizar copias de seguridad de los datos en caso de interrupciones y facilitar la recuperación de la sesión en su estado anterior.        Seguridad de sesión: Puede proporcionar servicios de autenticación y autorización para garantizar que solo las aplicaciones autorizadas tengan acceso a la sesión. También puede cifrar los datos transmitidos durante la sesión para garantizar la confidencialidad.        Gestión de sesiones simultáneas: La capa de Sesión puede manejar múltiples sesiones simultáneas entre dispositivos y garantizar que las aplicaciones puedan gestionar y distinguir entre ellas de manera efectiva.  En resumen, la capa de Sesión actúa como un administrador de sesiones de comunicación entre aplicaciones en dispositivos de red. Su función principal es garantizar que las aplicaciones puedan establecer, mantener y finalizar sesiones de manera efectiva, sincronizada y segura. Además, facilita el diálogo estructurado y controla el flujo de datos durante las sesiones, lo que contribuye a una comunicación ordenada y confiable en una red de ordenadores.Capa de presentación ——-La capa de Presentación, que es la sexta capa del Modelo OSI (Open Systems Interconnection), es responsable de la representación y el cifrado de los datos para garantizar que la información sea comprensible y segura durante la comunicación entre dispositivos en una red de computadoras. A continuación, se explican las principales funciones y características de la capa de Presentación:      Codificación y conversión de datos: La capa de Presentación se encarga de convertir los datos de la aplicación en un formato adecuado para su transmisión y viceversa. Esto puede incluir la codificación de caracteres, la conversión de datos numéricos y la representación de datos en formatos específicos.        Compresión de datos: Para reducir el ancho de banda necesario y acelerar la transferencia de datos, la capa de Presentación puede comprimir los datos antes de enviarlos y descomprimirlos en el extremo receptor. Esto es especialmente útil en redes con limitaciones de ancho de banda.        Cifrado y seguridad: La capa de Presentación proporciona servicios de cifrado y descifrado para proteger la confidencialidad de los datos durante la transmisión. Esto garantiza que los datos no sean interceptados ni entendidos por partes no autorizadas.        Control de formato y sintaxis: Asegura que los datos enviados se ajusten a un formato o sintaxis específicos, lo que facilita la interoperabilidad entre sistemas que pueden tener representaciones internas diferentes de los datos.        Gestión de caracteres especiales: Maneja caracteres especiales y caracteres de control que puedan estar presentes en los datos, asegurándose de que no causen problemas en la transmisión o interpretación incorrecta.        Traducción de conjuntos de caracteres: Si los dispositivos en la red utilizan conjuntos de caracteres diferentes, la capa de Presentación puede realizar traducciones entre ellos para garantizar que los datos se muestren correctamente.        Conversiones de endian: La capa de Presentación puede realizar conversiones de endian para garantizar que los datos se almacenen y transmitan en el orden correcto en sistemas con diferentes arquitecturas de procesador.        Marcadores de inicio y fin: Puede agregar marcadores de inicio y fin a los datos para indicar el inicio y el final de una transmisión, lo que facilita la identificación de los límites de los datos en la capa superior.  En resumen, la capa de Presentación desempeña un papel crucial en la comunicación de datos al garantizar que los datos se presenten, representen y transmitan de manera adecuada y segura entre dispositivos en una red de computadoras. Sus funciones incluyen la conversión de datos, la compresión, el cifrado y la gestión de caracteres y formatos, lo que contribuye a la interoperabilidad y la seguridad en la comunicación de datos en una red.Capa de presentación ——-La capa de Aplicación es la séptima y última capa del Modelo OSI. A diferencia de las capas inferiores, que se ocupan de la transmisión y el enrutamiento de datos, la capa de Aplicación se enfoca en proporcionar servicios y aplicaciones específicas para los usuarios y las aplicaciones finales en una red de computadoras. Aquí te explico las principales funciones y características de la capa de Aplicación:      Interfaz de usuario: La capa de Aplicación proporciona una interfaz de usuario a las aplicaciones y servicios de red. Esta es la capa con la que los usuarios interactúan directamente a través de programas y aplicaciones en sus dispositivos.        Protocolos de aplicación: Define protocolos de comunicación específicos utilizados por aplicaciones y servicios para intercambiar datos a través de la red. Ejemplos de protocolos de aplicación incluyen HTTP (para la web), SMTP (para el correo electrónico), FTP (para transferencia de archivos) y SNMP (para gestión de redes).        Acceso a servicios de red: Facilita el acceso a una amplia variedad de servicios de red, como el acceso a la World Wide Web, correo electrónico, transferencia de archivos, servicios de directorio, mensajería instantánea y mucho más. Cada uno de estos servicios tiene su propio conjunto de protocolos y aplicaciones específicas en esta capa.        Transferencia de datos: Permite que las aplicaciones transfieran datos a través de la red. Esto implica la segmentación de datos en paquetes, la adición de encabezados y la gestión de la transmisión y recepción de datos.        Seguridad y autenticación: La capa de Aplicación puede proporcionar servicios de seguridad, como autenticación y cifrado de datos, para proteger la confidencialidad y la integridad de la información transmitida.        Resolución de nombres de dominio (DNS): Facilita la resolución de nombres de dominio a direcciones IP, lo que permite a los usuarios acceder a recursos en la red utilizando nombres legibles en lugar de direcciones IP numéricas.        Gestión de sesiones: Algunas aplicaciones en esta capa pueden gestionar sesiones de usuario, lo que implica el inicio, la administración y el cierre adecuado de sesiones de comunicación entre aplicaciones.        Transferencia de archivos: Permite la transferencia de archivos entre dispositivos en la red utilizando protocolos como FTP (Protocolo de Transferencia de Archivos) o SCP (Protocolo de Copia Segura).        Correo electrónico: Facilita la comunicación a través de correo electrónico, incluyendo la creación, el envío y la recepción de mensajes.  En resumen, la capa de Aplicación es la capa más cercana al usuario y proporciona una amplia gama de servicios y aplicaciones que permiten la interacción y la comunicación en una red de computadoras. Cada aplicación y servicio en esta capa utiliza protocolos específicos para cumplir sus funciones, y esta capa actúa como un puente entre el usuario y las capas inferiores de la red que se ocupan de la transmisión y el enrutamiento de datos.Modelo TCP/IPEl modelo TCP/IP es una explicación de protocolos de red creado por Vinton Cerf y Robert E. Kahn, en la década de 1970. Fue implantado en la red ARPANET, la primera red de área amplia (WAN), desarrollada por encargo de DARPA, una agencia (Departamento de Defensa de los Estados Unidos) y predecesora de Internet; por esta razón, a veces también se le llama modelo DoD o modelo DARPA.El modelo TCP/IP es usado para comunicaciones en redes y, como todo protocolo, describe un conjunto de guías generales de operación para permitir que un equipo pueda comunicarse en una red. TCP/IP provee conectividad de extremo a extremo especificando cómo los datos deberían ser formateados, direccionados, transmitidos, enrutados y recibidos por el destinatario.El modelo TCP/IP y los protocolos relacionados son mantenidos por la Internet Engineering Task Force.Para conseguir un intercambio fiable de datos entre dos equipos, se deben llevar a cabo muchos procedimientos separados. El resultado es que el software de comunicaciones es complejo. Con un modelo en capas o niveles resulta más sencillo agrupar funciones relacionadas e implementar el software modular de comunicaciones.Las capas están jerarquizadas. Cada capa se construye sobre su predecesora. El número de capas y, en cada una de ellas, sus servicios y funciones son variables con cada tipo de red. Sin embargo, en cualquier red, la misión de cada capa es proveer servicios a las capas superiores haciéndoles transparentes el modo en que esos servicios se llevan a cabo. De esta manera, cada capa debe ocuparse exclusivamente de su nivel inmediatamente inferior, a quien solicita servicios, y del nivel inmediatamente superior, a quien devuelve resultados.En qué consisteTCP/IP es un conjunto de protocolos que permiten la comunicación entre los ordenadores pertenecientes a una red. La sigla TCP/IP significa Protocolo de control de transmisión/Protocolo de Internet. Proviene de los nombres de dos protocolos importantes incluidos en el conjunto TCP/IP, es decir, del protocolo TCP y del protocolo IP.Capas del modelo TCP/IPEl modelo incluye cuatro capas:Capa 1 o capa de acceso al medio.En la capa de enlace los protocolos solo actúan como máximo hasta la red local a la que está conectado un host cualquiera. Esto se denomina enlace si usamos el lenguaje propio de TCP/IP. Además esta capa se sitúa en la parte más baja de dicho modelo. Como dijimos esta capa tiene en cuenta todos los hosts accesibles en la red local o dicho de otra manera, todos los hosts que se pueden alcanzar sin tener que pasar por un enrutador. Este modelo está diseñado para que el tipo de hardware usado no importe haciendo que pueda implementarse sobre cualquier tecnología de la capa de enlace. De hecho incluye también capas de los posibles enlaces virtuales que puedan haber ya sea por redes privadas virtuales y túneles de redes.El uso que tiene la capa de enlace es permitir el paso de paquetes entre las interfaces de la capa de Internet de dos hosts diferentes en el mismo enlace. Los procesos de transmisión y recepción de paquetes en el enlace se pueden controlar en el controlador de dispositivo para la tarjeta de red, incluso en el firmware o haciendo uso de conjuntos de chips especializados.El modelo TCP/IP incluye especificaciones para traducir los métodos de direccionamiento de red utilizados en el Protocolo de Internet a direcciones de capa de enlace, como direcciones de control de acceso al medio (o direcciones MAC).Capa 2 o capa de internet.El proceso de enviar datos desde la red de origen a la red de destino mediante la interconexión de redes es lo que se conoce como enrutamiento y esto es compatible con el direccionamiento e identificación del host mediante el sistema de direccionamiento IP jerárquico. La capa de internet permite una instalación de transmisión de datagramas (así es como se llama a la PDU en la capa de Internet) no confiable entre hosts ubicados en redes IP considerablemente diferentes al reenviar datagramas a un enrutador distinto (produciéndose lo que se conoce como salto) apropiado para su posterior retransmisión a su destino. La capa de Internet es responsable de enviar paquetes de datos a través de múltiples redes. De esta manera, la capa de Internet hace posible la interconexión, el funcionamiento interno de diferentes redes IP y es como Internet se establece.La capa de Internet no distingue entre los distintos protocolos de la capa de transporte. IP transporta datos para que los protocolos de capas superiores se encarguen de tratarlos de la manera correcta, pues no entiende de otras capas.El Protocolo de Internet es el componente principal de la capa de Internet y define dos sistemas de direccionamiento para identificar los hosts de la red y ubicarlos en la red. El sistema de direcciones original de ARPANET y su sucesor, Internet, es el Protocolo de Internet versión 4 (IPv4) la cual utiliza una dirección IP de 32 bits y, por lo tanto, es capaz de identificar aproximadamente cuatro mil millones de hosts. Esta limitación fue eliminada en 1998 por la estandarización del Protocolo de Internet versión 6 (IPv6) que usa direcciones de 128 bits. Las implementaciones de producción de IPv6 surgieron aproximadamente en 2006.Capa 3 o capa de transporte.En la capa de transporte se establecen canales de datos básicos utilizadas para hacer posible el intercambio de datos. Además establece la conectividad de host a host en forma de servicios de transferencia de mensajes de extremo a extremo independientes de las redes subyacentes e independientes de la estructura de los datos del usuario y la logística del intercambio de información.La capa de transporte tiene 2 tipos de conexiones y son orientada a la conexión como es el TCP, o no orientado a la conexión como es el UDP. Los protocolos de esta capa pueden proporcionar control de errores, segmentación, control de flujo, control de congestión y direccionamiento de aplicaciones.Con el objetivo de proporcionar canales de transmisión específicos, la capa de transporte establece el concepto de puerto de red. Esto es una construcción lógica numerada y que es asignada de forma específica para cada uno de los canales de comunicación que necesita una determinada aplicación. Para muchos tipos de servicios, estos números de puerto se han estandarizado para que las computadoras cliente puedan abordar servicios específicos de una computadora servidor sin la participación de servicios de directorio o descubrimiento de servicios.TCP es un protocolo orientado a la conexión que aborda numerosos problemas de confiabilidad al proporcionar un flujo de bytes confiable:  Los datos llegan ordenados.  Los datos tienen la cantidad mínima de errores.  No llegan duplicados.  Se asegura que los paquetes llegan a su destino.  Incluye control de congestión de tráfico.  El Protocolo de datagramas de usuario (UDP) es un protocolo de datagramas no orientado a conexión. Al igual que IP, es un protocolo poco confiable. La confiabilidad se aborda mediante la detección de errores mediante un algoritmo de checksum. UDP se usa generalmente para aplicaciones como transmisión de medios (audio, video, voz sobre IP, etc.) donde la llegada a tiempo es más importante que la confiabilidad, o para aplicaciones simples de consulta / respuesta como búsquedas de DNS. El Protocolo de transporte en tiempo real (RTP) es un protocolo de datagramas que se utiliza sobre UDP y está diseñado para datos en tiempo real, como medios de transmisión.Capa 4 o capa de aplicación.La capa de aplicación incluye los protocolos utilizados por la mayoría de las aplicaciones para proporcionar servicios de usuario o intercambiar datos de aplicaciones a través de las conexiones de red establecidas por los protocolos de las capas inferiores. Esto puede incluir algunos servicios básicos de soporte de red, como protocolos de enrutamiento y configuración de host. Algunos ejemplos de lo que acabamos de comentar son el protocolo HTTP o Protocolo de Transferencia de Hipertexto, el protocolo FTP o Protocolo de Transferencia de Archivos, el protocolo SMTP o protocolo de Transferencia de Correo y el Protocolo DHCP o Protocolo de Configuración Dinámica de Host. Los datos codificados de acuerdo con los protocolos de la capa de aplicación se encapsulan en unidades de protocolo de la capa de transporte (como flujos TCP o datagramas UDP), que a su vez utilizan protocolos de capas inferiores para efectuar la transferencia de datos real.La capa de aplicación en el modelo TCP/IP corresponde a una combinación de la quinta (sesión), sexta (presentación) y séptima capa (aplicación) del modelo OSI.En la capa de aplicación, el modelo TCP/IP distingue entre protocolos de usuario y protocolos de soporte. Los protocolos de soporte brindan servicios a un sistema de infraestructura de red. Los protocolos de usuario se utilizan para aplicaciones de usuario reales. Por ejemplo, FTP es un protocolo de usuario y DNS es un protocolo de soporte.La capa de transporte y las capas de nivel inferior no se preocupan por los detalles de los protocolos de la capa de aplicación. Los enrutadores y conmutadores proporcionan un camino que los datos tomarán para llegar de un sistema final a otro sistema final (los extremos) y normalmente no examinan el tráfico encapsulado. Sin embargo, algunas aplicaciones de cortafuegos y de limitación del ancho de banda utilizan la inspección profunda de paquetes para interpretar los datos de la aplicación.Relación modelo OSI y TCP/IPVarios años después del modelo TCP/IP, el modelo OSI fue desarrollado por la Organización Internacional de Estandarización (ISO). La estructura es similar a la del modelo DoD, pero distribuida en siete capas en lugar de solo cuatro. Aunque el modelo del DoD había demostrado su idoneidad en la práctica, las grandes empresas informáticas consideraron la posibilidad de utilizar el modelo OSI para sus propios protocolos de transmisión. Desde 1988, incluso el gobierno de los Estados Unidos, incluido el Departamento de Defensa (DoD), ha apoyado el nuevo modelo. Así, el modelo OSI finalmente prevaleció. Sin embargo, el modelo del DoD se sigue utilizando a menudo para describir los procesos de comunicación en Internet. Para ello es necesario combinar algunas capas del modelo OSI:1​"
  },
  
  {
    "title": "Montaje del servicio WEB, MySQL y PHP",
    "url": "/rx/posts/servicio-web-mysql-php/",
    "categories": "Sistemas Microinformáticos y Redes, Servicios en red",
    "tags": "redes locales, teoría, smr",
    "date": "2023-09-25 11:00:00 +0000",
    





    
    "snippet": "Logo de ApacheIntroducciónUn servidor web es un componente fundamental de la infraestructura de Internet que desempeña un papel crucial en la entrega de contenido en línea. En esencia, un servidor ...",
    "content": "Logo de ApacheIntroducciónUn servidor web es un componente fundamental de la infraestructura de Internet que desempeña un papel crucial en la entrega de contenido en línea. En esencia, un servidor web es un software o hardware que almacena, gestiona y distribuye páginas web, archivos, imágenes y otros recursos a través de Internet. Está diseñado para recibir solicitudes de clientes web, como navegadores de Internet, y responder a esas solicitudes enviando los archivos correspondientes para que los usuarios puedan ver y interactuar con ellos en sus dispositivos.Instalación del servicio web en Ubuntu Server 22.04 LTSCosas necesarias previas a la instalación  Configuración de MV servidor en red nat  MV cliente Xubuntu en la misma red nat  Configuración red nat 192.168.100.0/24Con permisos de root ejecutamos el comando:sudo apt-get install apache2Comprobamos que el servicio está activo en su puerto 80:netstat -putonaOtra opción para comprobar que el servicio está activo:sudo /etc/init.d/apache2 statusInformación de Apache2La ubicación de nuestros archivos escd /var/www/html/Podemos realizar pruebas en nuestro navegador de Host y poner en la dirección localhostUna página de ejemplo podría ser:&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;    &lt;title&gt;Mi Página Web de Ejemplo&lt;/title&gt;&lt;/head&gt;&lt;body&gt;    &lt;header&gt;        &lt;h1&gt;Bienvenido a Mi Página Web de Ejemplo&lt;/h1&gt;        &lt;nav&gt;            &lt;ul&gt;                &lt;li&gt;&lt;a href=\"#\"&gt;Inicio&lt;/a&gt;&lt;/li&gt;                &lt;li&gt;&lt;a href=\"#\"&gt;Acerca de&lt;/a&gt;&lt;/li&gt;                &lt;li&gt;&lt;a href=\"#\"&gt;Servicios&lt;/a&gt;&lt;/li&gt;                &lt;li&gt;&lt;a href=\"#\"&gt;Contacto&lt;/a&gt;&lt;/li&gt;            &lt;/ul&gt;        &lt;/nav&gt;    &lt;/header&gt;    &lt;main&gt;        &lt;section&gt;            &lt;h2&gt;Acerca de Nosotros&lt;/h2&gt;            &lt;p&gt;Somos una empresa ficticia dedicada a brindar soluciones imaginarias.&lt;/p&gt;        &lt;/section&gt;        &lt;section&gt;            &lt;h2&gt;Nuestros Servicios&lt;/h2&gt;            &lt;ul&gt;                &lt;li&gt;Servicio 1&lt;/li&gt;                &lt;li&gt;Servicio 2&lt;/li&gt;                &lt;li&gt;Servicio 3&lt;/li&gt;            &lt;/ul&gt;        &lt;/section&gt;    &lt;/main&gt;    &lt;footer&gt;        &lt;p&gt;Derechos de autor &amp;copy; 2023 Mi Página Web de Ejemplo&lt;/p&gt;    &lt;/footer&gt;&lt;/body&gt;&lt;/html&gt;Logs de Apache2sudo tail -f /var/log/apache2/access.logsudo tail -f /var/log/apache2/error.logsudo tail -n 100 /var/log/apache2/access.logArchivos de configuración de Apache2# This is the main Apache server configuration file.sudo vim /etc/apache2/apache2.conf# If you just change the port or add more ports heresudo vim /etc/apache2/port.conf# Default Apache virtualhostsudo vim /etc/apache2/site-available/default.confY para validar la configuración de Apache2sudo apache2ctl configtestExtrasCambia el puerto 80 al 8080Investiga para que sirve el archivo default.confInstalación del servicio MySQL en Ubuntu Server 22.04 LTSDiferencia entre MariaDB y MySqlMariaDB y MySQL son dos sistemas de gestión de bases de datos relacionales (RDBMS) que comparten una historia y un propósito comunes, pero también tienen algunas diferencias clave:Origen:MySQL: MySQL es un sistema de gestión de bases de datos relacionales de código abierto que se originó en 1995. Fue desarrollado por una empresa sueca llamada MySQL AB y posteriormente adquirido por Sun Microsystems y luego por Oracle Corporation en 2010.MariaDB: MariaDB es una bifurcación (fork) de MySQL que se creó en 2009. Fue desarrollado por Michael “Monty” Widenius, el cofundador de MySQL, como una respuesta a preocupaciones sobre el futuro de MySQL bajo la propiedad de Oracle.Licencia:MySQL: MySQL utiliza la licencia dual, lo que significa que ofrece una versión de código abierto bajo la Licencia Pública General de GNU (GPL) y una versión comercial con licencia propietaria.MariaDB: MariaDB utiliza la Licencia Pública General de GNU (GPL) en su versión de código abierto y no ofrece una versión comercial propietaria.Compatibilidad:MariaDB se ha esforzado por mantener la compatibilidad con MySQL en la mayoría de los casos. La mayoría de las aplicaciones y consultas escritas para MySQL también funcionarán en MariaDB sin cambios significativos.Sin embargo, MariaDB ha agregado algunas características y optimizaciones que no están presentes en las versiones de MySQL más antiguas. Además, puede haber diferencias en las características específicas de la versión entre MySQL y MariaDB.Almacenamiento y motores de almacenamiento:Ambos sistemas admiten una variedad de motores de almacenamiento, pero MariaDB ha introducido su propio motor de almacenamiento llamado Aria, que se utiliza como reemplazo de MyISAM.MariaDB también ha mejorado el motor InnoDB en comparación con las versiones más antiguas de MySQL.Rendimiento y características:MariaDB ha trabajado en mejoras de rendimiento y en la incorporación de nuevas características en comparación con MySQL.MariaDB incluye capacidades de replicación y clustering mejoradas y ha desarrollado características específicas de almacenamiento en caché y optimización.En general, la elección entre MariaDB y MySQL dependerá de sus necesidades específicas y preferencias. Ambos sistemas son robustos y ampliamente utilizados en la comunidad de desarrollo de software, y su elección puede basarse en factores como la compatibilidad con aplicaciones existentes, la filosofía de licencia y las características específicas que requiera para su proyecto.Instalación de mariaDBInstalamos el servicio de bases de datos:sudo apt-get install mariadb-serverComprobamos:sudo netstat -putonaComprobamos:sudo /etc/init.d/mariadb statusConfiguramos el servicio:sudo mariadb-secure-installationEntramos en mariadb:mysql -u root -pMostramos las bases de datos:show databases;Creamos una base de datos:create database ejemplo;La selecionamos:use ejemplo;Creamos un tabla:CREATE TABLE mitabla(         id MEDIUMINT NOT NULL AUTO_INCREMENT,         nombre CHAR(30) NOT NULL,         edad INTEGER(30),         salario INTEGER(30),         PRIMARY KEY (id) );Añadimos información a nuestra tabla:INSERT INTO mitabla (nombre, edad, salario) VALUES        (\"Pedro\", 24, 21000),        (\"Maria\", 26, 24000),        (\"Juan\", 28, 25000),        (\"Luis\", 35, 28000),        (\"Monica\", 42, 30000),        (\"Rosa\", 43, 25000),        (\"Susana\", 45, 39000);Mostramos la información introducida:select * from mitabla;Para salir de mariadb:exitInstalación de PHP y demás librería para poder trabajar con MariaDBPHP8.1Instalamos PHP 8.1:sudo apt-get install php8.1Comprobamos que la instalación ha sido correcta:sudo vi /var/www/html/index.phpCon el siguiente contenido:&lt;?phpphpinfo();?&gt;Información de PHPAhora vamos a instalar las librería necesaria para conectar PHP con MariaDB:sudo apt-get install php8.1-mysqlComprobamos nuevamente que la instalación ha sido correcta:sudo vi /var/www/html/conexionmysql.phpCon el siguiente contenido (hay que realizar los cambios pertinentes para nuestra configuración):&lt;?php// Conectando, seleccionando la base de datos$link = mysqli_connect('local_computer', 'mysql_user', 'mysql_pass')    or die('No se pudo conectar: ' . mysqli_error());echo 'Connected successfully';mysqli_select_db($link, 'database') or die('No se pudo seleccionar la base de datos');// Realizar una consulta MySQL$query = 'SELECT * FROM table';$result = mysqli_query($link, $query) or die('Consulta fallida: ' . mysql_error());// Imprimir los resultados en HTMLecho \"&lt;table&gt;\\n\";while ($line = mysqli_fetch_array($result)) {        echo \"\\t&lt;tr&gt;\\n\";    foreach ($line as $col_value) {        echo \"\\t\\t&lt;td&gt;$col_value&lt;/td&gt;\\n\";    }    echo \"\\t&lt;/tr&gt;\\n\";}echo \"&lt;/table&gt;\\n\";// Liberar resultadosmysqli_free_result($result);// Cerrar la conexiónmysqli_close($link);?&gt;Conexión de PHP a MariaDBExtras  Configuración de HTTPSConfiguración de HTTPS      Redirección de HTTP a HTTPSRedirección de HTTP a HTTPS        Utilización y configuración de VirtualHost.Utilización y configuración de VirtualHost    Configuración del fichero host en el Windows anfitrión.Configuración del fichero host en el Windows anfitrión"
  },
  
  {
    "title": "Montaje del servicio DHCP",
    "url": "/rx/posts/servicio-dhcp/",
    "categories": "Sistemas Microinformáticos y Redes, Servicios en red",
    "tags": "redes locales, teoría, smr",
    "date": "2023-09-25 11:00:00 +0000",
    





    
    "snippet": "IntroducciónEl protocolo DHCP es uno de los más utilizados por los routers, tanto domésticos como también profesionales. De manera predeterminada cualquier cliente cableado o WiFi está configurado ...",
    "content": "IntroducciónEl protocolo DHCP es uno de los más utilizados por los routers, tanto domésticos como también profesionales. De manera predeterminada cualquier cliente cableado o WiFi está configurado para obtener una dirección IP por DHCP. Aunque continuamente se está utilizando el DHCP, ¿sabes para qué sirve?Por más que este protocolo sea tan utilizado, lo cierto es que seguramente no conozcas para qué sirve exactamente. Además de esto, no todo el mundo conoce cada una de sus funcionalidades y también cómo funciona. Entre otros aspectos, también puedes encontrar qué mensajes se intercambian entre el servidor y los clientes. Por eso mismo, en RedesZone puedes encontrar todo lo que debes saber sobre el protocolo DHCP.¿Qué es y para qué sirve este protocolo?El protocolo DHCP (Protocolo de configuración dinámica de host) o también conocido como «Dynamic Host Configuration Protocol«, es un protocolo de red que utiliza una arquitectura cliente-servidor. Por tanto, tendremos uno o varios servidores DHCP y también uno o varios clientes, que se deberán comunicar entre ellos correctamente para que el servidor DHCP brinde información a los diferentes clientes conectados.Este protocolo se encarga de asignar de manera dinámica y automática una dirección IP, ya sea una dirección IP privada desde el router hacia los equipos de la red local, o también una IP pública por parte de un operador que utilice este tipo de protocolo para el establecimiento de la conexión.Cuando tenemos un servidor DHCP en funcionamiento, todas las direcciones IP que ha proporcionado a diferentes clientes se guardan en un listado donde se relaciona la IP que se le ha proporcionado (dirección lógica) y la dirección MAC (dirección física de la tarjeta de red). Gracias a este listado, el servidor DHCP se asegura de no proporcionar a dos equipos diferentes la misma dirección IP, lo que ocasiona un caos en la red local.A medida que el servidor va asignando direcciones IP, también tiene en cuenta cuándo pasa un determinado tiempo y caducan, quedando libres para que otro cliente pueda obtener esta misma dirección IP. El servidor DHCP sabrá en todo momento quién ha estado en posesión de una dirección IP, cuánto tiempo ha estado, y cuándo se ha asignado a otro cliente.El protocolo DHCP incluye varias formas de asignación de direcciones IP, dependiendo de la configuración que realicemos y el escenario, podremos usar una forma de asignación u otra:  Manual o estática: el servidor DHCP nos permitirá configurar un listado de parejas IP-MAC con el objetivo de que siempre se le proporcione a un cliente una determinada dirección IP, y que esta dirección no cambie nunca.  Automática: el servidor DHCP se encarga de proporcionar una dirección IP al cliente que realiza la solicitud, y estará disponible para este cliente hasta que la libere. Existen routers que internamente están configurados para proporcionar direcciones IP privadas de forma secuencial, sin embargo, hay firmwares que están diseñados para proporcionar una dirección IP específica dentro del rango y que no es secuencial, en base a un algoritmo interno y la dirección MAC que se haya conectado.      Dinámica: este método permite reutilización dinámica de las direcciones IP.Aunque el protocolo DHCP es muy conocido por proporcionar la dirección IP, máscara de subred y la puerta de enlace, tres parámetros básicos y fundamentales, también es capaz de proporcionar otra información de cara a los clientes, como los siguientes parámetros que son configurables y opcionales:    Servidor DNS primario y secundario.  Nombre DNS.  MTU para la interfaz.  Servidor y dominio NIS.  Servidores NTP.  Servidor de nombre WINS para Windows.  Otras opciones avanzadas.Un aspecto muy importante es que, si un sistema Windows no es capaz de obtener una dirección IP a través del cliente DHCP en una red, se inicia un proceso llamado APIPA (Automatic Private Internet Protocol Addressing). Este proceso APIPA que usan los sistemas operativos cuando no se puede obtener una dirección IP por DHCP, este protocolo se encarga de asignar una dirección IP privada de clase B en el rango 169.254.0.0/16 con su correspondiente máscara de subred 255.255.0.0.Este bloque de direccionamiento se conoce como «link–local» para redes IPv4. Aunque los sistemas operativos se autoconfigure esta dirección IP privada, cada 5 minutos volverán a consultar si hay un servidor DHCP en la red para que les proporcione una dirección IP privada de clase A, B o C habitual. Cuando no funciona el servidor DHCP o no lo tenemos configurado, podéis comprobar la dirección IP que se configura automáticamente si consultamos la IP privada que tenemos en nuestro equipo.Una vez que ya conocemos qué es el protocolo DHCP y sus principales características, vamos a ver su funcionamiento y qué mensajes se intercambian.Funcionamiento y mensajes de intercambioLa comunicación entre el servidor DHCP y los clientes DHCP que tengamos conectados en la red se realiza a través del protocolo UDP, un protocolo que ya conocemos de otros artículos y que es un protocolo no orientado a conexión. En el caso del servidor DHCP usamos el protocolo UDP puerto 67, en el caso de los clientes usamos el protocolo UDP en el puerto 68. Si tenemos un firewall bloqueando estos puertos, ya sea en el servidor o en el cliente, deberemos revisarlo y añadir una regla de aceptar para origen y/o destino estos puertos, de lo contrario el servicio no funcionará, y no podremos obtener las direcciones IP automáticamente.Funcionamiento y mensajes de intercambioCuando conectamos un equipo por primera vez a la red no tiene direccionamiento IP, por tanto, deberemos «buscar» el servidor DHCP por toda la red, ya que tampoco tenemos información sobre el protocolo ARP en un primer momento. Por este motivo, lo primero que hará el cliente es enviar un DHCP DISCOVERY con dirección IP de origen 0.0.0.0 y dirección IP de destino 255.255.255.255 que es la IP de broadcast global. Por supuesto, se envía un datagrama UDP, con puerto de origen el 68 (cliente) y puerto de destino el 67 (servidor). Esta comunicación es de tipo broadcast en la red, e internamente se puede configurar para recibir el OFFER por broadcast o unicast, aunque generalmente es de tipo unicast en el OFFER.Si existe un servidor y está funcionando correctamente, le enviará una respuesta llamada DHCP OFFER. Este es el datagrama de respuesta del servidor al cliente ante la petición de obtener parámetros por el protocolo. En este caso la dirección IP de origen será la del propio servidor, que generalmente también actúa de router, la IP de destino será la 255.255.255.255 también, el puerto de origen el 67 y el puerto de destino el 68. En este paquete tendremos la dirección IP privada que se le puede proporcionar y se involucra a la dirección MAC del equipo. Esta comunicación es de tipo unicast generalmente, aunque de forma opcional puede ser broadcast.Una vez que el cliente recibe el OFFER, le enviará un DHCP REQUEST de vuelta. En este caso el cliente selecciona la configuración recibida por el OFFER y una vez más el cliente solicita la IP que indicó el servidor anteriormente. Esta comunicación también es broadcast, porque todavía no tiene una dirección IP privada válida.Por último, el servidor le enviará un DHCP ACK al cliente, diciéndole que lo ha recibido correctamente e incluye toda la información que hayamos configurado en el servidor, como la duración de la conexión, información sobre los servidores DNS y más. Con este último proceso se completan todos los pasos del proceso, el protocolo también esperará un cierto tiempo hasta que el cliente DHCP configure su interfaz correctamente con los parámetros negociados. Una vez que el cliente obtiene la dirección IP, el cliente empezará a recibir información del protocolo ARP con todos los equipos que hay en la red local, con el objetivo de prevenir posibles conflictos de direcciones IP o superposición de grupos de direcciones de servidores DHCP. En caso de encontrar algún problema, el cliente enviará al servidor un mensaje DHCPDECLINE indicando que la dirección ya está en uso.Una vez que hemos visto cómo funciona el protocolo DHCP, vamos a explicar qué ataques existen y cómo evitarlos.¿Implementación del DHCP?Cuando vemos que una empresa u organización necesita un DHCP, es necesario iniciar un proceso de implementación. Este nos ayudará con la planificación y evaluación de las necesidades que tiene la red, y las que tenemos como usuarios del mismo. Lo primero que se debe tener en cuenta es el servidor en el cual se va a realizar la instalación del DHCP, siendo el responsable de asignar las direcciones IP a todos los clientes. Por lo general, es recomendable instalar el servicio DHCP en servidores dedicados, a pesar de que también se puede hacer en un servidor de archivos o de aplicaciones.Una vez hemos elegido el servidor, es necesario realizar la configuración adecuada al servicio DHCP. Entre los parámetros a configurar se incluyen los tiempos de asignación de las direcciones, así como las puertas de enlace, direcciones del servidor DNS y la dirección del servidor WINS. También cabe la posibilidad de configurar otras opciones, las cuales dependen del servicio al que elegimos darle uso. Como las direcciones de servicios de impresión o nombres de dominio. Una vez realizada toda la configuración y creado el rango de direcciones IP, se debe implementar el servidor en la red. Esto es algo que puede requerir una configuración específica para routers y switches, de forma que permitan que los clientes tengan comunicación con el servidor DHCP y obtengan así una dirección IP válida.Después de todo esto, lo más recomendable es contar con un plan de mantenimiento para los servidores DHCP. Esto incluye la supervisión de los registros del servidor, que nos ayudarán a detectar posibles problemas o errores. También serán necesarias las actualizaciones periódicas para la configuración, y para la implementación de medidas de seguridad que nos mantengan protegidos en todo momento contra posibles ataques contra nuestro sistema.En resumen, implementar un DHCP implica disponer de una planificación cuidadosa. La configuración de todos los parámetros, es algo que nos va a ayudar a que la red sea mucho más eficiente, pero para ello debe ser la adecuada para cada caso. Lo más recomendable, es realizar una documentación adecuada para cada uno de los casos donde se implemente el servidor DHCP. De forma que, si tenemos algún problema, no tengamos que pensar en donde puede estar el origen del mismo.Ataques que existen al DHCPEl protocolo DHCP no utiliza ningún tipo de autenticación, por este motivo es muy vulnerable a ataques y existen diferentes tipos de ataques que vamos a poder realizar.Un ataque muy común es configurar un servidor DHCP no autorizado para proporcionar información «falsa» o «maliciosa» a los clientes. Cuando conectamos un servidor DHCP ilegítimo en una red local que ya tiene un servidor DHCP legítimo, los clientes obtendrán la dirección IP, DNS y demás información al primero que responda. Por este motivo, un usuario malintencionado podría levantar un «Rogue DHCP Server» en la red, para hacerse con el control de las direcciones de varios clientes. Cuando un ciberdelincuente instala un Rogue DHCP, lo hace por varios motivos:Realizar un ataque de denegación de servicio a la red: si el cliente o los clientes obtienen este direccionamiento, puede «cortar» la conexión a Internet. De esta forma, los clientes no tendrán acceso a Internet ni tampoco a la red local.Ataque Man in the Middle: al tener el control total sobre el direccionamiento y los servidores DNS, ni siquiera es necesario hacer un ataque ARP Spoofing porque tendremos el control total de toda la red, y podremos reenviar a los clientes a webs maliciosas modificando los servidores DNS de nuestro propio servidor DHCP que acabamos de instalar. Un servidor DHCP ilegítimo puede proporcionar información falsa de servidores DNS a los diferentes clientes. Por supuesto, no solamente accederán a las webs maliciosas, sino que también podrá espiar fácilmente las conexiones porque nosotros seremos el gateway.Para mitigar este ataque, se debe garantizar que no haya ningún Rogue DHCP en nuestra red local, y ahí entra en juego el «DHCP Snooping» que incorporan los switches. Esta tecnología permite bloquear los mensajes DHCP Offer y DHCP Ack de los puertos donde no esté permitido, es decir, donde no esté el servidor legítimo. De esta forma, aunque al servidor DHCP falso le lleguen los mensajes, nunca podrá contestar y los clientes de la red local permanecerán a salvo. En el siguiente esquema se puede ver cómo funciona el DHCP Snooping:DHCP Snooping enableOtro ataque muy común a los servidores DHCP, debido a que no tenemos ningún tipo de mecanismo de autenticación de los clientes, es el de realizar decenas de peticiones de direcciones IP, con el objetivo de agotar el almacenamiento de direcciones IP del servidor, al presentar nuevos identificadores de cliente cada vez que se realiza una petición. Esto haría que el servidor «colapse» y no pueda proporcionar más direccionamiento. Existen algunos mecanismos de mitigación, sobre todo a nivel de operadores de Internet que hacen uso de DHCP, como la RFC3046 usando etiquetas la cual se usa como un token de autorización, también tenemos la RFC3118 que es para autenticar los mensajes pero que no se ha usado ampliamente. Con el lanzamiento del protocolo 802.1X para autenticar a los clientes cableados, se dejó en un segundo plano estos RFC.Sea cual sea el ataque, quién lo ocasione debe tener acceso a la red para que este pueda abusar de este protocolo. Por eso es recomendable tomar ciertas medidas de seguridad que nos permita llevarlo a cabo con garantías. De cara a la red local lo más importante es tener bien configurado el DHCP Snooping para evitar los Rogue DHCP, de esta forma, estaremos protegidos.Seguridad con DHCP SnoopingDHCP Snooping es una función de seguridad que trabaja en el segundo nivel del modelo OSI. Esta se encuentra integrada en el dispositivo el cual conecta los clientes con el servidor. Su trabajo será verificar toda la información que pasa a través del conmutador, de forma que solo los paquetes que él apruebe y provengan de un servidor de confianza, se enviarán a los clientes.Para tener garantías de que solo los servidores correctos puedan interferir en la información que recibimos o enviamos, el DHCP Snooping utiliza varios pasos. Lo primero que tendremos que hacer es especificar un puerto seguro para nuestros dispositivos, y todo lo que entre por otro puerto que no sea el asignado, se considerará inseguro. Por lo cual, este bloqueará el envío y el cliente no recibirá nunca esa información.Este tipo de protección y solo en algunos dispositivos, puede ayudarnos generando un informe de defensa que luego se pueden analizar. Nos distinguirá diferentes errores. Primero tendremos la discrepancia entre la dirección MAC y la información que se encuentre almacenada en la base de datos. Y, por otro lado, nos informará de todos los paquetes que fueron enviados desde un puerto no seguro. Esto puede estar más orientado a un nivel profesional, pero las funcionan se pueden usar en un entorno más privado como una casa.Debemos tener en cuenta, que de todos los errores que nos podamos encontrar, muchos pueden deberse a ciertas circunstancias de la red que generan errores por mala configuración, estos no suelen ser motivo de mucha preocupación más allá de configurarlo todo correctamente. Por otro lado, si existen errores que pueden significar que se está intentando ejecutar alguna acción que puede ser de dudosa legalidad, como, por ejemplo, alguien que esté intentando entrar en nuestra red de forma deliberada.Tal y como habéis visto, el protocolo DHCP es ampliamente utilizado por todos nosotros para obtener el direccionamiento IP y otra información necesaria para el buen funcionamiento de la red local, además, no debemos olvidar los ataques y cómo podemos protegernos de ellos, finalmente, recordad que tenemos la funcionalidad de Static DHCP para que el servidor siempre nos proporcione la misma dirección IP.Instalación del servicio en Ubuntu Server 22.04 LTSCosas necesarias previas a la instalación  Configuración de MV servidor en red nat  MV cliente Xubuntu en la misma red nat (Configuración interna seleccionada DHCP)  Configuración red nat 192.168.100.0/24Con permisos de root ejecutamos el comando:sudo apt-get install isc-dhcp-serverComprobamos que el servicio está activo en su puerto 67:netstat -putonaTras completar la instalación del servidor vamos a definir la interfaz de red sobre la que funcionará el servidor DHCP. Para este laboratorio de ejemplo será enp0s3, por lo que declaramos esta interfaz de IPv4:sudo vi /etc/default/isc-dhcp-serverINTERFACESV4=\"enp0s3\"INTERFACESV6=\"\"Lo siguiente es configurar nuestro DHCP, para ello vamos a /etc/dhcp y editamos el fichero dhcpd.confsudo vi /etc/dhcp/dhcpd.conf#Declaramos la dirección de red y la máscara de nuestro DHCPsubnet 192.168.100.0 netmask 255.255.255.0 {  #Definimos el rango de direcciones que va a dar nuestro DHCP  range 192.168.100.100 192.168.100.110;  #Definimos los servidores DNS's  option domain-name-servers 8.8.8.8, 8.8.4.4;  #Definimos la máscara de red  option subnet-mask 255.255.255.0;  #Definimos la dirección de la puerta de enlace  option routers 192.168.100.1;  #Definimos la dirección de broadcast  option broadcast-address 192.168.100.255;  #Tiempo por defecto en que la concesión de la IP es valida.  default-lease-time 600;  #Tiempo máximo que se permite asignar a una concesión de dirección IP.  max-lease-time 7200;  }Podemos comprobar la sintaxis con:dhcpd -t -cf /etc/dhcp/dhcpd.confDe ser errónea nos mostrara el punto donde se encontró el error, este sería el output que se recibe si no hay fallos de sintaxis:Tras esta configuración solo queda reiniciar el servidor y comprobar que se encuentra en buen estado:service isc-dhcp-server restartservice isc-dhcp.server statusComprobación con VM cliente XubuntuEn una máquina cliente Xubuntu vamos a las propiedades de red IPv4 y marcamos la opción para que asigne los parámetros de red automáticamente, tras eso podemos hacer un ip a para verificar que nos ha dado una IP del rango que hemos definido en la configuración del DHCP.ip aExtrasPara ver la lista de hosts conectados al servidor dhcp podemos ejecutar:watch dhcp-lease-listDentro del archivo de configuración del DHCPsudo vi dhcpd.confhost WinClient1{  #Dirección MAC del equipo  hardware ethernet 00:11:22:33:44:99;  #Dirección IP fija   fixed-address 192.168.100.240;}host WinClient1{  #Dirección MAC del equipo  hardware ethernet 00:11:22:33:44:99;  #Denegación de darle una IP  deny booting;}#Declaramos la dirección de red y la máscara de nuestro DHCPsubnet 192.168.100.0 netmask 255.255.255.0 {  #Definimos el rango de direcciones que va a dar nuestro DHCP  range 192.168.100.100 192.168.100.110;  #Definimos los servidores DNS's  option domain-name-servers 8.8.8.8, 8.8.4.4;  #Definimos la máscara de red  option subnet-mask 255.255.255.0;  #Definimos la dirección de la puerta de enlace  option routers 192.168.100.1;  #Definimos la dirección de broadcast  option broadcast-address 192.168.100.255;  #Tiempo por defecto en que la concesión de la IP es valida.  default-lease-time 600;  #Tiempo máximo que se permite asignar a una concesión de dirección IP.  max-lease-time 7200;  group{    host WinClient1{      #Dirección MAC del equipo      hardware ethernet 33:44:88:00:11:22;      #Dirección IP fija       fixed-address 192.168.100.240;    }    host WinClient2{      #Dirección MAC del equipo      hardware ethernet 00:11:22:33:44:99;      #Denegación de darle una IP      deny booting;    }  }  }Instalación del servicio en Windows Server 2012 R2Estando en panel principal del servidor nos dirigimos a administrar -&gt; Agregar roles y característicasCaptura 1 instalación DHCP en WindowsEn el asistente para agregar roles y características le damos a siguiente (es una buena opción darle a la opción de omitir… para que no vuelva a salir la primera pantalla) Captura 2 instalación DHCP en WindowsSeleccionamos instalación basada en características o en rolesCaptura 3 instalación DHCP en WindowsConfiguración por omisión y siguienteCaptura 4 instalación DHCP en WindowsSeleccionamos servidor DHCPCaptura 5 instalación DHCP en WindowsSeleccionamos agregar carcaterísticaCaptura 6 instalación DHCP en WindowsSeleccionamos siguienteCaptura 7 instalación DHCP en WindowsConfiguración por omisión y siguienteCaptura 8 instalación DHCP en WindowsSeleccionamos siguienteCaptura 9 instalación DHCP en WindowsSeleccionamos instalarCaptura 10 instalación DHCP en WindowsEsperamos durante la instalación…Captura 11 instalación DHCP en WindowsUna vez terminamos de instalar DHCP vamos a configurar el servicio en Herramientas -&gt; DHCPCaptura 12 instalación DHCP en WindowsCon el botón derecho del ratón presionamos sobre IPv4 y ámbito nuevoCaptura 13 instalación DHCP en WindowsRellenamos Nombre y DescripciónCaptura 14 instalación DHCP en WindowsSeleccionamos el rango de Ip’s y máscaraCaptura 15 instalación DHCP en WindowsEn esta venta configuramos si queremos excluir alguna o algunas IP’sCaptura 16 instalación DHCP en WindowsTiempo de duración máxima que se asigna una Ip a un dispositivoCaptura 17 instalación DHCP en WindowsContinuamos con las algunas configuraciones extrasCaptura 18 instalación DHCP en WindowsIntroducimos la Puerta de enlaceCaptura 19 instalación DHCP en WindowsConfiguración por omisión y siguienteCaptura 20 instalación DHCP en WindowsIntroducimos Servidores WINSCaptura 21 instalación DHCP en WindowsActivamos el servicio…Captura 22 instalación DHCP en WindowsComprobamos que el servicio a dado la IP 100 a nuestro cliente XubuntuCaptura 23 instalación DHCP en Windows  Información de la configuración en el server Ubuntu  Qué es el DHCP, funcionamiento y ejemplos de configuración"
  },
  
  {
    "title": "Clasificación de las redes",
    "url": "/rx/posts/Clasificaci%C3%B3n-redes/",
    "categories": "Sistemas Microinformáticos y Redes, Redes Locales",
    "tags": "redes locales, teoría, smr",
    "date": "2023-09-25 11:00:00 +0000",
    





    
    "snippet": "Introducción:Las infraestructuras de red pueden variar en gran medida en términos de:  El tamaño del área que abarcan.  La cantidad de usuarios conectados.  La cantidad y los tipos de servicios dis...",
    "content": "Introducción:Las infraestructuras de red pueden variar en gran medida en términos de:  El tamaño del área que abarcan.  La cantidad de usuarios conectados.  La cantidad y los tipos de servicios disponibles.  El área de responsabilidad.Los dos tipos más comunes de infraestructuras de red son las redes de área local (LAN) y las redes de área amplia (WAN). Una LAN es una infraestructura de red que proporciona acceso a usuarios y dispositivos finales en un área geográfica pequeña. Normalmente, una LAN se utiliza en un departamento dentro de una empresa, un hogar o una red de pequeñas empresas. Una WAN es una infraestructura de red que proporciona acceso a otras redes en un área geográfica amplia, que generalmente es propiedad y está administrada por una corporación más grande o un proveedor de servicios de telecomunicaciones.LANUna red LAN, o Red de Área Local, es un conjunto de dispositivos de comunicación interconectados dentro de un área geográfica limitada, como un edificio, una escuela, una empresa u otro espacio relativamente pequeño. Estas redes están diseñadas para permitir que los dispositivos, como ordenadores, impresoras, teléfonos y otros dispositivos electrónicos, se comuniquen y compartan recursos de manera eficiente y rápida.1. Propósito de una LAN:      Compartir recursos: Las LAN permiten compartir recursos como impresoras, archivos, conexiones a internet y dispositivos de almacenamiento entre varios dispositivos conectados a la red. Esto reduce la duplicación de recursos y facilita el acceso a los mismos.        Comunicación: Las LAN permiten la comunicación instantánea entre dispositivos conectados. Esto es crucial en un entorno empresarial para el intercambio de información y la colaboración entre empleados.        Acceso a internet: Las LAN suelen proporcionar acceso compartido a internet para todos los dispositivos conectados, lo que permite a los usuarios acceder a recursos en línea y servicios basados en la web.        Centralización de servicios: Algunas LAN también pueden centralizar servicios como autenticación, seguridad y almacenamiento de datos, lo que facilita la gestión de la red y la aplicación de políticas de seguridad.  2. Componentes de una LAN:      Dispositivos finales: Estos son los dispositivos que se conectan a la red, como ordenadores, portátiles, tablets, teléfonos, impresoras y otros dispositivos electrónicos.        Dispositivos de red: Estos incluyen routers, switches y puntos de acceso inalámbrico (APs). Los enrutadores conectan la LAN a otras redes, como internet. Los switches se utilizan para conectar los dispositivos finales entre sí en la LAN, mientras que los APs permiten conexiones inalámbricas.        Medios de transmisión: Los medios de transmisión son los cables o conexiones inalámbricas que permiten la comunicación entre dispositivos. Los cables Ethernet son comunes en las LAN con cable, mientras que las LAN inalámbricas utilizan ondas de radio para la comunicación.  3. Topologías de LAN:Las redes LAN pueden tener diferentes topologías, que se refieren a la forma en que los dispositivos están conectados físicamente. Algunas topologías comunes incluyen:      Estrella: Todos los dispositivos están conectados a un centro, como un conmutador o un enrutador. Si un dispositivo necesita comunicarse con otro, la información pasa a través del centro.        Bus: Todos los dispositivos están conectados a un solo cable, llamado bus. La información se envía a través del bus y todos los dispositivos pueden escucharla, pero solo el destinatario adecuado la procesa.        Anillo: Los dispositivos están conectados en un círculo cerrado, donde la información circula en una dirección constante. Cada dispositivo recibe y retransmite la información.  4. Protocolos y estándares:  Las LAN utilizan protocolos y estándares para garantizar que los dispositivos puedan comunicarse entre sí. Algunos ejemplos de protocolos comunes en una LAN incluyen TCP/IP (para la comunicación en internet), Ethernet (para la transmisión de datos en redes con cable) y Wi-Fi (para redes inalámbricas).5. Seguridad y administración:  La seguridad es un aspecto crítico en la gestión de una LAN. Se utilizan medidas como cortafuegos, sistemas de detección de intrusiones, autenticación de usuarios y cifrado de datos para proteger la red contra amenazas externas e internas. La administración de la LAN implica la configuración, el monitoreo y el mantenimiento de los dispositivos y recursos para garantizar un funcionamiento óptimo.En resumen, una red LAN es un componente fundamental en entornos empresariales y domésticos para facilitar la comunicación y el intercambio de recursos entre dispositivos dentro de un área geográfica limitada. Proporciona la base para la conectividad de dispositivos y el acceso a servicios en línea, y su diseño y gestión son esenciales para garantizar un funcionamiento eficiente y seguro.MANUna red MAN (Metropolitan Area Network, por sus siglas en inglés) es un tipo de red de comunicación que abarca un área geográfica metropolitana o una ciudad. Es una red intermedia entre las redes de área local (LAN) que cubren áreas pequeñas, como edificios o campus, y las redes de área amplia (WAN) que abarcan áreas geográficas extensas, como regiones, países o continentes.1. Propósito y Alcance de una MAN:      Cobertura Metropolitana: La principal característica de una MAN es que abarca una zona geográfica más grande que una LAN pero más pequeña que una WAN. Esta área suele ser una ciudad o una región metropolitana.        Conexión de Áreas Urbanas: Las MAN se utilizan para interconectar diferentes ubicaciones dentro de una ciudad o una región metropolitana. Esto permite la comunicación y el intercambio de datos entre sitios que pueden estar a varios kilómetros de distancia.        Soporte de Aplicaciones Urbanas: Las MAN son útiles para respaldar aplicaciones específicas de áreas metropolitanas, como servicios de videoconferencia, transmisión de datos a alta velocidad, sistemas de vigilancia y acceso a internet de alta velocidad para empresas y usuarios.  2. Componentes de una MAN:      Enrutadores y Dispositivos de Red: Al igual que en las LAN y WAN, los routers desempeñan un papel fundamental en una MAN. Dirigen el tráfico de datos entre diferentes ubicaciones de la red y determinan la mejor ruta para que los datos lleguen a su destino.        Fibra Óptica y Otros Medios de Transmisión: Dado que las MAN suelen cubrir distancias más largas que las LAN, a menudo utilizan medios de transmisión de alta velocidad, como cables de fibra óptica, para transmitir datos de manera eficiente a través de la ciudad.        Tecnologías de Acceso: Las MAN pueden utilizar una variedad de tecnologías de acceso, como Ethernet metropolitano, redes de fibra óptica, redes de área amplia inalámbrica y otros métodos para conectar ubicaciones remotas.  3. Topologías y Diseño de una MAN:      Topología de Anillo: En una MAN, una topología de anillo es común, donde las ubicaciones se conectan en un círculo cerrado. Esto proporciona redundancia y tolerancia a fallos, ya que si un enlace falla, los datos pueden seguir circulando en la otra dirección.        Topología de Estrella: También es posible utilizar una topología de estrella, donde todas las ubicaciones se conectan a un punto central de la red, como un nodo principal o un centro de datos.  4. Seguridad y Administración:      Seguridad: Al igual que en otras redes, la seguridad es un aspecto crítico de las MAN, ya que transmiten datos a través de áreas urbanas densamente pobladas. Se implementan medidas de seguridad, como cortafuegos, sistemas de detección de intrusiones y autenticación, para proteger la red y los datos transmitidos.        Administración y Supervisión: La administración de una MAN implica la configuración y el monitoreo continuo de dispositivos de red, la gestión del ancho de banda y la implementación de políticas de seguridad en toda la red metropolitana.  5. Ejemplos de MAN:      Metro Ethernet: Es un ejemplo común de una MAN que utiliza tecnología Ethernet para proporcionar servicios de comunicación de alta velocidad en áreas metropolitanas.        Redes de Telecomunicaciones: Las redes de telefonía móvil y las redes de acceso a internet de alta velocidad en áreas metropolitanas son ejemplos de MAN que ofrecen servicios de comunicación a los usuarios urbanos.        Redes de Transporte Público: Algunas ciudades utilizan MAN para supervisar y gestionar sistemas de transporte público, como sistemas de trenes o autobuses.  En resumen, una red MAN es un tipo de infraestructura de comunicación que conecta ubicaciones dentro de una ciudad o una región metropolitana, permitiendo la comunicación y el intercambio de datos a distancias metropolitanas. Estas redes son fundamentales para respaldar aplicaciones urbanas y proporcionar servicios de comunicación eficientes en áreas densamente pobladas.WANUna red WAN, o Red de Área Amplia (Wide Area Network, en inglés), es un tipo de red de comunicación que abarca un área geográfica extensa, generalmente a nivel regional, nacional o incluso internacional. A diferencia de las redes LAN (Redes de Área Local), que se limitan a un espacio geográfico pequeño, las WAN conectan múltiples LAN dispersas geográficamente para permitir la comunicación y el intercambio de datos a larga distancia.1. Propósito y Alcance de una WAN:      Conexión de ubicaciones remotas: El propósito principal de una WAN es conectar diferentes ubicaciones geográficas, como oficinas, sucursales, campus universitarios o filiales de una empresa, que pueden estar separadas por grandes distancias geográficas.        Comunicación a larga distancia: Las WAN permiten la comunicación y el intercambio de datos entre ubicaciones distantes, lo que facilita la colaboración, el acceso a recursos compartidos y la transmisión de información crítica entre lugares lejanos.        Acceso a recursos centralizados: A través de una WAN, las sucursales pueden acceder a recursos centralizados, como bases de datos, servidores de correo electrónico y sistemas de gestión empresarial, ubicados en la sede principal de la organización.  2. Componentes de una WAN:      Routers y Enrutadores: Los routers son dispositivos clave en una WAN. Se utilizan para dirigir el tráfico de datos entre diferentes ubicaciones de la red, determinando la mejor ruta para que los datos lleguen a su destino.        Circuitos y Líneas de Comunicación: Las WAN suelen utilizar líneas de comunicación de alta velocidad, como líneas telefónicas dedicadas, líneas de fibra óptica, conexiones satelitales o conexiones de Internet de banda ancha para transmitir datos a larga distancia.        Protocolos WAN: Para garantizar la interoperabilidad entre diferentes dispositivos y tecnologías de red en una WAN, se utilizan protocolos WAN estándar, como el Protocolo de Internet (IP) y el Protocolo de Control de Transmisión (TCP).  3. Topologías y Diseño de una WAN:      Topología de Estrella: En una WAN, una topología de estrella es común, donde todas las ubicaciones remotas se conectan a una ubicación central (a menudo la sede principal de la organización).        Topología de Malla: En una topología de malla, cada ubicación remota se conecta directamente con todas las demás ubicaciones remotas, lo que proporciona redundancia y una mayor tolerancia a fallos.        Tecnologías de Acceso: Las WAN pueden utilizar una variedad de tecnologías de acceso, como líneas contratadas, conexiones VPN (Redes Privadas Virtuales) a través de Internet, conexiones satelitales o conexiones de fibra óptica, dependiendo de la disponibilidad y los requisitos de velocidad.  4. Seguridad y Administración:      Seguridad: Debido a que las WAN transmiten datos a larga distancia, la seguridad es fundamental. Se implementan medidas de seguridad, como firewalls, cifrado de datos y autenticación, para proteger la confidencialidad y la integridad de los datos transmitidos.        Administración y Supervisión: La administración de una WAN implica la configuración y el monitoreo continuo de los dispositivos de red, la resolución de problemas, la gestión del ancho de banda y la implementación de políticas de seguridad en todas las ubicaciones remotas.  5. Ejemplos de WAN:      Internet: La World Wide Web es un ejemplo masivo de una WAN que conecta usuarios y organizaciones de todo el mundo.        Redes Corporativas: Empresas con múltiples sucursales utilizan WAN para conectar sus oficinas y permitir la transferencia de datos y la comunicación en tiempo real entre ellas.        Redes de Telefonía: Las redes de telefonía móvil y las redes de telefonía fija utilizan WAN para conectar torres de telefonía y centrales telefónicas en todo un país o región.  En resumen, una red WAN es una infraestructura de comunicación esencial que conecta ubicaciones geográficamente dispersas, facilitando la comunicación y el intercambio de datos a larga distancia. Estas redes son vitales para empresas, organizaciones y la conectividad global en la era digital.Otras redes:  LAN inalámbrica (WLAN): Wireless Local Area Network – son similares a las LAN, solo que interconectan de forma inalámbrica a los usuarios y los extremos en un área geográfica pequeña.  Red de área de almacenamiento (SAN): Storage Area Network – son infraestructuras de red diseñadas para admitir servidores de archivos y proporcionar almacenamiento, recuperación y replicación de datos.  Red de área Personal (PAN): PAN – Personal Area Network – es definitivamente el tipo más pequeño de red que puede usar actualmente y el nombre proviene de la red de área personal. Probablemente haya usado esto en la última semana sin siquiera saberlo. Es la red interconectada de dispositivos tecnológicos al alcance de una persona individual, pero generalmente limitada a un alcance de 10 metros como máximo.El InternetInternet es una colección global de redes interconectadas (internetworks o internet para abreviar). En la figura se muestra una forma de ver a la Internet como una colección de LAN y WAN interconectadas.Algunos de los ejemplos de LAN están conectados entre sí a través de una conexión WAN. Las WAN se conectan entre sí. Las líneas de conexión WAN rojas representan todas las variedades de formas en que conectamos las redes. Las WAN pueden conectarse a través de cables de cobre, cables de fibra óptica y transmisiones inalámbricas (no se muestran).Asegurar una comunicación efectiva a través de esta infraestructura diversa requiere la aplicación de tecnologías y estándares consistentes y comúnmente reconocidos, así como la cooperación de muchas agencias de administración de redes. Hay organizaciones que se desarrollaron para ayudar a mantener la estructura y la estandarización de los protocolos y procesos de Internet. Estas organizaciones incluyen el Internet Engineering Task Force (IETF), Internet Corporation for Assigned Names and Numbers (ICANN), y el Internet Architecture Board (IAB), además de muchos otros.Intranets y ExtranetsHay otros dos términos que son similares al término internet: intranet y extranet.El término intranet se utiliza para referirse a la conexión privada de LAN y WAN que pertenecen a una organización. Una intranet está diseñada para que solo puedan acceder a ella los miembros y empleados de la organización, u otras personas autorizadas.Es posible que una organización utilice una extranet para proporcionar acceso seguro a las personas que trabajan para otra organización, pero requieren datos de la empresa. Aquí hay algunos ejemplos de extranets:  Una empresa que proporciona acceso a proveedores y contratistas externos.  Un hospital que proporciona un sistema de reservas a los médicos para que puedan hacer citas para sus pacientes.  Una secretaría de educación local que proporciona información sobre presupuesto y personal a las escuelas del distrito.La figura ilustra los niveles de acceso que los diferentes grupos tienen a una intranet de la empresa, a una extranet de la empresa y a Internet.Redes por tología física1.Red en busRed en busUna red en bus es aquella topología que se caracteriza por tener un único bus de comunicaciones (denominado bus, troncal o backbone) al cual se conectan los diferentes dispositivos. De esta forma todos los dispositivos comparten el mismo canal.Ventajas  Facilidad de implementación y crecimiento.  Fácil adaptación.  Simplicidad en la arquitectura.  Es una red que no ocupa mucho espacio.Desventajas  Hay un límite de equipos dependiendo de la calidad de la señal.  Puede producirse degradación de la señal.  Complejidad de reconfiguración y aislamiento de fallos.  Limitación de las longitudes físicas del canal.  Un problema en el canal usualmente degrada toda la red.  El canal requiere ser correctamente cerrado (caminos cerrados).  Altas pérdidas en la transmisión debido a colisiones entre mensajes.  Alta demanda  ocupa mucho espacio.  Hay mejores opciones de red.2.Red en estrellaRed en estrellaUna red en estrella es una red de computadoras donde las estaciones están conectadas directamente a un punto central y todas las comunicaciones se hacen necesariamente a través de ese punto (conmutador, repetidor o concentrador). Los dispositivos no están directamente conectados entre sí, además de que no se permite tanto tráfico de información. Dada su transmisión, una red en estrella activa tiene un nodo central “activo” que normalmente tiene los medios para prevenir problemas relacionados con el eco.Se utiliza sobre todo para redes locales (LAN). La mayoría de las redes de área local que tienen un conmutador (switch) o un concentrador (hub) siguen esta topología. El punto o nodo central en estas sería el switch o el hub, por el que pasan todos los paquetes de usuarios.Es la topología utilizada por la plataforma de Google.Ventajas  Posee un sistema que permite agregar nuevos equipos fácilmente.  Reconfiguración rápida de cada daño.  Fácil de prevenir daños y/o conflictos, ya que no afecta a los demás equipos si ocurre algún fallo.  Centralización de la red.  Fácil de encontrar fallas de cada uno de ellos.Desventajas  Si el hub (repetidor) o switch central falla, toda la red deja de transmitir.  Es costosa, ya que requiere más cables que otras topologías  El cable viaja por separado del concentrador a cada computadora.3. Red en anilloRed en anilloUna red en anillo es una topología de red en la que cada nodo se conecta exactamente a otros dos nódos, formando una única ruta continua, para las señales a través de cada nodo: un anillo. Los datos viajan de un nodo a otro, y cada nodo maneja cada paquete.Ventajas  Red muy ordenada donde cada dispositivo tiene acceso al token y la oportunidad de transmitir.  Se desempeña mejor que una topología de bus bajo una gran carga de red  No requiere un nodo central para administrar la conectividad entre las computadoras  Debido a la configuración de línea de punto a punto de los dispositivos con un dispositivo en cada lado (cada dispositivo está conectado a su vecino inmediato), es bastante fácil de instalar y reconfigurar, ya que agregar o quitar un dispositivo requiere mover solo dos conexiones.  La configuración de línea punto a punto facilita la identificación y el aislamiento de fallas.  La reconfiguración de las fallas de línea de los anillos bidireccionales puede ser muy rápida, ya que la conmutación se produce en un nivel alto y, por lo tanto, el tráfico no requiere ser redirigido individualmente.Desventajas  Una estación de trabajo defectuosa puede crear problemas para toda la red. Esto se puede resolver utilizando un anillo doble o un switch que cierre la interrupción.  Mover, agregar y cambiar los dispositivos puede afectar la red  El retraso en la comunicación es directamente proporcional al número de nodos en la caja de cambios  El ancho de banda se comparte en todos los enlaces entre dispositivos  Más difícil de configurar que una topología en estrella4. Red anillo dobleUna topología en anillo doble consta de dos anillos concéntricos, donde cada Host de la red está conectado a ambos anillos, aunque los dos anillos no están conectados directamente entre sí. Es análoga a la topología de anillo, con la diferencia de que, para incrementar la confiabilidad y flexibilidad de la red, hay un segundo anillo redundante que conecta los mismos dispositivos. La topología de anillo doble actúa como si fueran dos anillos independientes, de los cuales se usa solamente uno por vez.5. Red en mallaRed en mallaLa topología de malla es en la que cada nodo está conectado a todos los nodos. De esta manera es posible llevar los mensajes de un nodo a otro por distintos caminos. Si la red de malla está completamente conectada, no puede existir absolutamente ninguna interrupción en las comunicaciones.Ventajas  Mayor redundancia, pues existen múltiples caminos para que el paquete llegue a su destino. (Si falla una conexión o un nodo, se encontrará un camino alternativo)  No requiere un nodo (o servidor) central, reduciendo el coste de mantenimiento.Desventajas  La topología malla es muy cara de mantener, ya que se necesita mucho cableado.  Si se utiliza de manera inalámbrica el precio de la instalación es mucho más cara.  Puede dificultar en la instalación de nuevos dispositivos, ya que se necesitaría conectar el dispositivo con todos los otros dispositivos.  Las redes malla son difíciles de gestionar y solucionar problemas.6. Red en árbolRed en árbolLa red en árbol es una topología de red en la que los nodos están colocados en forma de árbol. Desde una visión topológica, es parecida a una serie de redes en estrella interconectadas salvo en que no tiene un concentrador central. En cambio, tiene un nodo de enlace troncal, generalmente ocupado por un hub o switch, desde el que se ramifican los demás nodos. Es una variación de la red en bus, el fallo de un nodo implica una interrupción en las comunicaciones. Se comparte el mismo canal de comunicaciones.La topología en árbol puede verse como una combinación de varias topologías en estrella. Tanto la de árbol como la de estrella son similares a la de bus cuando el nodo de interconexión trabaja en modo difusión, pues la información se propaga hacia todas las estaciones, solo que en esta topología las ramificaciones se extienden a partir de un punto raíz (estrella), a tantas ramificaciones como sean posibles, según las características del árbol.Los problemas asociados a las topologías anteriores radican en que los datos son recibidos por todas las estaciones sin importar para quién vayan dirigidos. Es entonces necesario dotar a la red de un mecanismo que permita identificar al destinatario de los mensajes, para que estos puedan recogerlos a su arribo. Además, debido a la presencia de un medio de transmisión compartido entre muchas estaciones, pueden producirse interferencia entre las señales cuando dos o más estaciones transmiten al mismo tiempo. Es la mejor topología de red que existe y con ella los datos fluyen de una manera más rápida que en los otros tipos de topologías de red.Desventajas  Se requiere mucho cable  Es poco fiable para las empresas distribuidas  La medida de cada segmento viene determinada por el tipo de cable utilizado.  Si se cae el segmento principal todo el segmento también cae.  Es más difícil su configuración.  Si se llegara a desconectar un nodo, todos los que están conectados a él se desconectan tamb7. Red mixta o híbridaRed mixtaEn la topología híbrida o topología mixta las redes pueden utilizar diversas topologías para conectarse.La topología mixta es una de las más frecuentes y se deriva de la unión de varios tipos de topologías de red, de aquí el nombre de “mixtas” o “híbridas”.Ejemplos de topologías mixtas: en árbol, estrella-estrella, bus-estrella, etc.Su implementación se debe a la complejidad de la solución de red, o bien al aumento en el número de dispositivos, lo que hace necesario establecer una topología de este tipo. Las topologías mixtas tienen un costo muy elevado debido a su administración y mantenimiento, ya que cuentan con segmentos de diferentes tipos, lo que obliga a invertir en equipo adicional para lograr la conectividad deseada.Ventajas y desventajasLa topología de red híbrida es sin duda alguna una red bastante confiable cuando se crea de manera correcta. Observando todos los puntos de vulnerabilidad y buscando una posible solución, combinando otro tipo de topología de red se encontrarán resultados positivos.Sin embargo, como ya hemos comentado no todo es perfecto, por tal razón acá te presentaremos algunas ventajas y desventajas que siempre debes tener presente a la hora de establecer este tipo de red."
  },
  
  {
    "title": "Binario, Hexadecimal y Decimal",
    "url": "/rx/posts/binario-hexadecimal-decimal/",
    "categories": "Sistemas Microinformáticos y Redes, Redes Locales",
    "tags": "redes locales, binario, decimal, hexadecimal, smr",
    "date": "2023-09-23 19:30:00 +0000",
    





    
    "snippet": "¿Qué es el sistema binario?El sistema binario es un sistema numérico que utiliza solo dos dígitos para representar números y realizar operaciones matemáticas: 0 y 1. Este sistema es fundamental en ...",
    "content": "¿Qué es el sistema binario?El sistema binario es un sistema numérico que utiliza solo dos dígitos para representar números y realizar operaciones matemáticas: 0 y 1. Este sistema es fundamental en la informática y la electrónica, ya que se adapta perfectamente a la forma en que los ordenadores almacenan y procesan la información en forma de corriente eléctrica (encendido/apagado) y se utiliza como base para todos los cálculos y operaciones que realizan.A diferencia del sistema decimal, que utiliza diez dígitos (0 al 9) para representar números, el sistema binario se limita a dos dígitos, lo que lo hace muy eficiente y fácil de implementar en circuitos electrónicos. Cada dígito binario se llama un “bit” (abreviatura de “binary digit”). Los bits se agrupan en conjuntos más grandes llamados “bytes” para representar información más compleja.El sistema binario se basa en los mismos principios que otros sistemas numéricos, como el decimal. Por ejemplo, en el sistema decimal, el valor de cada posición en un número se multiplica por diez a la potencia de la posición. En el sistema binario, el valor de cada posición se multiplica por dos a la potencia de la posición. Por lo tanto, un número binario se puede expresar como una suma de potencias de dos.Por ejemplo, consideremos el número binario “1011”, que consta de cuatro bits. Podemos calcular su valor en base 10 de la siguiente manera:  El bit más a la derecha tiene un valor de 2^0 = 1.  El siguiente bit tiene un valor de 2^1 = 2.  El siguiente bit tiene un valor de 2^2 = 4.  El bit más a la izquierda tiene un valor de 2^3 = 8.  Entonces, el número binario “1011” en base 10 es igual a 8 + 0 + 2 + 1 = 11.El sistema binario es esencial en la programación de computadoras porque todas las operaciones de la CPU se realizan en binario. Los programas y datos se almacenan en memoria en formato binario, y los circuitos electrónicos dentro de las computadoras utilizan señales binarias para representar y procesar información. Además, el sistema binario se utiliza para representar información en forma de texto, gráficos, audio y video en las computadoras.En resumen, el sistema binario es un sistema numérico que utiliza solo dos dígitos, 0 y 1, para representar números y es fundamental en la informática y la electrónica debido a su eficiencia y capacidad para representar y procesar información en el mundo de las computadoras y la tecnología digital.Pasar de binario a decimalPara convertir un número binario a decimal, simplemente debes entender cómo funcionan las posiciones en el sistema binario y cómo calcular el valor decimal correspondiente. Aquí tienes un paso a paso para realizar esta conversión:      Escribe el número binario que deseas convertir. Por ejemplo, tomemos el número binario “101101”.        Enumera las posiciones de derecha a izquierda, comenzando desde 0 y aumentando en 1 para cada posición hacia la izquierda. Esto se llama “posición de bits” y se usa para asignar poderes de 2 a cada dígito binario. Por ejemplo:              5      4      3      2      1      0              1      0      1      1      0      1        Ahora, para convertir el número binario a decimal, realiza los siguientes pasos para cada dígito binario:          Multiplica el dígito binario (0 o 1) por 2 elevado a la potencia de su posición de bits.      Suma estos valores para obtener el equivalente decimal.      Siguiendo nuestro ejemplo:        Para el bit en la posición 0: 1 * 2^0 = 1.  Para el bit en la posición 1: 0 * 2^1 = 0.  Para el bit en la posición 2: 1 * 2^2 = 4.  Para el bit en la posición 3: 1 * 2^3 = 8.  Para el bit en la posición 4: 0 * 2^4 = 0.  Para el bit en la posición 5: 1 * 2^5 = 32.  Ahora, suma todos estos valores juntos:1 + 4 + 8 + 0 + 32 = 45Entonces, el número binario “101101” es igual a 45 en decimal.En resumen, para convertir un número binario a decimal, debes multiplicar cada dígito binario por 2 elevado a la potencia de su posición de bits correspondiente y luego sumar estos valores. Esto te dará el valor decimal equivalente.Consejos para el paso de binario a decimal  Si el bit de menor peso vale 1 nos encontraremos ante un número impar.  Si añadimos ceros por la izquierda a un número binario, el número no cambia.  Si añadimos ceros por la derecha a un número binario lo estamos multiplicando por dos.  Si el número que es todo unos, una forma rápida de calcular su valor es calcular el siguiente número y restarle uno a posteriori. Es decir, si tengo que obtener el valor de 111111, puedo calcular el valor de 1000000 que es 64 y restarle uno obteniendo que (111111)2 = (63)10.Binario a decimalPasar de decimal a binarioPara convertir un número decimal a binario, debes realizar una serie de divisiones y anotar los restos en cada paso hasta que el cociente sea igual a 0. Aquí tienes un procedimiento paso a paso:Supongamos que deseas convertir el número decimal 45 a binario:Divide el número decimal por 2.  45 ÷ 2 = 22 (cociente) con un resto de 1  Anota el resto (1) a la derecha.Divide el cociente resultante en el paso anterior (22) por 2.  22 ÷ 2 = 11 (cociente) con un resto de 0  Anota el resto (0) a la derecha del resto anterior.Continúa dividiendo el cociente en cada paso por 2 y anotando los restos hasta que obtengas un cociente de 0. Continúa con los pasos anteriores:  11 ÷ 2 = 5 (cociente) con un resto de 1  5 ÷ 2 = 2 (cociente) con un resto de 1  2 ÷ 2 = 1 (cociente) con un resto de 0  1 ÷ 2 = 0 (cociente) con un resto de 1Ahora, escribe los restos en orden inverso, desde abajo hacia arriba. Esto te dará la representación en binario del número decimal.Los restos en orden inverso son 101101.Entonces, el número decimal 45 se convierte en el número binario 101101.En resumen, para convertir un número decimal a binario, divide sucesivamente el número por 2, anotando el resto en cada paso hasta que el cociente sea 0. Luego, escribe los restos en orden inverso para obtener la representación en binario.Decimal a binarioPasar de hexadecimal a binarioPara convertir un número hexadecimal a binario, primero debes comprender la relación entre estos dos sistemas numéricos y luego seguir estos pasos:Convierte cada dígito hexadecimal en su equivalente binario. Aquí está la tabla de conversión:            Hexadecimal      Binario              0      0000              1      0001              2      0010              3      0011              4      0100              5      0101              6      0110              7      0111              8      1000              9      1001              A      1010              B      1011              C      1100              D      1101              E      1110              F      1111      Divide el número hexadecimal en dígitos y reemplaza cada dígito con su equivalente binario. Por ejemplo, si tienes el número hexadecimal “3A7”, lo descompones en dígitos y lo conviertes en binario:3 en hexadecimal es 0011 en binario.A en hexadecimal es 1010 en binario.7 en hexadecimal es 0111 en binario.Concatena los valores binarios resultantes para obtener el número binario equivalente al número hexadecimal original. En este ejemplo, tendrías:3A7 en hexadecimal es igual a 0011 1010 0111 en binario.Así que, has convertido con éxito el número hexadecimal “3A7” en su representación binaria “001110100111”.Este proceso es bastante directo, ya que cada dígito hexadecimal tiene una representación binaria fija, lo que facilita la conversión.Hexadecimal a binarioPasar de binario a hexadecimalPara convertir un número binario a hexadecimal, debes seguir un proceso similar al de la conversión de binario a decimal, pero en lugar de agrupar en potencias de 2 como en el sistema decimal, agruparás los dígitos binarios en grupos de cuatro para obtener su equivalente hexadecimal. Aquí tienes un paso a paso:      Divide el número binario en grupos de cuatro dígitos, comenzando desde la derecha y agregando ceros a la izquierda si es necesario para que cada grupo tenga cuatro dígitos. Si el número de dígitos binarios no es múltiplo de cuatro, agrupa los dígitos restantes en el primer grupo.        Luego, convierte cada grupo de cuatro dígitos binarios en su equivalente hexadecimal utilizando la siguiente tabla de conversión:              Hexadecimal      Binario              0      0000              1      0001              2      0010              3      0011              4      0100              5      0101              6      0110              7      0111              8      1000              9      1001              A      1010              B      1011              C      1100              D      1101              E      1110              F      1111        Escribe el valor hexadecimal resultante para cada grupo de cuatro dígitos binarios y colócalos juntos en orden desde la izquierda hasta la derecha para formar el número hexadecimal.Ejemplo:Supongamos que tenemos el número binario “110101101011”. Lo dividimos en grupos de cuatro:“1101 0110 1011”Ahora, convertimos cada grupo en su equivalente hexadecimal:            1101      0110      1011              D      6      B      Finalmente, juntamos los valores hexadecimales:Entonces, el número binario “110101101011” es igual a “D6B” en hexadecimal.Binario a hexadecimal"
  },
  
  {
    "title": "Introducción a las redes locales",
    "url": "/rx/posts/introduccion-redes-locales/",
    "categories": "Sistemas Microinformáticos y Redes, Redes Locales",
    "tags": "redes locales, teoría, smr",
    "date": "2022-05-16 11:00:00 +0000",
    





    
    "snippet": "IntroducciónLos ordenadores son máquinas especializadas en procesar información de acuerdo con las instrucciones recogidas en un programa. Sin embargo, no siempre la información se produce o se alm...",
    "content": "IntroducciónLos ordenadores son máquinas especializadas en procesar información de acuerdo con las instrucciones recogidas en un programa. Sin embargo, no siempre la información se produce o se almacena en el lugar donde se procesa. Esto añade la necesidad de transportar los datos desde su lugar de origen o almacenamiento hasta el de su proceso, originando una comunicación.A través del cableado de la red se pueden transmitir señales eléctricas adecuadas a la naturaleza del cable, pero la red no solo debe entregar esta señal en su destino, sino que además debe garantizar que la información que originó el emisor llega al receptor de forma íntegra durante todo el recorrido.  ¿Es lo mismo transmisión que comunicación?      No  Sistemas de comunicaciónUn sistema de comunicaciones es un conjunto de elementos que permiten transmitir información desde un punto a otro.Estos elementos son:  El transmisor: es el que envía la información.  El canal de transmisión: es la conexión física entre el transmisor y el receptor (Ejemplo: un cable, el aire, etc.).  La señal: es el fenómeno físico que porta la información sobre el canal de transmisión (Ejemplo: ondas sonoras, señales eléctricas, etc.)  El receptor: es el destinatario de la información.Ventajas de usar una red de ordenadores  Mayor facilidad en la comunicación entre usuarios.  Reducción en el presupuesto para software.  Reducción en el presupuesto para hardware.  Posibilidad de organizar grupos de trabajo.  Mejoras en la administración de los equipos y programas.  Mejoras en la integridad de los datos.  Mayor seguridad para acceder a la información.  ¿Qué es una red de área local?      Una red de área local (LAN) es un sistema informático que permite la conexión entre los ordenadores que se encuentran físicamente próximos entre sí. Sus características son:          Tecnología Broadcast (difusión) con el medio de transmisión compartido.      Capacidad de transmisión comprendida entre 1 Mbps y 1 Gbps.      Extensión máxima no superior a 3 km (una FDDI puede llegar a 200 km).      Uso de un medio de comunicación privado.      La simplicidad del medio de transmisión que utiliza (Cable coaxial, Cables telefónicos y Fibra óptica).      La facilidad con que se pueden efectuar cambios en el Hardware y el Software.      Gran variedad y número de dispositivos conectados.      Posibilidad de conexión con otras redes.      Limitante de 100m, puede llegar a mas si se usan Repetidores.          Componentes de una red de ordenadoresPara poder formar una red de ordenadores se requieren varios elementos:  Cableado (Hardware)  Dispositivos de usuario final (Hardware)  Dispositivos de red (Hardware)  Software de la red y protocolosCableado (Hardware)Es el elemento más específico de la red. En el caso de las redes inalámbricas no existe ya que se sustituye por antenas.El cableado puede ser:  Cable de cobre          Cable telefónico      Cable coaxial      Cable UTP, STP, etc.        Fibra óptica          Mononodo      Multinodo        Lo veremos en detalle en la capa físicaCada tipo de cableado lleva su propio conector.Dispositivos de usuario final (Hardware)Son los ordenadores, impresoras, escáneres, y demás elementos que brindan servicios directamente al usuario.Cada nodo posee una al menos una interfaz de red que es soportada mediante una tarjeta de red. Es decir, un dispositivo físico sobre el que pueda interactuar el software de la red.NIC (Network Interface Card)¿Qué es una interfaz de red?Dispositivos específicos de red (Hardware)Son todos aquellos que conectan entre sí a los dispositivos de usuario final, posibilitando su intercomunicación. Son máquinas especializadas en una o varias funciones de red. Entre estos dispositivos están:  Modem o modulador: para realizar conexiones remotas mediante líneas telefónicas, concentradores y repetidores para regenerar la señal eléctrica en distintos segmentos de red.  Cablemodem: parecido al modem pero envia datos a través del cable coaxial. Está pensado para transportar señales de televisión.  Switch o conmutador: para el intercambio selectivo de tramas de datos entre diferentes segmentos de red.  Router o enrutador: para transportar paquetes entre redes.  Bridge o puente/pasarela: como pueden ser cortafuegos, antivirus, etc.  Repetidor: Se utiliza para regenerar la señal eléctrica de transmisión, ya que esta va perdiendo calidad en función de la distancia de la conexión.  Hub o concentrador: Lo mismo que el repetidor pero multipuerto/multiinterfaz.  Firewall o cortafuegos: Dispositivo encargado de gestionar la seguridad de la red.  ¿Es lo mismo un conmutador y un interruptor on/off?      No.      Software de la red y protocolosTodos los dispositivos activos de la red debe ejecutar operaciones informáticas avanzadas para cumplir con los protocolos de red por lo que deben tener un software de red.Es decir, es el conjunto de programas y ficheros de configuración que permiten la comunicación entre elementos de una red. Los podemos dividir en dos.  ¿Qué es un protocolo?      Son un conjunto de reglas que se establecen entre el transmisor y receptor de un proceso de comunicación que permite asegurar la transmisión de datos entre los dos extremos. Ejemplo: protocolo IP (dicta las reglas para las direcciones IP).      BinarioLeer el artículo Binario.Velocidad de transmisiónSe trata de relacionar la cantidad de información que se transfiere con el tiempo que tarda en ser transferida.Velocidad = información / tiempo  El tiempo se representa en segundos  La información en bits o Bytes  1 bit es un 0 o un 1  1 Byte son 8 bits  1 KB son 1024 B  1 MB son 1024 KB  1 GB son 1024 MB  Nosotros vamos a usar los KiloBytes antiguos  ¿Por qué un KiloByte son 1024 Bytes?      Trabajando con un sistema binario puede resultar natural utilizar potencias de dos por lo que se hizo una aproximación al sistema internacional de medida utilizando base 2.          210 bytes = 1024 bytes = 1 Kilobyte        Aunque técnicamente deberíamos utilizar la palabra kibi en lugar de Kilo ya que Kilo significa 1000.          210 bytes = 1024 bytes = 1 kibibyte ✅        Esta última nomenclatura ha sido adoptada por Ubuntu y por Apple pero no por Microsoft.    ¿Cuantos kilobits son un Kilobyte?            1 KByte son 1024 Bytes      1024 Bytes son 8192 bits      8192 bits son 8,192 Kbits              ¡No es solo multiplicar por 8! ¡Hay que pasar a bits y después a la unidad que nos pidan!            ¿Cuantos Kilobytes son un kilobit?            1 Kbit son 1000 bits      1000 bits son 125 Bytes      125 Bytes son 0,122 Kbytes              ¡No es solo dividir por 8! ¡Hay que pasar a bits y después a la unidad que nos pidan!          ¿Qué unidades de velocidad existen?  bps = b/s ➡ bits por segundo  Bps = B/s ➡ Bytes por segundo  Kbps = Kb/s ➡ kilobits por segundo  KBps = KB/s ➡ KiloBytes por segundo  Mbps = Mb/s ➡ Megabits por segundo  MBps = MB/s ➡ MegaBytes por segundo  ¿A qué velocidad en Mbps se transfiere un fichero de 3 MB si tarda 8 segundos en llegar?            Velocidad = información / tiempo      Velocidad = 3 MB / 8 seg      Velocidad = 3 * 1.024 KB / 8 seg      Velocidad = 3.072 KB / 8 seg      Velocidad = 3.072 KB * 1.024 B / 8 seg      Velocidad = 3.145.728 B / 8 seg      Velocidad = 3.145.728 * 8 b / 8 seg      Velocidad = 3.145.728 b / seg      Velocidad = 3.145,728 Kb / seg      Velocidad = 3,145728 Mb / seg      Velocidad = 3,145728 Mbps          ¿A cuántos Mbps se transfiere 1 GB en  4 minutos y 16 segundos?Clasificación de redesLeer artículo Clasificación de redes.Modelos de red: OSI vs TCP/IPLeer artículo Modelos de red: OSI vs TCP/IP.Computación en la nube, interred y estándaresComputación en la nubeLa computación en la nube (cloud computing) es un nuevo modelo de utilización de los servicios informáticos de modo que se brinda como servicio deslocalizado.Por ejemplo: aunque se esté trabajando desde un ordenador personal, el espacio de almacenamiento en donde se guardan los ficheros puede estar en un proveedor de almacenamiento al otro lado de Internet (en la nube).Nombrad tres ventajas de la computación en la nube      ¿Os podéis crear una nube en vuestra propia casa?        Si. Existen varias formas:          Con un PC o portatil viejo se puede montar un servidor FTP o de Nextcloud.      Comprando un NAS          ¿Conoces alguna alternativa a OneDrive/ Dropbox que puedas instalar en tu casa?InterredUn conjunto de redes conectadas se le denomina interred. Lo más habitual es encontrar un conjunto de LANs conectadas mediante una WAN. No obstante, el término interred representa la interconexión de varias redes diferentes. Por tanto, una interred puede estar formada únicamente por dos LANs conectadas sin necesidad de WAN.EstándaresLos estándares son unas guías para los fabricantes, vendedores, agencias de gobierno y otros proveedores de servicios, para asegurar el tipo de interconectividad necesario en los mercados actuales y en las comunicaciones internacionales.Se pueden clasificar en 3 categorías:  Estándares de facto (o hecho)  Estándares de iure (o jure)  Estándares de acuerdoEstándares de facto (o hecho)Son estándares que no han sido aprobados por una organización reconocida pero han sido aceptados como estándares debido a su amplio uso. Hay dos tipos:  Estándares propietarios o cerrados. 🔒  Estándares no propietarios o abiertos. 🔓Estándares de iure (o jure)Son aquellos que han sido legislados por un organismo oficialmente reconocido.Estándares de acuerdoSon aquellos que son definidos por convenio, alianza o pacto entre proveedores, usuarios o manufactureros.¿Qué es un estándar de facto?IEEE 802IEEE 802 del Institute of Electrical and Electronics Engineers (máz conocido por sus siglas, IEEE). Se identifica también con las siglas LMSC (LAN/MAN Standards Committee). Su misión se centra en desarrollar estándares de redes de área local (LAN) y redes de área metropolitana (MAN), principalmente en las dos capas inferiores del modelo OSI.IEEE 802 fue un proyecto creado en febrero de 1980 paralelamente al diseño del Modelo OSI. Se desarrolló con el fin de crear estándares para que diferentes tipos de tecnologías pudieran integrarse y trabajar juntas. El proyecto 802 define aspectos relacionados con el cableado físico y la transmisión de datos.Los grupos de trabajo de trabajo del IEEE 802 son:  802.1d \tSpanning Tree Protocol  IEEE 802.2 \tControl de enlace lógico (LLC)  IEEE 802.3 \tCSMA / CD (ETHERNET)  IEEE 802.3ab \tGigabit Ethernet sobre 4 pares de cable UTP Cat5e o superior  IEEE 802.3ae \t10 Gigabit Ethernet  IEEE 802.5 \tToken ring LAN (topología en anillo)  IEEE 802.11 \tRedes inalámbricas WLAN. (Wi-Fi)  IEEE 802.16 \tRedes de acceso metropolitanas sin hilos de banda ancha (WIMAX)Bibliografía  ¿1KByte = 1000 Bytes o 1KByte = 1024 Bytes?  Red de área local (LAN)  IEEE 802 (Wikipedia)"
  },
  
  {
    "title": "Text and Typography",
    "url": "/rx/posts/text/",
    "categories": "Blogging, Demo",
    "tags": "typography",
    "date": "2019-08-08 03:33:00 +0000",
    





    
    "snippet": "«««&lt; HEADHeadings Hola mundo=======Headings                                                        b9e7f069fa38141f5b5cba8b3506ad318c821702                                          H1 - headingH...",
    "content": "«««&lt; HEADHeadings Hola mundo=======Headings                                                        b9e7f069fa38141f5b5cba8b3506ad318c821702                                          H1 - headingH2 - headingH3 - headingH4 - headingParagraphQuisque egestas convallis ipsum, ut sollicitudin risus tincidunt a. Maecenas interdum malesuada egestas. Duis consectetur porta risus, sit amet vulputate urna facilisis ac. Phasellus semper dui non purus ultrices sodales. Aliquam ante lorem, ornare a feugiat ac, finibus nec mauris. Vivamus ut tristique nisi. Sed vel leo vulputate, efficitur risus non, posuere mi. Nullam tincidunt bibendum rutrum. Proin commodo ornare sapien. Vivamus interdum diam sed sapien blandit, sit amet aliquam risus mattis. Nullam arcu turpis, mollis quis laoreet at, placerat id nibh. Suspendisse venenatis eros eros.ListsOrdered list  Firstly  Secondly  ThirdlyUnordered list  Chapter          Section                  Paragraph                    ToDo list  Job          Step 1      Step 2      Step 3      Description list  Sun  the star around which the earth orbits  Moon  the natural satellite of the earth, visible by reflected light from the sunBlock Quote  This line shows the block quote.Prompts  An example showing the tip type prompt.  An example showing the info type prompt.  An example showing the warning type prompt.  An example showing the danger type prompt.Tables            Company      Contact      Country                  Alfreds Futterkiste      Maria Anders      Germany              Island Trading      Helen Bennett      UK              Magazzini Alimentari Riuniti      Giovanni Rovelli      Italy      Linkshttp://127.0.0.1:4000FootnoteClick the hook will locate the footnote1, and here is another footnote2.Inline codeThis is an example of Inline Code.FilepathHere is the /path/to/the/file.extend.Code blocksCommonThis is a common code snippet, without syntax highlight and line number.Specific Languageif [ $? -ne 0 ]; then  echo \"The command was not successful.\";  #do the needful / exitfi;Specific filename@import  \"colors/light-typography\",  \"colors/dark-typography\";MathematicsThe mathematics powered by MathJax:\\[\\begin{equation}  \\sum_{n=1}^\\infty 1/n^2 = \\frac{\\pi^2}{6}  \\label{eq:series}\\end{equation}\\]We can reference the equation as \\eqref{eq:series}.When $a \\ne 0$, there are two solutions to $ax^2 + bx + c = 0$ and they are\\[x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}\\]Mermaid SVG gantt  title  Adding GANTT diagram functionality to mermaid  apple :a, 2017-07-20, 1w  banana :crit, b, 2017-07-23, 1d  cherry :active, c, after b a, 1dImagesDefault (with caption)Full screen width and center alignmentLeft alignedFloat to leftPraesent maximus aliquam sapien. Sed vel neque in dolor pulvinar auctor. Maecenas pharetra, sem sit amet interdum posuere, tellus lacus eleifend magna, ac lobortis felis ipsum id sapien. Proin ornare rutrum metus, ac convallis diam volutpat sit amet. Phasellus volutpat, elit sit amet tincidunt mollis, felis mi scelerisque mauris, ut facilisis leo magna accumsan sapien. In rutrum vehicula nisl eget tempor. Nullam maximus ullamcorper libero non maximus. Integer ultricies velit id convallis varius. Praesent eu nisl eu urna finibus ultrices id nec ex. Mauris ac mattis quam. Fusce aliquam est nec sapien bibendum, vitae malesuada ligula condimentum.Float to rightPraesent maximus aliquam sapien. Sed vel neque in dolor pulvinar auctor. Maecenas pharetra, sem sit amet interdum posuere, tellus lacus eleifend magna, ac lobortis felis ipsum id sapien. Proin ornare rutrum metus, ac convallis diam volutpat sit amet. Phasellus volutpat, elit sit amet tincidunt mollis, felis mi scelerisque mauris, ut facilisis leo magna accumsan sapien. In rutrum vehicula nisl eget tempor. Nullam maximus ullamcorper libero non maximus. Integer ultricies velit id convallis varius. Praesent eu nisl eu urna finibus ultrices id nec ex. Mauris ac mattis quam. Fusce aliquam est nec sapien bibendum, vitae malesuada ligula condimentum.Dark/Light mode &amp; ShadowThe image below will toggle dark/light mode based on theme preference, notice it has shadows.VideoReverse Footnote            The footnote source &#8617;              The 2nd footnote source &#8617;      "
  }
  
]

